{"ast":null,"code":"export function integerLogLike(v) {\n  return Math.floor(Math.log(v) / Math.log(2));\n}\nexport function bigIntLogLike(v) {\n  if (v === BigInt(0)) return BigInt(0);\n  return BigInt(v.toString().length);\n}\n\nfunction biasNumericRange(min, max, logLike) {\n  if (min === max) {\n    return [{\n      min: min,\n      max: max\n    }];\n  }\n\n  if (min < 0 && max > 0) {\n    const logMin = logLike(-min);\n    const logMax = logLike(max);\n    return [{\n      min: -logMin,\n      max: logMax\n    }, {\n      min: max - logMax,\n      max: max\n    }, {\n      min: min,\n      max: min + logMin\n    }];\n  }\n\n  const logGap = logLike(max - min);\n  const arbCloseToMin = {\n    min: min,\n    max: min + logGap\n  };\n  const arbCloseToMax = {\n    min: max - logGap,\n    max: max\n  };\n  return min < 0 ? [arbCloseToMax, arbCloseToMin] : [arbCloseToMin, arbCloseToMax];\n}\n\nexport { biasNumericRange };","map":null,"metadata":{},"sourceType":"module"}