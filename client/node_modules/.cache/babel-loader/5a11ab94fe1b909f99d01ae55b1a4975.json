{"ast":null,"code":"export function indexToMappedConstantMapperFor(entries) {\n  return function indexToMappedConstantMapper(choiceIndex) {\n    let idx = -1;\n    let numSkips = 0;\n\n    while (choiceIndex >= numSkips) {\n      numSkips += entries[++idx].num;\n    }\n\n    return entries[idx].build(choiceIndex - numSkips + entries[idx].num);\n  };\n}\n\nfunction buildReverseMapping(entries) {\n  const reverseMapping = {\n    mapping: new Map(),\n    negativeZeroIndex: undefined\n  };\n  let choiceIndex = 0;\n\n  for (let entryIdx = 0; entryIdx !== entries.length; ++entryIdx) {\n    const entry = entries[entryIdx];\n\n    for (let idxInEntry = 0; idxInEntry !== entry.num; ++idxInEntry) {\n      const value = entry.build(idxInEntry);\n\n      if (value === 0 && 1 / value === Number.NEGATIVE_INFINITY) {\n        reverseMapping.negativeZeroIndex = choiceIndex;\n      } else {\n        reverseMapping.mapping.set(value, choiceIndex);\n      }\n\n      ++choiceIndex;\n    }\n  }\n\n  return reverseMapping;\n}\n\nexport function indexToMappedConstantUnmapperFor(entries) {\n  let reverseMapping = null;\n  return function indexToMappedConstantUnmapper(value) {\n    if (reverseMapping === null) {\n      reverseMapping = buildReverseMapping(entries);\n    }\n\n    const choiceIndex = Object.is(value, -0) ? reverseMapping.negativeZeroIndex : reverseMapping.mapping.get(value);\n\n    if (choiceIndex === undefined) {\n      throw new Error('Unknown value encountered cannot be built using this mapToConstant');\n    }\n\n    return choiceIndex;\n  };\n}","map":null,"metadata":{},"sourceType":"module"}