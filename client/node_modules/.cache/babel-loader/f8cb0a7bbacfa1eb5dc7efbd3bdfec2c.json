{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\Admin\\\\admin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport AdminFunctionBox from '../../FunctionBox/AdminFuctionBox/adminFunctionBox';\nimport emailjs, { init } from '@emailjs/browser';\ninit(\"2pvfnImfRTGi6OSnk\");\n\nconst Admin = props => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        genProfTicketDetails = _useState2[0],\n        setGenProfTicketDetails = _useState2[1];\n\n  const _useState3 = useState({\n    email: '',\n    password: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genProfTicketErrors = _useState4[0],\n        setGenProfTicketErrors = _useState4[1];\n\n  const _useState5 = useState({\n    old: '',\n    new: '',\n    confirm: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        changePasswordDetails = _useState6[0],\n        setChangePasswordDetails = _useState6[1];\n\n  const _useState7 = useState({\n    old: '',\n    new: '',\n    confirm: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        changePasswordErrors = _useState8[0],\n        setChangePassworErrors = _useState8[1];\n\n  const _useState9 = useState({\n    message: '',\n    severity: '',\n    open: false\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        toast = _useState10[0],\n        setToast = _useState10[1]; // Asyncs:\n\n\n  const writeTicketToBlockChain = async () => {\n    const feedbackData = props.contract.feedbackData;\n\n    if (feedbackData != undefined) {\n      let result = await feedbackData.methods.generateTokenForProfReg(genProfTicketDetails.password).send({\n        from: props.account\n      });\n      result = result.events.tokenGenerated.returnValues[0];\n      console.log(result);\n      return result;\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  };\n\n  const writePasswordToBlockChain = async () => {\n    const feedbackData = props.contract.feedbackData;\n\n    if (feedbackData != undefined) {\n      let result = await feedbackData.methods.updatePassword(changePasswordDetails.old, changePasswordDetails.new).send({\n        from: props.account\n      });\n      result = result.events.tokenGenerated.returnValues[0];\n      console.log(result);\n      return true;\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleGenProfTicketInputChange = event => {\n    setGenProfTicketDetails(_objectSpread({}, genProfTicketDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, genProfTicketErrors);\n\n    updatedErrors = validateGenProfTicketInput(event.target.name, event.target.value, updatedErrors);\n    setGenProfTicketErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleChangePasswordInputChange = event => {\n    setChangePasswordDetails(_objectSpread({}, changePasswordDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, changePasswordErrors);\n\n    updatedErrors = validateChnagePasswordInput(event.target.name, event.target.value, updatedErrors);\n    setChangePassworErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleGenProfTicketSubmit = () => {\n    let updatedErrors = _objectSpread({}, genProfTicketErrors);\n\n    for (var key in genProfTicketDetails) if (genProfTicketDetails.hasOwnProperty(key)) updatedErrors = validateGenProfTicketInput(key, genProfTicketDetails[key], updatedErrors);\n\n    setGenProfTicketErrors(_objectSpread({}, updatedErrors));\n\n    const fastgenProfTicketErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastgenProfTicketErrors) {\n      if (fastgenProfTicketErrors.hasOwnProperty(key)) if (fastgenProfTicketErrors[key] != '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(genProfTicketDetails);\n\n    if (ready) {\n      writeTicketToBlockChain().then(r => {\n        console.log(r); // Send mail\n        //     let templateParams = {\n        //         from: 'SYSTEM',\n        //         to: genProfTicketDetails.email,\n        //         subject: \"Registration Ticket\",\n        //         reply_to: \"feedback.dapp@gmail.com\",\n        //         html: \"<b>Respected sir</b>, <br><br>\" +\n        //             \"Please use this unique ticket: [ <b>\" + r + \"</b> ] to get registered. Please do not share this with anyone. <br><br>\" +\n        //             \"Best wishes,<br>\" +\n        //             \"Feedback-DApp team\",\n        //     }\n        //     emailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams)\n        //         .then(function (response) {\n        //             setToast({ message: 'TxN SUCCESS: Ticket generated and sent', severity: 'success', open: true });\n        //             setTimeout(() => props.closeModal(), 3500);\n        //             console.log('Email success: ', response.status, response.text);\n        //         }, function (error) {\n        //             setToast({ message: 'ERROR: While sending email', severity: 'error', open: true });\n        //             console.log('Email fail: ', error);\n        //         });\n      }).catch(e => {\n        ready = false;\n        console.log(e);\n        if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else if (e.code == '-32603') setToast({\n          message: 'TxN ERROR: Invalid password',\n          severity: 'error',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Something went wrong',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  };\n\n  const handlePasswordSubmit = () => {\n    let updatedErrors = _objectSpread({}, changePasswordErrors);\n\n    for (var key in changePasswordDetails) if (changePasswordDetails.hasOwnProperty(key)) updatedErrors = validateChnagePasswordInput(key, changePasswordDetails[key], updatedErrors);\n\n    setChangePassworErrors(_objectSpread({}, updatedErrors));\n\n    const fastChangePassworErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastChangePassworErrors) {\n      if (fastChangePassworErrors.hasOwnProperty(key)) if (fastChangePassworErrors[key] != '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(changePasswordDetails);\n\n    if (ready) {\n      writePasswordToBlockChain().then(r => {\n        console.log('Password changed: ', r);\n        setToast({\n          message: 'TxN SUCCESS: Password changed',\n          severity: 'success',\n          open: true\n        });\n        setTimeout(() => props.closeModal(), 3500);\n      }).catch(e => {\n        console.log(e);\n        if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else if (props.contract.feedbackData == null) setToast({\n          message: 'INTERNAL-ERROR: Contract not deployed',\n          severity: 'error',\n          open: true\n        });else if (e.code == '-32603') setToast({\n          message: 'TxN ERROR: Old password is invalid',\n          severity: 'error',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Something went wrong',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  }; // Validators\n\n\n  const validateGenProfTicketInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'password':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else updatedErrors[field] = '';\n        break;\n\n      case 'email':\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!re.test(value)) updatedErrors[field] = 'Invalid email!';else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in'))) updatedErrors[field] = 'Accepted domains are @itbhu.ac.in or @iitbhu.ac.in';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  const validateChnagePasswordInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'old':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else updatedErrors[field] = '';\n        break;\n\n      case 'new':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length < 5) updatedErrors[field] = 'Minimum length: 5';else if (value.length > 30) updatedErrors[field] = 'Maximum length: 30';else if (/[a-zA-Z]/g.test(value) == false) updatedErrors[field] = 'Should contain at least one alphabet';else if (/\\d/.test(value) == false) updatedErrors[field] = 'Should contain at least one digit';else updatedErrors[field] = '';\n        break;\n\n      case 'confirm':\n        if (value != changePasswordDetails.new) updatedErrors[field] = 'Should match the new password';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  }, React.createElement(AdminFunctionBox, {\n    data: _objectSpread({}, genProfTicketDetails, {}, changePasswordDetails),\n    errors: _objectSpread({}, genProfTicketErrors, {}, changePasswordErrors),\n    handleInputChange: handleGenProfTicketInputChange,\n    handleSubmit: handleGenProfTicketSubmit,\n    handlePasswordInputChange: handleChangePasswordInputChange,\n    handlePasswordSubmit: handlePasswordSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }));\n};\n\nexport default Admin;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/Admin/admin.js"],"names":["React","useState","AdminFunctionBox","emailjs","init","Admin","props","email","password","genProfTicketDetails","setGenProfTicketDetails","genProfTicketErrors","setGenProfTicketErrors","old","new","confirm","changePasswordDetails","setChangePasswordDetails","changePasswordErrors","setChangePassworErrors","message","severity","open","toast","setToast","writeTicketToBlockChain","feedbackData","contract","undefined","result","methods","generateTokenForProfReg","send","from","account","events","tokenGenerated","returnValues","console","log","writePasswordToBlockChain","updatePassword","handleGenProfTicketInputChange","event","target","name","value","updatedErrors","validateGenProfTicketInput","handleChangePasswordInputChange","validateChnagePasswordInput","handleGenProfTicketSubmit","key","hasOwnProperty","fastgenProfTicketErrors","ready","then","r","catch","e","code","handlePasswordSubmit","fastChangePassworErrors","setTimeout","closeModal","field","length","re","test","endsWith"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport AdminFunctionBox from '../../FunctionBox/AdminFuctionBox/adminFunctionBox';\r\n\r\nimport emailjs, { init } from '@emailjs/browser';\r\ninit(\"2pvfnImfRTGi6OSnk\");\r\n\r\nconst Admin = (props) => {\r\n\tconst [genProfTicketDetails, setGenProfTicketDetails] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\r\n\tconst [genProfTicketErrors, setGenProfTicketErrors] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\r\n\tconst [changePasswordDetails, setChangePasswordDetails] = useState({\r\n\t\told: '',\r\n\t\tnew: '',\r\n\t\tconfirm: ''\r\n\t});\r\n\r\n\tconst [changePasswordErrors, setChangePassworErrors] = useState({\r\n\t\told: '',\r\n\t\tnew: '',\r\n\t\tconfirm: ''\r\n\t});\r\n\r\n\r\n\tconst [toast, setToast] = useState({\r\n\t\tmessage: '',\r\n\t\tseverity: '',\r\n\t\topen: false\r\n\t})\r\n\r\n\t// Asyncs:\r\n\tconst writeTicketToBlockChain = async () => {\r\n\t\tconst feedbackData = props.contract.feedbackData;\r\n\t\tif (feedbackData != undefined) {\r\n\t\t\tlet result = await feedbackData.methods.generateTokenForProfReg(genProfTicketDetails.password).send({ from: props.account });\r\n\t\t\tresult = result.events.tokenGenerated.returnValues[0];\r\n\t\t\tconsole.log(result);\r\n\t\t\treturn result\r\n\t\t} else {\r\n\t\t\tsetToast({ message: 'INTERNAL-ERROR: Contract not deployed', severity: 'error', open: true });\r\n\t\t\tconsole.log('Feedback contract not deployed');\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst writePasswordToBlockChain = async () => {\r\n\t\tconst feedbackData = props.contract.feedbackData;\r\n\t\tif (feedbackData != undefined) {\r\n\t\t\tlet result = await feedbackData.methods.updatePassword(changePasswordDetails.old, changePasswordDetails.new).send({ from: props.account });\r\n\t\t\tresult = result.events.tokenGenerated.returnValues[0];\r\n\t\t\tconsole.log(result);\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tsetToast({ message: 'INTERNAL-ERROR: Contract not deployed', severity: 'error', open: true });\r\n\t\t\tconsole.log('Feedback contract not deployed');\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Handlers\r\n\tconst handleGenProfTicketInputChange = (event) => {\r\n\t\tsetGenProfTicketDetails({\r\n\t\t\t...genProfTicketDetails,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\r\n\t\tlet updatedErrors = { ...genProfTicketErrors };\r\n\t\tupdatedErrors = validateGenProfTicketInput(event.target.name, event.target.value, updatedErrors);\r\n\t\tsetGenProfTicketErrors({ ...updatedErrors });\r\n\t};\r\n\r\n\r\n\tconst handleChangePasswordInputChange = (event) => {\r\n\t\tsetChangePasswordDetails({\r\n\t\t\t...changePasswordDetails,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\r\n\t\tlet updatedErrors = { ...changePasswordErrors };\r\n\t\tupdatedErrors = validateChnagePasswordInput(event.target.name, event.target.value, updatedErrors);\r\n\t\tsetChangePassworErrors({ ...updatedErrors });\r\n\t};\r\n\r\n\tconst handleGenProfTicketSubmit = () => {\r\n\t\tlet updatedErrors = { ...genProfTicketErrors };\r\n\r\n\t\tfor (var key in genProfTicketDetails)\r\n\t\t\tif (genProfTicketDetails.hasOwnProperty(key))\r\n\t\t\t\tupdatedErrors = validateGenProfTicketInput(key, genProfTicketDetails[key], updatedErrors);\r\n\r\n\t\tsetGenProfTicketErrors({ ...updatedErrors });\r\n\t\tconst fastgenProfTicketErrors = { ...updatedErrors };\r\n\r\n\t\tlet ready = true;\r\n\t\tfor (var key in fastgenProfTicketErrors) {\r\n\t\t\tif (fastgenProfTicketErrors.hasOwnProperty(key))\r\n\t\t\t\tif (fastgenProfTicketErrors[key] != '')\r\n\t\t\t\t\tready = false;\r\n\t\t}\r\n\r\n\t\tconsole.log('Ready:', ready);\r\n\t\tconsole.log(genProfTicketDetails);\r\n\r\n\t\tif (ready) {\r\n\t\t\twriteTicketToBlockChain()\r\n\t\t\t\t.then(r => {\r\n\t\t\t\t\tconsole.log(r);\r\n\r\n\t\t\t\t\t// Send mail\r\n\t\t\t\t\t//     let templateParams = {\r\n\t\t\t\t\t//         from: 'SYSTEM',\r\n\t\t\t\t\t//         to: genProfTicketDetails.email,\r\n\t\t\t\t\t//         subject: \"Registration Ticket\",\r\n\t\t\t\t\t//         reply_to: \"feedback.dapp@gmail.com\",\r\n\t\t\t\t\t//         html: \"<b>Respected sir</b>, <br><br>\" +\r\n\t\t\t\t\t//             \"Please use this unique ticket: [ <b>\" + r + \"</b> ] to get registered. Please do not share this with anyone. <br><br>\" +\r\n\t\t\t\t\t//             \"Best wishes,<br>\" +\r\n\t\t\t\t\t//             \"Feedback-DApp team\",\r\n\t\t\t\t\t//     }\r\n\r\n\t\t\t\t\t//     emailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams)\r\n\t\t\t\t\t//         .then(function (response) {\r\n\t\t\t\t\t//             setToast({ message: 'TxN SUCCESS: Ticket generated and sent', severity: 'success', open: true });\r\n\t\t\t\t\t//             setTimeout(() => props.closeModal(), 3500);\r\n\t\t\t\t\t//             console.log('Email success: ', response.status, response.text);\r\n\t\t\t\t\t//         }, function (error) {\r\n\t\t\t\t\t//             setToast({ message: 'ERROR: While sending email', severity: 'error', open: true });\r\n\t\t\t\t\t//             console.log('Email fail: ', error);\r\n\t\t\t\t\t//         });\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tready = false;\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\tif (e.code == '4001')\r\n\t\t\t\t\t\tsetToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n\t\t\t\t\telse if (e.code == '-32603')\r\n\t\t\t\t\t\tsetToast({ message: 'TxN ERROR: Invalid password', severity: 'error', open: true });\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tsetToast({ message: 'TxN ERROR: Something went wrong', severity: 'error', open: true });\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handlePasswordSubmit = () => {\r\n\t\tlet updatedErrors = { ...changePasswordErrors };\r\n\r\n\t\tfor (var key in changePasswordDetails)\r\n\t\t\tif (changePasswordDetails.hasOwnProperty(key))\r\n\t\t\t\tupdatedErrors = validateChnagePasswordInput(key, changePasswordDetails[key], updatedErrors);\r\n\r\n\t\tsetChangePassworErrors({ ...updatedErrors });\r\n\t\tconst fastChangePassworErrors = { ...updatedErrors };\r\n\r\n\t\tlet ready = true;\r\n\t\tfor (var key in fastChangePassworErrors) {\r\n\t\t\tif (fastChangePassworErrors.hasOwnProperty(key))\r\n\t\t\t\tif (fastChangePassworErrors[key] != '')\r\n\t\t\t\t\tready = false;\r\n\t\t}\r\n\r\n\t\tconsole.log('Ready:', ready);\r\n\t\tconsole.log(changePasswordDetails);\r\n\r\n\t\tif (ready) {\r\n\t\t\twritePasswordToBlockChain()\r\n\t\t\t\t.then(r => {\r\n\t\t\t\t\tconsole.log('Password changed: ', r);\r\n\t\t\t\t\tsetToast({ message: 'TxN SUCCESS: Password changed', severity: 'success', open: true });\r\n\t\t\t\t\tsetTimeout(() => props.closeModal(), 3500);\r\n\t\t\t\t}\r\n\t\t\t\t).catch(e => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\tif (e.code == '4001')\r\n\t\t\t\t\t\tsetToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n\t\t\t\t\telse if (props.contract.feedbackData == null)\r\n\t\t\t\t\t\tsetToast({ message: 'INTERNAL-ERROR: Contract not deployed', severity: 'error', open: true });\r\n\t\t\t\t\telse if (e.code == '-32603')\r\n\t\t\t\t\t\tsetToast({ message: 'TxN ERROR: Old password is invalid', severity: 'error', open: true });\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tsetToast({ message: 'TxN ERROR: Something went wrong', severity: 'error', open: true });\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t// Validators\r\n\tconst validateGenProfTicketInput = (field, value, updatedErrors) => {\r\n\t\tswitch (field) {\r\n\t\t\tcase 'password':\r\n\t\t\t\tif (value.length == 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'email':\r\n\t\t\t\tvar re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\t\t\t\tif (value.length == 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse if (!re.test(value))\r\n\t\t\t\t\tupdatedErrors[field] = 'Invalid email!';\r\n\t\t\t\telse if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in')))\r\n\t\t\t\t\tupdatedErrors[field] = 'Accepted domains are @itbhu.ac.in or @iitbhu.ac.in';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn updatedErrors;\r\n\t}\r\n\r\n\r\n\tconst validateChnagePasswordInput = (field, value, updatedErrors) => {\r\n\t\tswitch (field) {\r\n\t\t\tcase 'old':\r\n\t\t\t\tif (value.length == 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak\r\n\t\t\tcase 'new':\r\n\t\t\t\tif (value.length == 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse if (value.length < 5)\r\n\t\t\t\t\tupdatedErrors[field] = 'Minimum length: 5';\r\n\t\t\t\telse if (value.length > 30)\r\n\t\t\t\t\tupdatedErrors[field] = 'Maximum length: 30';\r\n\t\t\t\telse if (/[a-zA-Z]/g.test(value) == false)\r\n\t\t\t\t\tupdatedErrors[field] = 'Should contain at least one alphabet';\r\n\t\t\t\telse if (/\\d/.test(value) == false)\r\n\t\t\t\t\tupdatedErrors[field] = 'Should contain at least one digit';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'confirm':\r\n\t\t\t\tif (value != changePasswordDetails.new)\r\n\t\t\t\t\tupdatedErrors[field] = 'Should match the new password';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn updatedErrors;\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className='cards'>\r\n\t\t\t<AdminFunctionBox\r\n\t\t\t\tdata={{ ...genProfTicketDetails, ...changePasswordDetails }}\r\n\t\t\t\terrors={{ ...genProfTicketErrors, ...changePasswordErrors }}\r\n\t\t\t\thandleInputChange={handleGenProfTicketInputChange}\r\n\t\t\t\thandleSubmit={handleGenProfTicketSubmit}\r\n\t\t\t\thandlePasswordInputChange={handleChangePasswordInputChange}\r\n\t\t\t\thandlePasswordSubmit={handlePasswordSubmit}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}