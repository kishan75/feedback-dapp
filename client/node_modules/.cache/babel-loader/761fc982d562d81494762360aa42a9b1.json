{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridSelector } from '../../../hooks/utils/useGridSelector';\nimport { gridSortModelSelector } from '../../../hooks/features/sorting/gridSortingSelector';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst SortGridMenuItems = props => {\n  const column = props.column,\n        onClick = props.onClick;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const sortDirection = React.useMemo(() => {\n    if (!column) {\n      return null;\n    }\n\n    const sortItem = sortModel.find(item => item.field === column.field);\n    return sortItem == null ? void 0 : sortItem.sort;\n  }, [column, sortModel]);\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(column, direction);\n  }, [apiRef, column, onClick]);\n\n  if (!column || !column.sortable) {\n    return null;\n  }\n\n  return (\n    /*#__PURE__*/\n    _jsxs(React.Fragment, {\n      children: [\n      /*#__PURE__*/\n      _jsx(MenuItem, {\n        onClick: onSortMenuItemClick,\n        disabled: sortDirection == null,\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      }),\n      /*#__PURE__*/\n      _jsx(MenuItem, {\n        onClick: onSortMenuItemClick,\n        \"data-value\": \"asc\",\n        disabled: sortDirection === 'asc',\n        children: apiRef.current.getLocaleText('columnMenuSortAsc')\n      }),\n      /*#__PURE__*/\n      _jsx(MenuItem, {\n        onClick: onSortMenuItemClick,\n        \"data-value\": \"desc\",\n        disabled: sortDirection === 'desc',\n        children: apiRef.current.getLocaleText('columnMenuSortDesc')\n      })]\n    })\n  );\n};\n\nprocess.env.NODE_ENV !== \"production\" ? SortGridMenuItems.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { SortGridMenuItems };","map":null,"metadata":{},"sourceType":"module"}