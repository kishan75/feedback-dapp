{"ast":null,"code":"var _a;\n\nimport { Stream } from '../../../stream/Stream.js';\nimport { ConverterFromNext } from './ConverterFromNext.js';\nimport { NextArbitrary } from './NextArbitrary.js';\nimport { NextValue } from './NextValue.js';\nconst identifier = '__ConverterToNext__';\nexport function fromShrinkableToNextValue(g) {\n  if (!g.hasToBeCloned) {\n    return new NextValue(g.value_, g);\n  }\n\n  return new NextValue(g.value_, g, () => g.value);\n}\nexport class ConverterToNext extends NextArbitrary {\n  constructor(arb) {\n    super();\n    this.arb = arb;\n    this[_a] = true;\n  }\n\n  static isConverterToNext(arb) {\n    return identifier in arb;\n  }\n\n  static convertIfNeeded(arb) {\n    if (ConverterFromNext.isConverterFromNext(arb)) return arb.arb;else return new ConverterToNext(arb);\n  }\n\n  generate(mrng, biasFactor) {\n    const g = biasFactor !== undefined ? this.arb.withBias(biasFactor).generate(mrng) : this.arb.generate(mrng);\n    return fromShrinkableToNextValue(g);\n  }\n\n  canShrinkWithoutContext(_value) {\n    return false;\n  }\n\n  shrink(_value, context) {\n    if (this.isSafeContext(context)) {\n      return context.shrink().map(fromShrinkableToNextValue);\n    }\n\n    return Stream.nil();\n  }\n\n  isSafeContext(context) {\n    return context != null && typeof context === 'object' && 'value' in context && 'shrink' in context;\n  }\n\n  filter(refinement) {\n    return ConverterToNext.convertIfNeeded(this.arb.filter(refinement));\n  }\n\n  map(mapper) {\n    return ConverterToNext.convertIfNeeded(this.arb.map(mapper));\n  }\n\n  chain(fmapper) {\n    return ConverterToNext.convertIfNeeded(this.arb.chain(t => {\n      const fmapped = fmapper(t);\n      if (ConverterToNext.isConverterToNext(fmapped)) return fmapped.arb;else return new ConverterFromNext(fmapped);\n    }));\n  }\n\n  noShrink() {\n    return ConverterToNext.convertIfNeeded(this.arb.noShrink());\n  }\n\n  noBias() {\n    return ConverterToNext.convertIfNeeded(this.arb.noBias());\n  }\n\n}\n_a = identifier;","map":null,"metadata":{},"sourceType":"module"}