{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeTypeId = exports.contextToType = void 0;\n\nfunction contextToType(context) {\n  if (context.contractId !== undefined) {\n    return {\n      typeClass: \"contract\",\n      kind: \"native\",\n      id: makeTypeId(context.contractId, context.compilationId),\n      typeName: context.contractName,\n      contractKind: context.contractKind,\n      payable: context.payable\n    };\n  } else {\n    return {\n      typeClass: \"contract\",\n      kind: \"foreign\",\n      typeName: context.contractName,\n      contractKind: context.contractKind,\n      payable: context.payable\n    };\n  }\n}\n\nexports.contextToType = contextToType; //NOTE: I am exporting this for use in other import functions, but please don't\n//use this elsewhere!\n//If you have to make a type ID, instead make the type and then\n//take its ID.\n\nfunction makeTypeId(astId, compilationId) {\n  return \"\".concat(compilationId, \":\").concat(astId);\n}\n\nexports.makeTypeId = makeTypeId;","map":null,"metadata":{},"sourceType":"script"}