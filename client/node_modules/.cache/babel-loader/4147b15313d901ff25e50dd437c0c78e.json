{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\Admin\\\\admin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport AdminFunctionBox from '../../FunctionBox/AdminFuctionBox/adminFunctionBox';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport emailjs, { init } from '@emailjs/browser';\ninit(\"2pvfnImfRTGi6OSnk\");\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n});\n\nconst Admin = props => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        genProfTicketDetails = _useState2[0],\n        setGenProfTicketDetails = _useState2[1];\n\n  const _useState3 = useState({\n    email: '',\n    password: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genProfTicketErrors = _useState4[0],\n        setGenProfTicketErrors = _useState4[1];\n\n  const _useState5 = useState({\n    old: '',\n    new: '',\n    confirm: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        changePasswordDetails = _useState6[0],\n        setChangePasswordDetails = _useState6[1];\n\n  const _useState7 = useState({\n    old: '',\n    new: '',\n    confirm: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        changePasswordErrors = _useState8[0],\n        setChangePassworErrors = _useState8[1];\n\n  const _useState9 = useState({\n    message: '',\n    severity: '',\n    open: false\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        toast = _useState10[0],\n        setToast = _useState10[1]; // Asyncs:\n\n\n  const writeTicketToBlockChain = async () => {\n    const feedbackData = props.contract.feedbackData;\n\n    if (feedbackData != undefined) {\n      let result = await feedbackData.methods.generateTokenForProfReg(genProfTicketDetails.handlePasswordInputChange).call();\n      result = result.logs[0].args[\"token\"];\n      console.log(result);\n      return result;\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  };\n\n  const writePasswordToBlockChain = async () => {\n    const feedbackData = props.contract.feedbackData;\n\n    if (feedbackData != undefined) {\n      let result = await feedbackData.methods.updatePassword(changePasswordDetails.old, changePasswordDetails.new).send({\n        from: props.account\n      }); //result = result.logs[0].args[\"professor\"];\n      //console.log(result);\n\n      return true;\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleGenProfTicketInputChange = event => {\n    setGenProfTicketDetails(_objectSpread({}, genProfTicketDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, genProfTicketErrors);\n\n    updatedErrors = validateGenProfTicketInput(event.target.name, event.target.value, updatedErrors);\n    setGenProfTicketErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleChangePasswordInputChange = event => {\n    setChangePasswordDetails(_objectSpread({}, changePasswordDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, changePasswordErrors);\n\n    updatedErrors = validateChnagePasswordInput(event.target.name, event.target.value, updatedErrors);\n    setChangePassworErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleGenProfTicketSubmit = () => {\n    let updatedErrors = _objectSpread({}, genProfTicketErrors);\n\n    for (var key in genProfTicketDetails) if (genProfTicketDetails.hasOwnProperty(key)) updatedErrors = validateGenProfTicketInput(key, genProfTicketDetails[key], updatedErrors);\n\n    setGenProfTicketErrors(_objectSpread({}, updatedErrors));\n\n    const fastgenProfTicketErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastgenProfTicketErrors) {\n      if (fastgenProfTicketErrors.hasOwnProperty(key)) if (fastgenProfTicketErrors[key] != '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(genProfTicketDetails);\n\n    if (ready) {\n      writeTicketToBlockChain().then(r => {\n        console.log(r);\n        let templateParams = {\n          from: 'SYSTEM',\n          to: genProfTicketDetails.email,\n          subject: \"Registration Ticket\",\n          reply_to: \"feedback.dapp@gmail.com\",\n          html: \"<b>Respected sir</b>, <br><br>\" + \"Please use this unique ticket: <b>[ \" + r + \" ]</b> to get registered. PLease do not share this with anyone. <br><br>\" + \"Best wishes,<br>\" + \"Feedback-DApp team\"\n        };\n        emailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams).then(function (response) {\n          setToast({\n            message: 'TxN SUCCESS: Ticket generated and sent',\n            severity: 'success',\n            open: true\n          });\n          setTimeout(() => props.closeModal(), 3500);\n          console.log('Email success: ', response.status, response.text);\n        }, function (error) {\n          setToast({\n            message: 'ERROR: While sending email',\n            severity: 'error',\n            open: true\n          });\n          console.log('Email fail: ', error);\n        });\n      }).catch(e => {\n        ready = false;\n        console.log(e);\n        if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else if (e.code == '-32603') setToast({\n          message: 'TxN ERROR: Invalid password',\n          severity: 'error',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Something went wrong',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  };\n\n  const handlePasswordSubmit = () => {\n    let updatedErrors = _objectSpread({}, changePasswordErrors);\n\n    for (var key in changePasswordDetails) if (changePasswordDetails.hasOwnProperty(key)) updatedErrors = validateChnagePasswordInput(key, changePasswordDetails[key], updatedErrors);\n\n    setChangePassworErrors(_objectSpread({}, updatedErrors));\n\n    const fastChangePassworErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastChangePassworErrors) {\n      if (fastChangePassworErrors.hasOwnProperty(key)) if (fastChangePassworErrors[key] != '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(changePasswordDetails);\n\n    if (ready) {\n      writePasswordToBlockChain().then(r => {\n        console.log('Password changed: ', r);\n        setToast({\n          message: 'TxN SUCCESS: Password changed',\n          severity: 'success',\n          open: true\n        });\n        setTimeout(() => props.closeModal(), 3500);\n      }).catch(e => {\n        console.log(e);\n        if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else if (props.contract.feedbackData == null) setToast({\n          message: 'INTERNAL-ERROR: Contract not deployed',\n          severity: 'error',\n          open: true\n        });else if (e.code == '-32603') setToast({\n          message: 'TxN ERROR: Old password is invalid',\n          severity: 'error',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Something went wrong',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  };\n\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setToast(_objectSpread({}, toast, {\n      open: false\n    }));\n  }; // Validators\n\n\n  const validateGenProfTicketInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'password':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else updatedErrors[field] = '';\n        break;\n\n      case 'email':\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!re.test(value)) updatedErrors[field] = 'Invalid email!';else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in'))) updatedErrors[field] = 'Accepted domains are @itbhu.ac.in or @iitbhu.ac.in';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  const validateChnagePasswordInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'old':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else updatedErrors[field] = '';\n        break;\n\n      case 'new':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length < 5) updatedErrors[field] = 'Minimum length: 5';else if (value.length > 30) updatedErrors[field] = 'Maximum length: 30';else if (/[a-zA-Z]/g.test(value) == false) updatedErrors[field] = 'Should contain at least one alphabet';else if (/\\d/.test(value) == false) updatedErrors[field] = 'Should contain at least one digit';else updatedErrors[field] = '';\n        break;\n\n      case 'confirm':\n        if (value != changePasswordDetails.new) updatedErrors[field] = 'Should match the new password';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    autoHideDuration: 4500,\n    open: toast.open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    onClose: handleToastClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: toast.severity,\n    sx: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, toast.message)), React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(AdminFunctionBox, {\n    data: _objectSpread({}, genProfTicketDetails, {}, changePasswordDetails),\n    errors: _objectSpread({}, genProfTicketErrors, {}, changePasswordErrors),\n    handleInputChange: handleGenProfTicketInputChange,\n    handleSubmit: handleGenProfTicketSubmit,\n    handlePasswordInputChange: handleChangePasswordInputChange,\n    handlePasswordSubmit: handlePasswordSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  })));\n};\n\nexport default Admin;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/Admin/admin.js"],"names":["React","useState","AdminFunctionBox","Snackbar","MuiAlert","emailjs","init","Alert","forwardRef","props","ref","Admin","email","password","genProfTicketDetails","setGenProfTicketDetails","genProfTicketErrors","setGenProfTicketErrors","old","new","confirm","changePasswordDetails","setChangePasswordDetails","changePasswordErrors","setChangePassworErrors","message","severity","open","toast","setToast","writeTicketToBlockChain","feedbackData","contract","undefined","result","methods","generateTokenForProfReg","handlePasswordInputChange","call","logs","args","console","log","writePasswordToBlockChain","updatePassword","send","from","account","handleGenProfTicketInputChange","event","target","name","value","updatedErrors","validateGenProfTicketInput","handleChangePasswordInputChange","validateChnagePasswordInput","handleGenProfTicketSubmit","key","hasOwnProperty","fastgenProfTicketErrors","ready","then","r","templateParams","to","subject","reply_to","html","response","setTimeout","closeModal","status","text","error","catch","e","code","handlePasswordSubmit","fastChangePassworErrors","handleToastClose","reason","field","length","re","test","endsWith","vertical","horizontal","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport AdminFunctionBox from '../../FunctionBox/AdminFuctionBox/adminFunctionBox';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport emailjs, { init } from '@emailjs/browser';\r\ninit(\"2pvfnImfRTGi6OSnk\");\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst Admin = (props) => {\r\n    const [genProfTicketDetails, setGenProfTicketDetails] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [genProfTicketErrors, setGenProfTicketErrors] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [changePasswordDetails, setChangePasswordDetails] = useState({\r\n        old: '',\r\n        new: '',\r\n        confirm: ''\r\n    });\r\n\r\n    const [changePasswordErrors, setChangePassworErrors] = useState({\r\n        old: '',\r\n        new: '',\r\n        confirm: ''\r\n    });\r\n\r\n\r\n    const [toast, setToast] = useState({\r\n        message: '',\r\n        severity: '',\r\n        open: false\r\n    })\r\n\r\n    // Asyncs:\r\n    const writeTicketToBlockChain = async () => {\r\n        const feedbackData = props.contract.feedbackData;\r\n        if (feedbackData != undefined) {\r\n            let result = await feedbackData.methods.generateTokenForProfReg(genProfTicketDetails.handlePasswordInputChange).call();\r\n            result = result.logs[0].args[\"token\"];\r\n            console.log(result);\r\n            return result\r\n        } else {\r\n            setToast({ message: 'INTERNAL-ERROR: Contract not deployed', severity: 'error', open: true });\r\n            console.log('Feedback contract not deployed');\r\n        }\r\n    }\r\n\r\n\r\n    const writePasswordToBlockChain = async () => {\r\n        const feedbackData = props.contract.feedbackData;\r\n        if (feedbackData != undefined) {\r\n            let result = await feedbackData.methods.updatePassword(changePasswordDetails.old, changePasswordDetails.new).send({ from: props.account });\r\n            //result = result.logs[0].args[\"professor\"];\r\n            //console.log(result);\r\n            return true\r\n        } else {\r\n            setToast({ message: 'INTERNAL-ERROR: Contract not deployed', severity: 'error', open: true });\r\n            console.log('Feedback contract not deployed');\r\n        }\r\n    }\r\n\r\n\r\n    // Handlers\r\n    const handleGenProfTicketInputChange = (event) => {\r\n        setGenProfTicketDetails({\r\n            ...genProfTicketDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let updatedErrors = { ...genProfTicketErrors };\r\n        updatedErrors = validateGenProfTicketInput(event.target.name, event.target.value, updatedErrors);\r\n        setGenProfTicketErrors({ ...updatedErrors });\r\n    };\r\n\r\n\r\n    const handleChangePasswordInputChange = (event) => {\r\n        setChangePasswordDetails({\r\n            ...changePasswordDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let updatedErrors = { ...changePasswordErrors };\r\n        updatedErrors = validateChnagePasswordInput(event.target.name, event.target.value, updatedErrors);\r\n        setChangePassworErrors({ ...updatedErrors });\r\n    };\r\n\r\n    const handleGenProfTicketSubmit = () => {\r\n        let updatedErrors = { ...genProfTicketErrors };\r\n\r\n        for (var key in genProfTicketDetails)\r\n            if (genProfTicketDetails.hasOwnProperty(key))\r\n                updatedErrors = validateGenProfTicketInput(key, genProfTicketDetails[key], updatedErrors);\r\n\r\n        setGenProfTicketErrors({ ...updatedErrors });\r\n        const fastgenProfTicketErrors = { ...updatedErrors };\r\n\r\n        let ready = true;\r\n        for (var key in fastgenProfTicketErrors) {\r\n            if (fastgenProfTicketErrors.hasOwnProperty(key))\r\n                if (fastgenProfTicketErrors[key] != '')\r\n                    ready = false;\r\n        }\r\n\r\n        console.log('Ready:', ready);\r\n        console.log(genProfTicketDetails);\r\n\r\n        if (ready) {\r\n            writeTicketToBlockChain()\r\n                .then(r => {\r\n                    console.log(r);\r\n\r\n                    let templateParams = {\r\n                        from: 'SYSTEM',\r\n                        to: genProfTicketDetails.email,\r\n                        subject: \"Registration Ticket\",\r\n                        reply_to: \"feedback.dapp@gmail.com\",\r\n                        html: \"<b>Respected sir</b>, <br><br>\" +\r\n                            \"Please use this unique ticket: <b>[ \" + r + \" ]</b> to get registered. PLease do not share this with anyone. <br><br>\" +\r\n                            \"Best wishes,<br>\" +\r\n                            \"Feedback-DApp team\",\r\n                    }\r\n\r\n                    emailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams)\r\n                        .then(function (response) {\r\n                            setToast({ message: 'TxN SUCCESS: Ticket generated and sent', severity: 'success', open: true });\r\n                            setTimeout(() => props.closeModal(), 3500);\r\n                            console.log('Email success: ', response.status, response.text);\r\n                        }, function (error) {\r\n                            setToast({ message: 'ERROR: While sending email', severity: 'error', open: true });\r\n                            console.log('Email fail: ', error);\r\n                        });\r\n                }\r\n                ).catch(e => {\r\n                    ready = false;\r\n                    console.log(e);\r\n                    if (e.code == '4001')\r\n                        setToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n                    else if (e.code == '-32603')\r\n                        setToast({ message: 'TxN ERROR: Invalid password', severity: 'error', open: true });\r\n                    else\r\n                        setToast({ message: 'TxN ERROR: Something went wrong', severity: 'error', open: true });\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    const handlePasswordSubmit = () => {\r\n        let updatedErrors = { ...changePasswordErrors };\r\n\r\n        for (var key in changePasswordDetails)\r\n            if (changePasswordDetails.hasOwnProperty(key))\r\n                updatedErrors = validateChnagePasswordInput(key, changePasswordDetails[key], updatedErrors);\r\n\r\n        setChangePassworErrors({ ...updatedErrors });\r\n        const fastChangePassworErrors = { ...updatedErrors };\r\n\r\n        let ready = true;\r\n        for (var key in fastChangePassworErrors) {\r\n            if (fastChangePassworErrors.hasOwnProperty(key))\r\n                if (fastChangePassworErrors[key] != '')\r\n                    ready = false;\r\n        }\r\n\r\n        console.log('Ready:', ready);\r\n        console.log(changePasswordDetails);\r\n\r\n        if (ready) {\r\n            writePasswordToBlockChain()\r\n                .then(r => {\r\n                    console.log('Password changed: ', r);\r\n                    setToast({ message: 'TxN SUCCESS: Password changed', severity: 'success', open: true });\r\n                    setTimeout(() => props.closeModal(), 3500);\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e);\r\n                    if (e.code == '4001')\r\n                        setToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n                    else if (props.contract.feedbackData == null)\r\n                        setToast({ message: 'INTERNAL-ERROR: Contract not deployed', severity: 'error', open: true });\r\n                    else if (e.code == '-32603')\r\n                        setToast({ message: 'TxN ERROR: Old password is invalid', severity: 'error', open: true });\r\n                    else\r\n                        setToast({ message: 'TxN ERROR: Something went wrong', severity: 'error', open: true });\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const handleToastClose = (event, reason) => {\r\n        if (reason === 'clickaway')\r\n            return;\r\n        setToast({ ...toast, open: false });\r\n    };\r\n\r\n\r\n    // Validators\r\n    const validateGenProfTicketInput = (field, value, updatedErrors) => {\r\n        switch (field) {\r\n            case 'password':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'email':\r\n                var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!re.test(value))\r\n                    updatedErrors[field] = 'Invalid email!';\r\n                else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in')))\r\n                    updatedErrors[field] = 'Accepted domains are @itbhu.ac.in or @iitbhu.ac.in';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n        }\r\n        return updatedErrors;\r\n    }\r\n\r\n\r\n    const validateChnagePasswordInput = (field, value, updatedErrors) => {\r\n        switch (field) {\r\n            case 'old':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break\r\n            case 'new':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (value.length < 5)\r\n                    updatedErrors[field] = 'Minimum length: 5';\r\n                else if (value.length > 30)\r\n                    updatedErrors[field] = 'Maximum length: 30';\r\n                else if (/[a-zA-Z]/g.test(value) == false)\r\n                    updatedErrors[field] = 'Should contain at least one alphabet';\r\n                else if (/\\d/.test(value) == false)\r\n                    updatedErrors[field] = 'Should contain at least one digit';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'confirm':\r\n                if (value != changePasswordDetails.new)\r\n                    updatedErrors[field] = 'Should match the new password';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n        }\r\n        return updatedErrors;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar autoHideDuration={4500} open={toast.open}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }} onClose={handleToastClose}>\r\n                <Alert severity={toast.severity} sx={{ width: '100%' }}>\r\n                    {toast.message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <div className='cards'>\r\n                <AdminFunctionBox\r\n                    data={{ ...genProfTicketDetails, ...changePasswordDetails }}\r\n                    errors={{ ...genProfTicketErrors, ...changePasswordErrors }}\r\n                    handleInputChange={handleGenProfTicketInputChange}\r\n                    handleSubmit={handleGenProfTicketSubmit}\r\n                    handlePasswordInputChange={handleChangePasswordInputChange}\r\n                    handlePasswordSubmit={handlePasswordSubmit}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}