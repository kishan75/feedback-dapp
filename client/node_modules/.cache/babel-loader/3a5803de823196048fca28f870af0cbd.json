{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\GenerateTickets\\\\generateTickets.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport GenerateTicketsFunctionBox from '../../FunctionBox/GenerateTicketsFunctionBox/generateTicketsFunctionBox';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport emailjs, { init } from '@emailjs/browser';\ninit(\"2pvfnImfRTGi6OSnk\");\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n});\n\nconst GenerateTickets = props => {\n  const _useState = useState({\n    name: '',\n    code: '',\n    year: '',\n    sem: '',\n    students: '',\n    emails: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        genTicketsDetails = _useState2[0],\n        setGenTicketsDetails = _useState2[1];\n\n  const _useState3 = useState({\n    name: '',\n    code: '',\n    year: '',\n    semester: '',\n    students: '',\n    emails: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genTicketsErrors = _useState4[0],\n        setGenTicketsErrors = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        courseDatas = _useState6[0],\n        setCourseDatas = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        courseNameOptions = _useState8[0],\n        setCourseNameOptions = _useState8[1];\n\n  const _useState9 = useState({\n    code: [],\n    year: [],\n    sem: [],\n    students: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        courseDataOptions = _useState10[0],\n        setCourseDataOptions = _useState10[1];\n\n  const _useState11 = useState({\n    message: '',\n    severity: '',\n    open: false\n  }),\n        _useState12 = _slicedToArray(_useState11, 2),\n        toast = _useState12[0],\n        setToast = _useState12[1]; // React useEffect\n  // Get professor's course data from blockchain\n\n\n  useEffect(() => {\n    console.log(props.courses);\n    const coursesObj = props.courses;\n    const courseDatas = [];\n\n    for (var year in coursesObj) if (coursesObj.hasOwnProperty(year)) for (var sem in coursesObj[year]) if (coursesObj[year].hasOwnProperty(sem)) for (var code in coursesObj[year][sem]) if (coursesObj[year][sem].hasOwnProperty(code)) for (var obj in coursesObj[year][sem][code]) if (coursesObj[year][sem][code].hasOwnProperty(obj)) courseDatas.push(coursesObj[year][sem][code][obj]);\n\n    setCourseDatas(courseDatas);\n    let courseNameOptions = [];\n\n    for (var i = 0; i < courseDatas.length; i++) courseNameOptions.push(courseDatas[i].name);\n\n    setCourseNameOptions(courseNameOptions);\n  }, []); // Asyncs:\n\n  const writeTicketToBlockChain = async () => {\n    const feedbackData = props.contracts.feedbackData;\n\n    if (feedbackData != undefined) {\n      let result = await feedbackData.methods.generateTickets(props.emailMap[props.account], genTicketsDetails.year, genTicketsDetails.sem, genTicketsDetails.code, (Math.random() + 1).toString(36).substring(7)).send({\n        from: props.account\n      });\n      result = result.events.ticketGenerated.returnValues.tickets;\n      console.log(result);\n      return result;\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleCourseNameChanged = event => {\n    let updatedCourseCodeOptions = {\n      code: [],\n      year: [],\n      sem: [],\n      students: []\n    };\n    updatedCourseCodeOptions.sem = ['Even', 'Odd'];\n\n    for (var i = 0; i < courseDatas.length; i++) {\n      if (courseDatas[i].name == event.target.value) {\n        updatedCourseCodeOptions.code.push(courseDatas[i].code);\n        updatedCourseCodeOptions.year.push(courseDatas[i].year);\n        updatedCourseCodeOptions.students.push(courseDatas[i].studentCount);\n      }\n    }\n\n    setCourseDataOptions(updatedCourseCodeOptions);\n  };\n\n  const handleGenTicketsInputChange = event => {\n    setGenTicketsDetails(_objectSpread({}, genTicketsDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, genTicketsErrors);\n\n    updatedErrors = validateGenTicketsInput(event.target.name, event.target.value, updatedErrors);\n    setGenTicketsErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleGenTicketsSubmit = () => {\n    let updatedErrors = _objectSpread({}, genTicketsErrors);\n\n    for (var key in genTicketsDetails) if (genTicketsDetails.hasOwnProperty(key)) updatedErrors = validateGenTicketsInput(key, genTicketsDetails[key], updatedErrors);\n\n    setGenTicketsErrors(_objectSpread({}, updatedErrors));\n\n    const fastGenTicketsErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastGenTicketsErrors) if (fastGenTicketsErrors.hasOwnProperty(key)) if (fastGenTicketsErrors[key] != '') ready = false;\n\n    console.log('Ready:', ready); // All validation tests passed\n\n    console.log(genTicketsDetails);\n    console.log(fastGenTicketsErrors); // Send Email\n\n    const semester = {\n      0: 'Even',\n      1: 'Odd'\n    };\n\n    if (ready) {\n      writeTicketToBlockChain().then(res => {\n        console.log(res);\n        let templateParams = {\n          from: 'SYSTEM',\n          to: ['binit.57.singh@gmail.com', 'yee80andres@gmail.com'],\n          subject: \"Registration Ticket\",\n          reply_to: \"feedback.dapp@gmail.com\",\n          course_name: genTicketsDetails.name,\n          course_code: genTicketsDetails.code,\n          course_year: genTicketsDetails.year,\n          course_sem: semester[genTicketsDetails.sem],\n          ticket: res\n        };\n        emailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams).then(function (response) {\n          setToast({\n            message: 'TxN SUCCESS: Ticket generated and sent',\n            severity: 'success',\n            open: true\n          });\n          setTimeout(() => props.closeModal(), 3500);\n          console.log('Email success: ', response.status, response.text);\n        }, function (error) {\n          setToast({\n            message: 'ERROR: While sending email',\n            severity: 'error',\n            open: true\n          });\n          console.log('Email fail: ', error);\n        });\n      }).catch(e => {\n        ready = false;\n        console.log(e);\n        if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Something went wrong',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  };\n\n  const handleEmailFileUpload = e => {\n    switch (e.target.name) {\n      case 'emailsfile':\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let emails = [];\n\n        reader.onload = function (e) {\n          let text = e.target.result;\n          text = text.split(/,| |\\n|\\r/);\n          console.log(text);\n\n          for (var i = 0; i < text.length; i++) if (text[i].endsWith('@itbhu.ac.in') || text[i].endsWith('@iitbhu.ac.in') && re.test(text[i])) emails.push(text[i]);\n\n          console.log(emails);\n          setGenTicketsDetails(_objectSpread({}, genTicketsDetails, {\n            emails: emails\n          }));\n        };\n\n        reader.readAsText(file);\n        break;\n\n      default:\n        console.error('Error while uploading file');\n        break;\n    }\n  };\n\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setToast(_objectSpread({}, toast, {\n      open: false\n    }));\n  }; // Validators\n\n\n  const validateGenTicketsInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'name':\n      case 'code':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length > 50) updatedErrors[field] = 'Length should be smaller than 50';else updatedErrors[field] = '';\n        break;\n\n      case 'emails':\n        if (value.length == 0) updatedErrors[field] = 'Please upload a csv file with student emails';else if (value.length != genTicketsDetails.students) updatedErrors[field] = \"Number of uploaded emails(\".concat(value.length, \") should be equal to students(\").concat(genTicketsDetails.students, \")\");else updatedErrors[field] = '';\n        break;\n\n      case 'year':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Year should be numerical';else if (value.length != 4) updatedErrors[field] = 'Length should be exacty 4';else if (!(value > 2000)) updatedErrors[field] = 'Year should be greater than 2000';else updatedErrors[field] = '';\n        break;\n\n      case 'sem':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!(value == 1 || value == 0)) updatedErrors[field] = 'Can only be Even or Odd';else updatedErrors[field] = '';\n        break;\n\n      case 'students':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Should be numerical';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    autoHideDuration: 4500,\n    open: toast.open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    onClose: handleToastClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: toast.severity,\n    sx: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, toast.message)), React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(GenerateTicketsFunctionBox, {\n    data: genTicketsDetails,\n    errors: genTicketsErrors,\n    mainOptions: courseNameOptions,\n    subOptions: courseDataOptions,\n    handleMainChange: handleCourseNameChanged,\n    handleInputChange: handleGenTicketsInputChange,\n    handleFileChange: handleEmailFileUpload,\n    handleSubmit: handleGenTicketsSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  })));\n};\n\nexport default GenerateTickets;\nconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/GenerateTickets/generateTickets.js"],"names":["React","useState","useEffect","GenerateTicketsFunctionBox","Snackbar","MuiAlert","emailjs","init","Alert","forwardRef","props","ref","GenerateTickets","name","code","year","sem","students","emails","genTicketsDetails","setGenTicketsDetails","semester","genTicketsErrors","setGenTicketsErrors","courseDatas","setCourseDatas","courseNameOptions","setCourseNameOptions","courseDataOptions","setCourseDataOptions","message","severity","open","toast","setToast","console","log","courses","coursesObj","hasOwnProperty","obj","push","i","length","writeTicketToBlockChain","feedbackData","contracts","undefined","result","methods","generateTickets","emailMap","account","Math","random","toString","substring","send","from","events","ticketGenerated","returnValues","tickets","handleCourseNameChanged","event","updatedCourseCodeOptions","target","value","studentCount","handleGenTicketsInputChange","updatedErrors","validateGenTicketsInput","handleGenTicketsSubmit","key","fastGenTicketsErrors","ready","then","res","templateParams","to","subject","reply_to","course_name","course_code","course_year","course_sem","ticket","response","setTimeout","closeModal","status","text","error","catch","e","handleEmailFileUpload","file","files","reader","FileReader","onload","split","endsWith","re","test","readAsText","handleToastClose","reason","field","vertical","horizontal","width"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,0BAAP,MAAuC,yEAAvC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAOC,OAAP,IAAkBC,IAAlB,QAA8B,kBAA9B;AACAA,IAAI,CAAC,mBAAD,CAAJ;AAEA,MAAMC,KAAK,GAAGR,KAAK,CAACS,UAAN,CAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACtD,SAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC;AAA1C,KAAuDD,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAFa,CAAd;;AAIA,MAAME,eAAe,GAAIF,KAAD,IAAW;AAAA,oBACmBT,QAAQ,CAAC;AACvDY,IAAAA,IAAI,EAAE,EADiD;AAEvDC,IAAAA,IAAI,EAAE,EAFiD;AAGvDC,IAAAA,IAAI,EAAE,EAHiD;AAIvDC,IAAAA,GAAG,EAAE,EAJkD;AAKvDC,IAAAA,QAAQ,EAAE,EAL6C;AAMvDC,IAAAA,MAAM,EAAE;AAN+C,GAAD,CAD3B;AAAA;AAAA,QACxBC,iBADwB;AAAA,QACLC,oBADK;;AAAA,qBAUiBnB,QAAQ,CAAC;AACrDY,IAAAA,IAAI,EAAE,EAD+C;AAErDC,IAAAA,IAAI,EAAE,EAF+C;AAGrDC,IAAAA,IAAI,EAAE,EAH+C;AAIrDM,IAAAA,QAAQ,EAAE,EAJ2C;AAKrDJ,IAAAA,QAAQ,EAAE,EAL2C;AAMrDC,IAAAA,MAAM,EAAE;AAN6C,GAAD,CAVzB;AAAA;AAAA,QAUxBI,gBAVwB;AAAA,QAUNC,mBAVM;;AAAA,qBAmBOtB,QAAQ,EAnBf;AAAA;AAAA,QAmBxBuB,WAnBwB;AAAA,QAmBXC,cAnBW;;AAAA,qBAoBmBxB,QAAQ,CAAC,EAAD,CApB3B;AAAA;AAAA,QAoBxByB,iBApBwB;AAAA,QAoBLC,oBApBK;;AAAA,qBAqBmB1B,QAAQ,CAAC;AACvDa,IAAAA,IAAI,EAAE,EADiD;AAEvDC,IAAAA,IAAI,EAAE,EAFiD;AAGvDC,IAAAA,GAAG,EAAE,EAHkD;AAIvDC,IAAAA,QAAQ,EAAE;AAJ6C,GAAD,CArB3B;AAAA;AAAA,QAqBxBW,iBArBwB;AAAA,QAqBLC,oBArBK;;AAAA,sBA4BL5B,QAAQ,CAAC;AAC/B6B,IAAAA,OAAO,EAAE,EADsB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,IAAI,EAAE;AAHyB,GAAD,CA5BH;AAAA;AAAA,QA4BxBC,KA5BwB;AAAA,QA4BjBC,QA5BiB,mBAkC/B;AACA;;;AACAhC,EAAAA,SAAS,CAAC,MAAM;AACZiC,IAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAK,CAAC2B,OAAlB;AACA,UAAMC,UAAU,GAAG5B,KAAK,CAAC2B,OAAzB;AACA,UAAMb,WAAW,GAAG,EAApB;;AACA,SAAK,IAAIT,IAAT,IAAiBuB,UAAjB,EACI,IAAIA,UAAU,CAACC,cAAX,CAA0BxB,IAA1B,CAAJ,EACI,KAAK,IAAIC,GAAT,IAAgBsB,UAAU,CAACvB,IAAD,CAA1B,EACI,IAAIuB,UAAU,CAACvB,IAAD,CAAV,CAAiBwB,cAAjB,CAAgCvB,GAAhC,CAAJ,EACI,KAAK,IAAIF,IAAT,IAAiBwB,UAAU,CAACvB,IAAD,CAAV,CAAiBC,GAAjB,CAAjB,EACI,IAAIsB,UAAU,CAACvB,IAAD,CAAV,CAAiBC,GAAjB,EAAsBuB,cAAtB,CAAqCzB,IAArC,CAAJ,EACI,KAAK,IAAI0B,GAAT,IAAgBF,UAAU,CAACvB,IAAD,CAAV,CAAiBC,GAAjB,EAAsBF,IAAtB,CAAhB,EACI,IAAIwB,UAAU,CAACvB,IAAD,CAAV,CAAiBC,GAAjB,EAAsBF,IAAtB,EAA4ByB,cAA5B,CAA2CC,GAA3C,CAAJ,EACIhB,WAAW,CAACiB,IAAZ,CAAiBH,UAAU,CAACvB,IAAD,CAAV,CAAiBC,GAAjB,EAAsBF,IAAtB,EAA4B0B,GAA5B,CAAjB;;AAEhCf,IAAAA,cAAc,CAACD,WAAD,CAAd;AAEA,QAAIE,iBAAiB,GAAG,EAAxB;;AACA,SAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,WAAW,CAACmB,MAAhC,EAAwCD,CAAC,EAAzC,EACIhB,iBAAiB,CAACe,IAAlB,CAAuBjB,WAAW,CAACkB,CAAD,CAAX,CAAe7B,IAAtC;;AAEJc,IAAAA,oBAAoB,CAACD,iBAAD,CAApB;AACH,GArBQ,EAqBN,EArBM,CAAT,CApC+B,CA4D/B;;AACA,QAAMkB,uBAAuB,GAAG,YAAY;AACxC,UAAMC,YAAY,GAAGnC,KAAK,CAACoC,SAAN,CAAgBD,YAArC;;AACA,QAAIA,YAAY,IAAIE,SAApB,EAA+B;AAC3B,UAAIC,MAAM,GAAG,MAAMH,YAAY,CAACI,OAAb,CAAqBC,eAArB,CACfxC,KAAK,CAACyC,QAAN,CAAezC,KAAK,CAAC0C,OAArB,CADe,EAEfjC,iBAAiB,CAACJ,IAFH,EAGfI,iBAAiB,CAACH,GAHH,EAIfG,iBAAiB,CAACL,IAJH,EAKf,CAACuC,IAAI,CAACC,MAAL,KAAgB,CAAjB,EAAoBC,QAApB,CAA6B,EAA7B,EAAiCC,SAAjC,CAA2C,CAA3C,CALe,EAMjBC,IANiB,CAMZ;AAAEC,QAAAA,IAAI,EAAEhD,KAAK,CAAC0C;AAAd,OANY,CAAnB;AAOAJ,MAAAA,MAAM,GAAGA,MAAM,CAACW,MAAP,CAAcC,eAAd,CAA8BC,YAA9B,CAA2CC,OAApD;AACA3B,MAAAA,OAAO,CAACC,GAAR,CAAYY,MAAZ;AACA,aAAOA,MAAP;AACH,KAXD,MAWO;AACHd,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,OAAO,EAAE,uCAAX;AAAoDC,QAAAA,QAAQ,EAAE,OAA9D;AAAuEC,QAAAA,IAAI,EAAE;AAA7E,OAAD,CAAR;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH;AACJ,GAjBD,CA7D+B,CAkF/B;;;AACA,QAAM2B,uBAAuB,GAAIC,KAAD,IAAW;AACvC,QAAIC,wBAAwB,GAAG;AAC3BnD,MAAAA,IAAI,EAAE,EADqB;AAE3BC,MAAAA,IAAI,EAAE,EAFqB;AAG3BC,MAAAA,GAAG,EAAE,EAHsB;AAI3BC,MAAAA,QAAQ,EAAE;AAJiB,KAA/B;AAOAgD,IAAAA,wBAAwB,CAACjD,GAAzB,GAA+B,CAAC,MAAD,EAAS,KAAT,CAA/B;;AACA,SAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,WAAW,CAACmB,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzC,UAAIlB,WAAW,CAACkB,CAAD,CAAX,CAAe7B,IAAf,IAAuBmD,KAAK,CAACE,MAAN,CAAaC,KAAxC,EAA+C;AAC3CF,QAAAA,wBAAwB,CAACnD,IAAzB,CAA8B2B,IAA9B,CAAmCjB,WAAW,CAACkB,CAAD,CAAX,CAAe5B,IAAlD;AACAmD,QAAAA,wBAAwB,CAAClD,IAAzB,CAA8B0B,IAA9B,CAAmCjB,WAAW,CAACkB,CAAD,CAAX,CAAe3B,IAAlD;AACAkD,QAAAA,wBAAwB,CAAChD,QAAzB,CAAkCwB,IAAlC,CAAuCjB,WAAW,CAACkB,CAAD,CAAX,CAAe0B,YAAtD;AACH;AACJ;;AACDvC,IAAAA,oBAAoB,CAACoC,wBAAD,CAApB;AACH,GAjBD;;AAmBA,QAAMI,2BAA2B,GAAIL,KAAD,IAAW;AAE3C5C,IAAAA,oBAAoB,mBACbD,iBADa;AAEhB,OAAC6C,KAAK,CAACE,MAAN,CAAarD,IAAd,GAAqBmD,KAAK,CAACE,MAAN,CAAaC;AAFlB,OAApB;;AAKA,QAAIG,aAAa,qBAAQhD,gBAAR,CAAjB;;AACAgD,IAAAA,aAAa,GAAGC,uBAAuB,CAACP,KAAK,CAACE,MAAN,CAAarD,IAAd,EAAoBmD,KAAK,CAACE,MAAN,CAAaC,KAAjC,EAAwCG,aAAxC,CAAvC;AACA/C,IAAAA,mBAAmB,mBAAM+C,aAAN,EAAnB;AACH,GAVD;;AAaA,QAAME,sBAAsB,GAAG,MAAM;AACjC,QAAIF,aAAa,qBAAQhD,gBAAR,CAAjB;;AAEA,SAAK,IAAImD,GAAT,IAAgBtD,iBAAhB,EACI,IAAIA,iBAAiB,CAACoB,cAAlB,CAAiCkC,GAAjC,CAAJ,EACIH,aAAa,GAAGC,uBAAuB,CAACE,GAAD,EAAMtD,iBAAiB,CAACsD,GAAD,CAAvB,EAA8BH,aAA9B,CAAvC;;AAER/C,IAAAA,mBAAmB,mBAAM+C,aAAN,EAAnB;;AACA,UAAMI,oBAAoB,qBAAQJ,aAAR,CAA1B;;AAEA,QAAIK,KAAK,GAAG,IAAZ;;AACA,SAAK,IAAIF,GAAT,IAAgBC,oBAAhB,EACI,IAAIA,oBAAoB,CAACnC,cAArB,CAAoCkC,GAApC,CAAJ,EACI,IAAIC,oBAAoB,CAACD,GAAD,CAApB,IAA6B,EAAjC,EACIE,KAAK,GAAG,KAAR;;AAEZxC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBuC,KAAtB,EAhBiC,CAgBF;;AAC/BxC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,iBAAZ;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYsC,oBAAZ,EAlBiC,CAqBjC;;AACA,UAAMrD,QAAQ,GAAG;AAAE,SAAG,MAAL;AAAa,SAAG;AAAhB,KAAjB;;AACA,QAAIsD,KAAJ,EAAW;AACP/B,MAAAA,uBAAuB,GAClBgC,IADL,CACUC,GAAG,IAAI;AACT1C,QAAAA,OAAO,CAACC,GAAR,CAAYyC,GAAZ;AACA,YAAIC,cAAc,GAAG;AACjBpB,UAAAA,IAAI,EAAE,QADW;AAEjBqB,UAAAA,EAAE,EAAE,CAAC,0BAAD,EAA6B,uBAA7B,CAFa;AAGjBC,UAAAA,OAAO,EAAE,qBAHQ;AAIjBC,UAAAA,QAAQ,EAAE,yBAJO;AAKjBC,UAAAA,WAAW,EAAE/D,iBAAiB,CAACN,IALd;AAMjBsE,UAAAA,WAAW,EAAEhE,iBAAiB,CAACL,IANd;AAOjBsE,UAAAA,WAAW,EAAEjE,iBAAiB,CAACJ,IAPd;AAQjBsE,UAAAA,UAAU,EAAEhE,QAAQ,CAACF,iBAAiB,CAACH,GAAnB,CARH;AASjBsE,UAAAA,MAAM,EAAET;AATS,SAArB;AAYAvE,QAAAA,OAAO,CAACmD,IAAR,CAAa,iBAAb,EAAgC,kBAAhC,EAAoDqB,cAApD,EACKF,IADL,CACU,UAAUW,QAAV,EAAoB;AACtBrD,UAAAA,QAAQ,CAAC;AAAEJ,YAAAA,OAAO,EAAE,wCAAX;AAAqDC,YAAAA,QAAQ,EAAE,SAA/D;AAA0EC,YAAAA,IAAI,EAAE;AAAhF,WAAD,CAAR;AACAwD,UAAAA,UAAU,CAAC,MAAM9E,KAAK,CAAC+E,UAAN,EAAP,EAA2B,IAA3B,CAAV;AACAtD,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BmD,QAAQ,CAACG,MAAxC,EAAgDH,QAAQ,CAACI,IAAzD;AACH,SALL,EAKO,UAAUC,KAAV,EAAiB;AAChB1D,UAAAA,QAAQ,CAAC;AAAEJ,YAAAA,OAAO,EAAE,4BAAX;AAAyCC,YAAAA,QAAQ,EAAE,OAAnD;AAA4DC,YAAAA,IAAI,EAAE;AAAlE,WAAD,CAAR;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BwD,KAA5B;AACH,SARL;AASH,OAxBL,EAwBOC,KAxBP,CAwBaC,CAAC,IAAI;AACVnB,QAAAA,KAAK,GAAG,KAAR;AACAxC,QAAAA,OAAO,CAACC,GAAR,CAAY0D,CAAZ;AACA,YAAIA,CAAC,CAAChF,IAAF,IAAU,MAAd,EACIoB,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,0BAAX;AAAuCC,UAAAA,QAAQ,EAAE,SAAjD;AAA4DC,UAAAA,IAAI,EAAE;AAAlE,SAAD,CAAR,CADJ,KAGIE,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,iCAAX;AAA8CC,UAAAA,QAAQ,EAAE,OAAxD;AAAiEC,UAAAA,IAAI,EAAE;AAAvE,SAAD,CAAR;AACP,OA/BL;AAgCH;AACJ,GAzDD;;AA4DA,QAAM+D,qBAAqB,GAAID,CAAD,IAAO;AACjC,YAAQA,CAAC,CAAC5B,MAAF,CAASrD,IAAjB;AACI,WAAK,YAAL;AACI,cAAMmF,IAAI,GAAGF,CAAC,CAAC5B,MAAF,CAAS+B,KAAT,CAAe,CAAf,CAAb;AACA,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,YAAIjF,MAAM,GAAG,EAAb;;AACAgF,QAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUN,CAAV,EAAa;AACzB,cAAIH,IAAI,GAAGG,CAAC,CAAC5B,MAAF,CAASlB,MAApB;AACA2C,UAAAA,IAAI,GAAGA,IAAI,CAACU,KAAL,CAAW,WAAX,CAAP;AACAlE,UAAAA,OAAO,CAACC,GAAR,CAAYuD,IAAZ;;AAEA,eAAK,IAAIjD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiD,IAAI,CAAChD,MAAzB,EAAiCD,CAAC,EAAlC,EACI,IAAIiD,IAAI,CAACjD,CAAD,CAAJ,CAAQ4D,QAAR,CAAiB,cAAjB,KAAoCX,IAAI,CAACjD,CAAD,CAAJ,CAAQ4D,QAAR,CAAiB,eAAjB,KAAqCC,EAAE,CAACC,IAAH,CAAQb,IAAI,CAACjD,CAAD,CAAZ,CAA7E,EACIxB,MAAM,CAACuB,IAAP,CAAYkD,IAAI,CAACjD,CAAD,CAAhB;;AAERP,UAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACAE,UAAAA,oBAAoB,mBAAMD,iBAAN;AAAyBD,YAAAA,MAAM,EAAEA;AAAjC,aAApB;AACH,SAXD;;AAaAgF,QAAAA,MAAM,CAACO,UAAP,CAAkBT,IAAlB;AAEA;;AACJ;AACI7D,QAAAA,OAAO,CAACyD,KAAR,CAAc,4BAAd;AAA6C;AAtBrD;AAwBH,GAzBD;;AA2BA,QAAMc,gBAAgB,GAAG,CAAC1C,KAAD,EAAQ2C,MAAR,KAAmB;AACxC,QAAIA,MAAM,KAAK,WAAf,EACI;AACJzE,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,IAAI,EAAE;AAAnB,OAAR;AACH,GAJD,CA1M+B,CAiN/B;;;AACA,QAAMuC,uBAAuB,GAAG,CAACqC,KAAD,EAAQzC,KAAR,EAAeG,aAAf,KAAiC;AAC7D,YAAQsC,KAAR;AACI,WAAK,MAAL;AACA,WAAK,MAAL;AACI,YAAIzC,KAAK,CAACxB,MAAN,IAAgB,CAApB,EACI2B,aAAa,CAACsC,KAAD,CAAb,GAAuB,iBAAvB,CADJ,KAEK,IAAIzC,KAAK,CAACxB,MAAN,GAAe,EAAnB,EACD2B,aAAa,CAACsC,KAAD,CAAb,GAAuB,kCAAvB,CADC,KAGDtC,aAAa,CAACsC,KAAD,CAAb,GAAuB,EAAvB;AACJ;;AACJ,WAAK,QAAL;AACI,YAAIzC,KAAK,CAACxB,MAAN,IAAgB,CAApB,EACI2B,aAAa,CAACsC,KAAD,CAAb,GAAuB,8CAAvB,CADJ,KAEK,IAAIzC,KAAK,CAACxB,MAAN,IAAgBxB,iBAAiB,CAACF,QAAtC,EACDqD,aAAa,CAACsC,KAAD,CAAb,uCAAoDzC,KAAK,CAACxB,MAA1D,2CAAiGxB,iBAAiB,CAACF,QAAnH,OADC,KAGDqD,aAAa,CAACsC,KAAD,CAAb,GAAuB,EAAvB;AACJ;;AACJ,WAAK,MAAL;AACI,YAAIzC,KAAK,CAACxB,MAAN,IAAgB,CAApB,EACI2B,aAAa,CAACsC,KAAD,CAAb,GAAuB,iBAAvB,CADJ,KAEK,IAAI,CAAC,QAAQJ,IAAR,CAAarC,KAAb,CAAL,EACDG,aAAa,CAACsC,KAAD,CAAb,GAAuB,0BAAvB,CADC,KAEA,IAAIzC,KAAK,CAACxB,MAAN,IAAgB,CAApB,EACD2B,aAAa,CAACsC,KAAD,CAAb,GAAuB,2BAAvB,CADC,KAEA,IAAI,EAAEzC,KAAK,GAAG,IAAV,CAAJ,EACDG,aAAa,CAACsC,KAAD,CAAb,GAAuB,kCAAvB,CADC,KAGDtC,aAAa,CAACsC,KAAD,CAAb,GAAuB,EAAvB;AACJ;;AACJ,WAAK,KAAL;AACI,YAAIzC,KAAK,CAACxB,MAAN,IAAgB,CAApB,EACI2B,aAAa,CAACsC,KAAD,CAAb,GAAuB,iBAAvB,CADJ,KAEK,IAAI,EAAEzC,KAAK,IAAI,CAAT,IAAcA,KAAK,IAAI,CAAzB,CAAJ,EACDG,aAAa,CAACsC,KAAD,CAAb,GAAuB,yBAAvB,CADC,KAGDtC,aAAa,CAACsC,KAAD,CAAb,GAAuB,EAAvB;AACJ;;AACJ,WAAK,UAAL;AACI,YAAIzC,KAAK,CAACxB,MAAN,IAAgB,CAApB,EACI2B,aAAa,CAACsC,KAAD,CAAb,GAAuB,iBAAvB,CADJ,KAEK,IAAI,CAAC,QAAQJ,IAAR,CAAarC,KAAb,CAAL,EACDG,aAAa,CAACsC,KAAD,CAAb,GAAuB,qBAAvB,CADC,KAGDtC,aAAa,CAACsC,KAAD,CAAb,GAAuB,EAAvB;AACJ;AA7CR;;AAgDA,WAAOtC,aAAP;AACH,GAlDD;;AAqDA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,IAA5B;AAAkC,IAAA,IAAI,EAAErC,KAAK,CAACD,IAA9C;AACI,IAAA,YAAY,EAAE;AAAE6E,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KADlB;AAC6D,IAAA,OAAO,EAAEJ,gBADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEzE,KAAK,CAACF,QAAvB;AAAiC,IAAA,EAAE,EAAE;AAAEgF,MAAAA,KAAK,EAAE;AAAT,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9E,KAAK,CAACH,OADX,CAFJ,CADJ,EAOI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,0BAAD;AACI,IAAA,IAAI,EAAEX,iBADV;AAEI,IAAA,MAAM,EAAEG,gBAFZ;AAGI,IAAA,WAAW,EAAEI,iBAHjB;AAII,IAAA,UAAU,EAAEE,iBAJhB;AAKI,IAAA,gBAAgB,EAAEmC,uBALtB;AAMI,IAAA,iBAAiB,EAAEM,2BANvB;AAOI,IAAA,gBAAgB,EAAE0B,qBAPtB;AAQI,IAAA,YAAY,EAAEvB,sBARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ;AAsBH,CA7RD;;AA+RA,eAAe5D,eAAf;AAIA,MAAM2F,EAAE,GAAG,2JAAX","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GenerateTicketsFunctionBox from '../../FunctionBox/GenerateTicketsFunctionBox/generateTicketsFunctionBox';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport emailjs, { init } from '@emailjs/browser';\r\ninit(\"2pvfnImfRTGi6OSnk\");\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst GenerateTickets = (props) => {\r\n    const [genTicketsDetails, setGenTicketsDetails] = useState({\r\n        name: '',\r\n        code: '',\r\n        year: '',\r\n        sem: '',\r\n        students: '',\r\n        emails: []\r\n    });\r\n\r\n    const [genTicketsErrors, setGenTicketsErrors] = useState({\r\n        name: '',\r\n        code: '',\r\n        year: '',\r\n        semester: '',\r\n        students: '',\r\n        emails: ''\r\n    })\r\n\r\n    const [courseDatas, setCourseDatas] = useState();\r\n    const [courseNameOptions, setCourseNameOptions] = useState([]);\r\n    const [courseDataOptions, setCourseDataOptions] = useState({\r\n        code: [],\r\n        year: [],\r\n        sem: [],\r\n        students: []\r\n    });\r\n\r\n    const [toast, setToast] = useState({\r\n        message: '',\r\n        severity: '',\r\n        open: false\r\n    })\r\n\r\n    // React useEffect\r\n    // Get professor's course data from blockchain\r\n    useEffect(() => {\r\n        console.log(props.courses)\r\n        const coursesObj = props.courses\r\n        const courseDatas = []\r\n        for (var year in coursesObj)\r\n            if (coursesObj.hasOwnProperty(year))\r\n                for (var sem in coursesObj[year])\r\n                    if (coursesObj[year].hasOwnProperty(sem))\r\n                        for (var code in coursesObj[year][sem])\r\n                            if (coursesObj[year][sem].hasOwnProperty(code))\r\n                                for (var obj in coursesObj[year][sem][code])\r\n                                    if (coursesObj[year][sem][code].hasOwnProperty(obj))\r\n                                        courseDatas.push(coursesObj[year][sem][code][obj])\r\n\r\n        setCourseDatas(courseDatas);\r\n\r\n        let courseNameOptions = []\r\n        for (var i = 0; i < courseDatas.length; i++)\r\n            courseNameOptions.push(courseDatas[i].name);\r\n\r\n        setCourseNameOptions(courseNameOptions);\r\n    }, []);\r\n\r\n\r\n    // Asyncs:\r\n    const writeTicketToBlockChain = async () => {\r\n        const feedbackData = props.contracts.feedbackData;\r\n        if (feedbackData != undefined) {\r\n            let result = await feedbackData.methods.generateTickets(\r\n                props.emailMap[props.account],\r\n                genTicketsDetails.year,\r\n                genTicketsDetails.sem,\r\n                genTicketsDetails.code,\r\n                (Math.random() + 1).toString(36).substring(7),\r\n            ).send({ from: props.account });\r\n            result = result.events.ticketGenerated.returnValues.tickets;\r\n            console.log(result);\r\n            return result\r\n        } else {\r\n            setToast({ message: 'INTERNAL-ERROR: Contract not deployed', severity: 'error', open: true });\r\n            console.log('Feedback contract not deployed');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Handlers\r\n    const handleCourseNameChanged = (event) => {\r\n        let updatedCourseCodeOptions = {\r\n            code: [],\r\n            year: [],\r\n            sem: [],\r\n            students: []\r\n        }\r\n\r\n        updatedCourseCodeOptions.sem = ['Even', 'Odd']\r\n        for (var i = 0; i < courseDatas.length; i++) {\r\n            if (courseDatas[i].name == event.target.value) {\r\n                updatedCourseCodeOptions.code.push(courseDatas[i].code);\r\n                updatedCourseCodeOptions.year.push(courseDatas[i].year);\r\n                updatedCourseCodeOptions.students.push(courseDatas[i].studentCount);\r\n            }\r\n        }\r\n        setCourseDataOptions(updatedCourseCodeOptions);\r\n    }\r\n\r\n    const handleGenTicketsInputChange = (event) => {\r\n\r\n        setGenTicketsDetails({\r\n            ...genTicketsDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let updatedErrors = { ...genTicketsErrors };\r\n        updatedErrors = validateGenTicketsInput(event.target.name, event.target.value, updatedErrors);\r\n        setGenTicketsErrors({ ...updatedErrors });\r\n    };\r\n\r\n\r\n    const handleGenTicketsSubmit = () => {\r\n        let updatedErrors = { ...genTicketsErrors };\r\n\r\n        for (var key in genTicketsDetails)\r\n            if (genTicketsDetails.hasOwnProperty(key))\r\n                updatedErrors = validateGenTicketsInput(key, genTicketsDetails[key], updatedErrors);\r\n\r\n        setGenTicketsErrors({ ...updatedErrors });\r\n        const fastGenTicketsErrors = { ...updatedErrors };\r\n\r\n        let ready = true;\r\n        for (var key in fastGenTicketsErrors)\r\n            if (fastGenTicketsErrors.hasOwnProperty(key))\r\n                if (fastGenTicketsErrors[key] != '')\r\n                    ready = false;\r\n\r\n        console.log('Ready:', ready);  // All validation tests passed\r\n        console.log(genTicketsDetails);\r\n        console.log(fastGenTicketsErrors);\r\n\r\n\r\n        // Send Email\r\n        const semester = { 0: 'Even', 1: 'Odd' };\r\n        if (ready) {\r\n            writeTicketToBlockChain()\r\n                .then(res => {\r\n                    console.log(res);\r\n                    let templateParams = {\r\n                        from: 'SYSTEM',\r\n                        to: ['binit.57.singh@gmail.com', 'yee80andres@gmail.com'],\r\n                        subject: \"Registration Ticket\",\r\n                        reply_to: \"feedback.dapp@gmail.com\",\r\n                        course_name: genTicketsDetails.name,\r\n                        course_code: genTicketsDetails.code,\r\n                        course_year: genTicketsDetails.year,\r\n                        course_sem: semester[genTicketsDetails.sem],\r\n                        ticket: res\r\n                    }\r\n\r\n                    emailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams)\r\n                        .then(function (response) {\r\n                            setToast({ message: 'TxN SUCCESS: Ticket generated and sent', severity: 'success', open: true });\r\n                            setTimeout(() => props.closeModal(), 3500);\r\n                            console.log('Email success: ', response.status, response.text);\r\n                        }, function (error) {\r\n                            setToast({ message: 'ERROR: While sending email', severity: 'error', open: true });\r\n                            console.log('Email fail: ', error);\r\n                        })\r\n                }).catch(e => {\r\n                    ready = false;\r\n                    console.log(e);\r\n                    if (e.code == '4001')\r\n                        setToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n                    else\r\n                        setToast({ message: 'TxN ERROR: Something went wrong', severity: 'error', open: true });\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    const handleEmailFileUpload = (e) => {\r\n        switch (e.target.name) {\r\n            case 'emailsfile':\r\n                const file = e.target.files[0];\r\n                const reader = new FileReader();\r\n                let emails = []\r\n                reader.onload = function (e) {\r\n                    let text = e.target.result;\r\n                    text = text.split(/,| |\\n|\\r/);\r\n                    console.log(text);\r\n\r\n                    for (var i = 0; i < text.length; i++)\r\n                        if (text[i].endsWith('@itbhu.ac.in') || text[i].endsWith('@iitbhu.ac.in') && re.test(text[i]))\r\n                            emails.push(text[i]);\r\n\r\n                    console.log(emails);\r\n                    setGenTicketsDetails({ ...genTicketsDetails, emails: emails });\r\n                }\r\n\r\n                reader.readAsText(file);\r\n\r\n                break;\r\n            default:\r\n                console.error('Error while uploading file'); break;\r\n        }\r\n    }\r\n\r\n    const handleToastClose = (event, reason) => {\r\n        if (reason === 'clickaway')\r\n            return;\r\n        setToast({ ...toast, open: false });\r\n    };\r\n\r\n\r\n    // Validators\r\n    const validateGenTicketsInput = (field, value, updatedErrors) => {\r\n        switch (field) {\r\n            case 'name':\r\n            case 'code':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (value.length > 50)\r\n                    updatedErrors[field] = 'Length should be smaller than 50';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'emails':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Please upload a csv file with student emails';\r\n                else if (value.length != genTicketsDetails.students)\r\n                    updatedErrors[field] = `Number of uploaded emails(${value.length}) should be equal to students(${genTicketsDetails.students})`;\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'year':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!/^\\d+$/.test(value))\r\n                    updatedErrors[field] = 'Year should be numerical';\r\n                else if (value.length != 4)\r\n                    updatedErrors[field] = 'Length should be exacty 4';\r\n                else if (!(value > 2000))\r\n                    updatedErrors[field] = 'Year should be greater than 2000';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'sem':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!(value == 1 || value == 0))\r\n                    updatedErrors[field] = 'Can only be Even or Odd';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'students':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!/^\\d+$/.test(value))\r\n                    updatedErrors[field] = 'Should be numerical';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n\r\n        }\r\n        return updatedErrors;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar autoHideDuration={4500} open={toast.open}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }} onClose={handleToastClose}>\r\n                <Alert severity={toast.severity} sx={{ width: '100%' }}>\r\n                    {toast.message}\r\n                </Alert>\r\n            </Snackbar>\r\n            <div className='cards'>\r\n                <GenerateTicketsFunctionBox\r\n                    data={genTicketsDetails}\r\n                    errors={genTicketsErrors}\r\n                    mainOptions={courseNameOptions}\r\n                    subOptions={courseDataOptions}\r\n                    handleMainChange={handleCourseNameChanged}\r\n                    handleInputChange={handleGenTicketsInputChange}\r\n                    handleFileChange={handleEmailFileUpload}\r\n                    handleSubmit={handleGenTicketsSubmit}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenerateTickets;\r\n\r\n\r\n\r\nconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;"]},"metadata":{},"sourceType":"module"}