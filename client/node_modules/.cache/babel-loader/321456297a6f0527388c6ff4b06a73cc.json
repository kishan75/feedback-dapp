{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { GridEvents } from '../../../models/events';\nexport const useGridPreProcessing = apiRef => {\n  const preProcessorsRef = React.useRef({});\n  const registerPreProcessor = React.useCallback((group, id, callback) => {\n    if (!preProcessorsRef.current[group]) {\n      preProcessorsRef.current[group] = {};\n    }\n\n    const preProcessors = preProcessorsRef.current[group];\n    const oldCallback = preProcessors[id];\n\n    if (!oldCallback || oldCallback !== callback) {\n      preProcessorsRef.current[group] = _extends({}, preProcessors, {\n        [id]: callback\n      });\n      apiRef.current.publishEvent(GridEvents.preProcessorRegister, group);\n    }\n\n    return () => {\n      const _ref = preProcessorsRef.current[group],\n            otherProcessors = _objectWithoutPropertiesLoose(_ref, [id].map(_toPropertyKey));\n\n      preProcessorsRef.current[group] = otherProcessors;\n      apiRef.current.publishEvent(GridEvents.preProcessorUnregister, group);\n    };\n  }, [apiRef]);\n  const applyPreProcessors = React.useCallback((...args) => {\n    const group = args[0],\n          value = args[1],\n          params = args[2];\n\n    if (!preProcessorsRef.current[group]) {\n      return value;\n    }\n\n    const preProcessors = Object.values(preProcessorsRef.current[group]);\n    return preProcessors.reduce((acc, preProcessor) => {\n      return preProcessor(acc, params);\n    }, value);\n  }, []);\n  const preProcessingApi = {\n    unstable_registerPreProcessor: registerPreProcessor,\n    unstable_applyPreProcessors: applyPreProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingApi, 'GridPreProcessing');\n};","map":null,"metadata":{},"sourceType":"module"}