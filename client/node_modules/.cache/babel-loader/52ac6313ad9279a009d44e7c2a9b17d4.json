{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\GenerateTickets\\\\generateTickets.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport GenerateTicketsFunctionBox from '../../FunctionBox/GenerateTicketsFunctionBox/generateTicketsFunctionBox';\nimport emailjs, { init } from '@emailjs/browser';\ninit(\"2pvfnImfRTGi6OSnk\");\n\nconst GenerateTickets = props => {\n  const _useState = useState({\n    name: '',\n    code: '',\n    year: '',\n    sem: '',\n    students: '',\n    emails: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        genTicketsDetails = _useState2[0],\n        setGenTicketsDetails = _useState2[1];\n\n  const _useState3 = useState({\n    name: '',\n    code: '',\n    year: '',\n    semester: '',\n    students: '',\n    emails: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genTicketsErrors = _useState4[0],\n        setGenTicketsErrors = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        courseDatas = _useState6[0],\n        setCourseDatas = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        courseNameOptions = _useState8[0],\n        setCourseNameOptions = _useState8[1];\n\n  const _useState9 = useState({\n    code: [],\n    year: [],\n    sem: [],\n    students: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        courseDataOptions = _useState10[0],\n        setCourseDataOptions = _useState10[1]; // React useEffect\n  // Get professor's course data from blockchain\n\n\n  useEffect(() => {\n    console.log(props.courses);\n    const coursesObj = props.courses;\n    const courseDatas = [];\n\n    for (var year in coursesObj) if (coursesObj.hasOwnProperty(year)) for (var sem in coursesObj[year]) if (coursesObj[year].hasOwnProperty(sem)) for (var code in coursesObj[year][sem]) if (coursesObj[year][sem].hasOwnProperty(code)) for (var obj in coursesObj[year][sem][code]) if (coursesObj[year][sem][code].hasOwnProperty(obj)) courseDatas.push(coursesObj[year][sem][code][obj]);\n\n    setCourseDatas(courseDatas);\n    let courseNameOptions = [];\n\n    for (var i = 0; i < courseDatas.length; i++) courseNameOptions.push(courseDatas[i].name);\n\n    setCourseNameOptions(courseNameOptions);\n  }, []); // Handlers\n\n  const handleCourseNameChanged = event => {\n    let updatedCourseCodeOptions = {\n      code: [],\n      year: [],\n      sem: [],\n      students: []\n    };\n    updatedCourseCodeOptions.sem = ['Even', 'Odd'];\n\n    for (var i = 0; i < courseDatas.length; i++) {\n      if (courseDatas[i].name == event.target.value) {\n        updatedCourseCodeOptions.code.push(courseDatas[i].code);\n        updatedCourseCodeOptions.year.push(courseDatas[i].year);\n        updatedCourseCodeOptions.students.push(courseDatas[i].studentCount);\n      }\n    }\n\n    setCourseDataOptions(updatedCourseCodeOptions);\n  };\n\n  const handleGenTicketsInputChange = event => {\n    setGenTicketsDetails(_objectSpread({}, genTicketsDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, genTicketsErrors);\n\n    updatedErrors = validateGenTicketsInput(event.target.name, event.target.value, updatedErrors);\n    setGenTicketsErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleGenTicketsSubmit = () => {\n    let updatedErrors = _objectSpread({}, genTicketsErrors);\n\n    for (var key in genTicketsDetails) if (genTicketsDetails.hasOwnProperty(key)) updatedErrors = validateGenTicketsInput(key, genTicketsDetails[key], updatedErrors);\n\n    setGenTicketsErrors(_objectSpread({}, updatedErrors));\n\n    const fastGenTicketsErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastGenTicketsErrors) if (fastGenTicketsErrors.hasOwnProperty(key)) if (fastGenTicketsErrors[key] != '') ready = false;\n\n    console.log('Ready:', ready); // All validation tests passed\n\n    console.log(genTicketsDetails);\n    console.log(fastGenTicketsErrors); // Send Email\n\n    if (ready) {\n      let templateParams = {\n        from: 'SYSTEM',\n        to: ['binit.57.singh@gmail.com', 'yee80andres@gmail.com'],\n        subject: \"Registration Ticket\",\n        reply_to: \"feedback.dapp@gmail.com\",\n        html: \"<b>Respected sir</b>, <br><br>\" + \"Please use this unique ticket: <b>[ \" + \"r\" + \" ]</b> get registered <br><br>\" + \"Best wishes,<br>\" + \"Feedback-DApp team\"\n      };\n      emailjs.send(process.env.EMAILJS_SERVICEID, process.env.EMAILJS_TEMPLATEID, templateParams).then(function (response) {\n        //setToast({ message: 'TxN SUCCESS: Ticket generated and sent', severity: 'success', open: true });\n        //setTimeout(() => props.closeModal(), 3500);\n        console.log('Email success: ', response.status, response.text);\n      }, function (error) {\n        //setToast({ message: 'ERROR: While sending email', severity: 'error', open: true });\n        console.log('Email fail: ', error);\n      });\n    }\n  };\n\n  const handleEmailFileUpload = e => {\n    switch (e.target.name) {\n      case 'emailsfile':\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let emails = [];\n\n        reader.onload = function (e) {\n          let text = e.target.result;\n          text = text.split(/,| |\\n|\\r/);\n          console.log(text);\n\n          for (var i = 0; i < text.length; i++) if (text[i].endsWith('@itbhu.ac.in') || text[i].endsWith('@iitbhu.ac.in') && re.test(text[i])) emails.push(text[i]);\n\n          console.log(emails);\n          setGenTicketsDetails(_objectSpread({}, genTicketsDetails, {\n            emails: emails\n          }));\n        };\n\n        reader.readAsText(file);\n        break;\n\n      default:\n        console.error('Error while uploading file');\n        break;\n    }\n  }; // Validators\n\n\n  const validateGenTicketsInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'name':\n      case 'code':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length > 50) updatedErrors[field] = 'Length should be smaller than 50';else updatedErrors[field] = '';\n        break;\n\n      case 'emails':\n        if (value.length == 0) updatedErrors[field] = 'Please upload a csv file with student emails';else if (value.length != genTicketsDetails.students) updatedErrors[field] = \"Number of uploaded emails(\".concat(value.length, \") should be equal to students(\").concat(genTicketsDetails.students, \")\");else updatedErrors[field] = '';\n        break;\n\n      case 'year':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Year should be numerical';else if (value.length != 4) updatedErrors[field] = 'Length should be exacty 4';else if (!(value > 2000)) updatedErrors[field] = 'Year should be greater than 2000';else updatedErrors[field] = '';\n        break;\n\n      case 'sem':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!(value == 'Even' || value == 'Odd')) updatedErrors[field] = 'Can only be Even or Odd';else updatedErrors[field] = '';\n        break;\n\n      case 'students':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Should be numerical';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(GenerateTicketsFunctionBox, {\n    data: genTicketsDetails,\n    errors: genTicketsErrors,\n    mainOptions: courseNameOptions,\n    subOptions: courseDataOptions,\n    handleMainChange: handleCourseNameChanged,\n    handleInputChange: handleGenTicketsInputChange,\n    handleFileChange: handleEmailFileUpload,\n    handleSubmit: handleGenTicketsSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }));\n};\n\nexport default GenerateTickets;\nconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/GenerateTickets/generateTickets.js"],"names":["React","useState","useEffect","GenerateTicketsFunctionBox","emailjs","init","GenerateTickets","props","name","code","year","sem","students","emails","genTicketsDetails","setGenTicketsDetails","semester","genTicketsErrors","setGenTicketsErrors","courseDatas","setCourseDatas","courseNameOptions","setCourseNameOptions","courseDataOptions","setCourseDataOptions","console","log","courses","coursesObj","hasOwnProperty","obj","push","i","length","handleCourseNameChanged","event","updatedCourseCodeOptions","target","value","studentCount","handleGenTicketsInputChange","updatedErrors","validateGenTicketsInput","handleGenTicketsSubmit","key","fastGenTicketsErrors","ready","templateParams","from","to","subject","reply_to","html","send","process","env","EMAILJS_SERVICEID","EMAILJS_TEMPLATEID","then","response","status","text","error","handleEmailFileUpload","e","file","files","reader","FileReader","onload","result","split","endsWith","re","test","readAsText","field"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GenerateTicketsFunctionBox from '../../FunctionBox/GenerateTicketsFunctionBox/generateTicketsFunctionBox';\r\n\r\nimport emailjs, { init } from '@emailjs/browser';\r\ninit(\"2pvfnImfRTGi6OSnk\");\r\n\r\n\r\nconst GenerateTickets = (props) => {\r\n    const [genTicketsDetails, setGenTicketsDetails] = useState({\r\n        name: '',\r\n        code: '',\r\n        year: '',\r\n        sem: '',\r\n        students: '',\r\n        emails: []\r\n    });\r\n\r\n    const [genTicketsErrors, setGenTicketsErrors] = useState({\r\n        name: '',\r\n        code: '',\r\n        year: '',\r\n        semester: '',\r\n        students: '',\r\n        emails: ''\r\n    })\r\n\r\n    const [courseDatas, setCourseDatas] = useState();\r\n    const [courseNameOptions, setCourseNameOptions] = useState([]);\r\n    const [courseDataOptions, setCourseDataOptions] = useState({\r\n        code: [],\r\n        year: [],\r\n        sem: [],\r\n        students: []\r\n    });\r\n\r\n\r\n    // React useEffect\r\n    // Get professor's course data from blockchain\r\n    useEffect(() => {\r\n        console.log(props.courses)\r\n        const coursesObj = props.courses\r\n        const courseDatas = []\r\n        for (var year in coursesObj)\r\n            if (coursesObj.hasOwnProperty(year))\r\n                for (var sem in coursesObj[year])\r\n                    if (coursesObj[year].hasOwnProperty(sem))\r\n                        for (var code in coursesObj[year][sem])\r\n                            if (coursesObj[year][sem].hasOwnProperty(code))\r\n                                for (var obj in coursesObj[year][sem][code])\r\n                                    if (coursesObj[year][sem][code].hasOwnProperty(obj))\r\n                                        courseDatas.push(coursesObj[year][sem][code][obj])\r\n\r\n        setCourseDatas(courseDatas);\r\n\r\n        let courseNameOptions = []\r\n        for (var i = 0; i < courseDatas.length; i++)\r\n            courseNameOptions.push(courseDatas[i].name);\r\n\r\n        setCourseNameOptions(courseNameOptions);\r\n    }, []);\r\n\r\n\r\n\r\n    // Handlers\r\n    const handleCourseNameChanged = (event) => {\r\n        let updatedCourseCodeOptions = {\r\n            code: [],\r\n            year: [],\r\n            sem: [],\r\n            students: []\r\n        }\r\n\r\n        updatedCourseCodeOptions.sem = ['Even', 'Odd']\r\n        for (var i = 0; i < courseDatas.length; i++) {\r\n            if (courseDatas[i].name == event.target.value) {\r\n                updatedCourseCodeOptions.code.push(courseDatas[i].code);\r\n                updatedCourseCodeOptions.year.push(courseDatas[i].year);\r\n                updatedCourseCodeOptions.students.push(courseDatas[i].studentCount);\r\n            }\r\n        }\r\n        setCourseDataOptions(updatedCourseCodeOptions);\r\n    }\r\n\r\n    const handleGenTicketsInputChange = (event) => {\r\n\r\n        setGenTicketsDetails({\r\n            ...genTicketsDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let updatedErrors = { ...genTicketsErrors };\r\n        updatedErrors = validateGenTicketsInput(event.target.name, event.target.value, updatedErrors);\r\n        setGenTicketsErrors({ ...updatedErrors });\r\n    };\r\n\r\n\r\n    const handleGenTicketsSubmit = () => {\r\n        let updatedErrors = { ...genTicketsErrors };\r\n\r\n        for (var key in genTicketsDetails)\r\n            if (genTicketsDetails.hasOwnProperty(key))\r\n                updatedErrors = validateGenTicketsInput(key, genTicketsDetails[key], updatedErrors);\r\n\r\n        setGenTicketsErrors({ ...updatedErrors });\r\n        const fastGenTicketsErrors = { ...updatedErrors };\r\n\r\n        let ready = true;\r\n        for (var key in fastGenTicketsErrors)\r\n            if (fastGenTicketsErrors.hasOwnProperty(key))\r\n                if (fastGenTicketsErrors[key] != '')\r\n                    ready = false;\r\n\r\n        console.log('Ready:', ready);  // All validation tests passed\r\n        console.log(genTicketsDetails);\r\n        console.log(fastGenTicketsErrors);\r\n\r\n        // Send Email\r\n        if (ready) {\r\n            let templateParams = {\r\n                from: 'SYSTEM',\r\n                to: ['binit.57.singh@gmail.com', 'yee80andres@gmail.com'],\r\n                subject: \"Registration Ticket\",\r\n                reply_to: \"feedback.dapp@gmail.com\",\r\n                html: \"<b>Respected sir</b>, <br><br>\" +\r\n                    \"Please use this unique ticket: <b>[ \" + \"r\" + \" ]</b> get registered <br><br>\" +\r\n                    \"Best wishes,<br>\" +\r\n                    \"Feedback-DApp team\",\r\n            }\r\n\r\n            emailjs.send(process.env.EMAILJS_SERVICEID, process.env.EMAILJS_TEMPLATEID, templateParams)\r\n                .then(function (response) {\r\n                    //setToast({ message: 'TxN SUCCESS: Ticket generated and sent', severity: 'success', open: true });\r\n                    //setTimeout(() => props.closeModal(), 3500);\r\n                    console.log('Email success: ', response.status, response.text);\r\n                }, function (error) {\r\n                    //setToast({ message: 'ERROR: While sending email', severity: 'error', open: true });\r\n                    console.log('Email fail: ', error);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    const handleEmailFileUpload = (e) => {\r\n        switch (e.target.name) {\r\n            case 'emailsfile':\r\n                const file = e.target.files[0];\r\n                const reader = new FileReader();\r\n                let emails = []\r\n                reader.onload = function (e) {\r\n                    let text = e.target.result;\r\n                    text = text.split(/,| |\\n|\\r/);\r\n                    console.log(text);\r\n\r\n                    for (var i = 0; i < text.length; i++)\r\n                        if (text[i].endsWith('@itbhu.ac.in') || text[i].endsWith('@iitbhu.ac.in') && re.test(text[i]))\r\n                            emails.push(text[i]);\r\n\r\n                    console.log(emails);\r\n                    setGenTicketsDetails({ ...genTicketsDetails, emails: emails });\r\n                }\r\n\r\n                reader.readAsText(file);\r\n\r\n                break;\r\n            default:\r\n                console.error('Error while uploading file'); break;\r\n        }\r\n    }\r\n\r\n\r\n    // Validators\r\n    const validateGenTicketsInput = (field, value, updatedErrors) => {\r\n        switch (field) {\r\n            case 'name':\r\n            case 'code':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (value.length > 50)\r\n                    updatedErrors[field] = 'Length should be smaller than 50';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'emails':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Please upload a csv file with student emails';\r\n                else if (value.length != genTicketsDetails.students)\r\n                    updatedErrors[field] = `Number of uploaded emails(${value.length}) should be equal to students(${genTicketsDetails.students})`;\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'year':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!/^\\d+$/.test(value))\r\n                    updatedErrors[field] = 'Year should be numerical';\r\n                else if (value.length != 4)\r\n                    updatedErrors[field] = 'Length should be exacty 4';\r\n                else if (!(value > 2000))\r\n                    updatedErrors[field] = 'Year should be greater than 2000';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'sem':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!(value == 'Even' || value == 'Odd'))\r\n                    updatedErrors[field] = 'Can only be Even or Odd';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'students':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!/^\\d+$/.test(value))\r\n                    updatedErrors[field] = 'Should be numerical';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n\r\n        }\r\n        return updatedErrors;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='cards'>\r\n            <GenerateTicketsFunctionBox\r\n                data={genTicketsDetails}\r\n                errors={genTicketsErrors}\r\n                mainOptions={courseNameOptions}\r\n                subOptions={courseDataOptions}\r\n                handleMainChange={handleCourseNameChanged}\r\n                handleInputChange={handleGenTicketsInputChange}\r\n                handleFileChange={handleEmailFileUpload}\r\n                handleSubmit={handleGenTicketsSubmit}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GenerateTickets;\r\n\r\n\r\n\r\nconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;"]},"metadata":{},"sourceType":"module"}