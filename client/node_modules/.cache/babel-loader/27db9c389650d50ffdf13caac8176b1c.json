{"ast":null,"code":"import { ConverterFromNextProperty } from './ConverterFromNextProperty.js';\nimport { ConverterToNextProperty } from './ConverterToNextProperty.js';\nexport function convertFromNextProperty(property) {\n  if (ConverterToNextProperty.isConverterToNext(property)) {\n    return property.property;\n  }\n\n  return new ConverterFromNextProperty(property);\n}\nexport function convertToNextProperty(property) {\n  if (ConverterFromNextProperty.isConverterFromNext(property)) {\n    return property.property;\n  }\n\n  return new ConverterToNextProperty(property);\n}\nexport function convertFromNextPropertyWithHooks(property) {\n  const oldProperty = convertFromNextProperty(property);\n  const hooks = {\n    beforeEach(hookFunction) {\n      property.beforeEach(hookFunction);\n      return oldProperty;\n    },\n\n    afterEach(hookFunction) {\n      property.afterEach(hookFunction);\n      return oldProperty;\n    }\n\n  };\n  return Object.assign(oldProperty, hooks);\n}\nexport function convertFromNextAsyncPropertyWithHooks(property) {\n  const oldProperty = convertFromNextProperty(property);\n  const hooks = {\n    beforeEach(hookFunction) {\n      property.beforeEach(hookFunction);\n      return oldProperty;\n    },\n\n    afterEach(hookFunction) {\n      property.afterEach(hookFunction);\n      return oldProperty;\n    }\n\n  };\n  return Object.assign(oldProperty, hooks);\n}","map":null,"metadata":{},"sourceType":"module"}