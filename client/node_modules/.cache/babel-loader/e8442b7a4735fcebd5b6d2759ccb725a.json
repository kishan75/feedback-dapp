{"ast":null,"code":"import { assertIsArbitrary } from './Arbitrary.js';\nimport { ConverterFromNext } from './ConverterFromNext.js';\nimport { ConverterToNext } from './ConverterToNext.js';\nimport { assertIsNextArbitrary } from './NextArbitrary.js';\nexport function convertFromNext(arb) {\n  if (ConverterToNext.isConverterToNext(arb)) {\n    return arb.arb;\n  }\n\n  assertIsNextArbitrary(arb);\n  return new ConverterFromNext(arb);\n}\nexport function convertFromNextWithShrunkOnce(arb, legacyShrunkOnceContext) {\n  if (ConverterToNext.isConverterToNext(arb)) {\n    if (!('contextualShrink' in arb.arb) || !('contextualShrinkableFor' in arb.arb) || !('shrunkOnceContext' in arb.arb) || !('shrink' in arb.arb) || !('shrinkableFor' in arb.arb)) {\n      throw new Error('Conversion rejected: Underlying arbitrary is not compatible with ArbitraryWithContextualShrink');\n    }\n\n    return arb.arb;\n  }\n\n  assertIsNextArbitrary(arb);\n  return new ConverterFromNext(arb, legacyShrunkOnceContext);\n}\nexport function convertToNext(arb) {\n  if (ConverterFromNext.isConverterFromNext(arb)) {\n    return arb.arb;\n  }\n\n  assertIsArbitrary(arb);\n  return new ConverterToNext(arb);\n}","map":null,"metadata":{},"sourceType":"module"}