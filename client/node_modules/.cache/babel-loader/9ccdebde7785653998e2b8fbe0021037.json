{"ast":null,"code":"'use strict';\n\nclass Mixin {\n  constructor(host) {\n    const originalMethods = {};\n\n    const overriddenMethods = this._getOverriddenMethods(this, originalMethods);\n\n    for (const key of Object.keys(overriddenMethods)) {\n      if (typeof overriddenMethods[key] === 'function') {\n        originalMethods[key] = host[key];\n        host[key] = overriddenMethods[key];\n      }\n    }\n  }\n\n  _getOverriddenMethods() {\n    throw new Error('Not implemented');\n  }\n\n}\n\nMixin.install = function (host, Ctor, opts) {\n  if (!host.__mixins) {\n    host.__mixins = [];\n  }\n\n  for (let i = 0; i < host.__mixins.length; i++) {\n    if (host.__mixins[i].constructor === Ctor) {\n      return host.__mixins[i];\n    }\n  }\n\n  const mixin = new Ctor(host, opts);\n\n  host.__mixins.push(mixin);\n\n  return mixin;\n};\n\nmodule.exports = Mixin;","map":null,"metadata":{},"sourceType":"script"}