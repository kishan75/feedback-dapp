{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp-full\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp-full\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp-full\\\\feedback-dapp\\\\client\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { getBalance, loadContracts, loadCourses, loadEmails, loadFeedbacks, loadProfsByEmail, loadSkills, loadSkillsCount, setupMetamask } from \"./scripts/loader\";\nimport { useSnackbar } from \"notistack\"; // Pages\n\nimport HomePage from \"./pages/HomePage/homePage\"; // Utils\n//CSS\n\nimport \"./App.css\";\nimport Loader from \"./components/utils/Loader\";\nimport { Courses } from \"./components/Courses/courses\";\nimport { Feedbacks } from \"./components/Feedbacks/feedbacks\";\n\nrequire(\"dotenv\").config();\n\nconst App = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        profEmails = _useState2[0],\n        setProfEmails = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        addressToEmail = _useState4[0],\n        setAddressToEmail = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        profsDetails = _useState6[0],\n        setProfsDetails = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skillCount = _useState8[0],\n        setSkillCount = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        courses = _useState10[0],\n        setCourses = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        account = _useState12[0],\n        setAccount = _useState12[1];\n\n  const accountRef = useRef(account);\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        balance = _useState14[0],\n        setBalance = _useState14[1];\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        showLoader = _useState16[0],\n        setLoader = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        contracts = _useState18[0],\n        setContracts = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        skills = _useState20[0],\n        setSkills = _useState20[1];\n\n  const skillsRef = useRef(skills);\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        isProf = _useState22[0],\n        setIsProf = _useState22[1];\n\n  const _useSnackbar = useSnackbar(),\n        enqueueSnackbar = _useSnackbar.enqueueSnackbar; // React useEffects\n\n\n  useEffect(() => {\n    (async () => {\n      const account = await setupMetamask();\n      accountRef.current = account;\n      setAccount(account);\n      const contracts = await loadContracts();\n      setContracts(contracts);\n      const skills = await loadSkills(contracts);\n      skillsRef.current = skills;\n      setSkills(skills);\n    })();\n  }, []);\n  useEffect(() => {\n    if (contracts) {\n      (async () => {\n        const balance = await getBalance(contracts, account);\n        setBalance(balance === \"0\" ? balance : balance.slice(0, -18));\n        const profEmails = await loadEmails(contracts);\n        setProfEmails(profEmails);\n\n        const _ref = await loadProfsByEmail(contracts, profEmails),\n              profsDetails = _ref.profsDetails,\n              addressToEmail = _ref.addressToEmail;\n\n        setProfsDetails(profsDetails);\n        setAddressToEmail(addressToEmail);\n        setIsProf(addressToEmail[account] !== undefined);\n        const courses = await loadCourses(contracts, profEmails);\n        setCourses(courses);\n\n        const _ref2 = await loadFeedbacks(contracts, profEmails, courses),\n              feedbacks = _ref2.feedbacks,\n              updatedCourses = _ref2.updatedCourses;\n\n        setCourses(updatedCourses);\n\n        const _ref3 = await loadSkillsCount(contracts, profEmails, profsDetails),\n              skillsUpvote = _ref3.skillsUpvote,\n              updatedProfsDetail = _ref3.updatedProfsDetail;\n\n        setSkillCount(skillsUpvote);\n        setProfsDetails(updatedProfsDetail);\n        contracts.feedbackData.events.courseUpdated((err, data) => addCourse(err, data));\n        contracts.feedbackData.events.feedbackSubmitted((err, data) => feedbackSubmitted(err, data));\n        contracts.feedbackData.events.ticketGenerated((err, data) => ticketGenerated(err, data));\n        contracts.feedbackData.events.skillsUpvoted((err, data) => skillsUpvoted(err, data));\n        contracts.feedbackData.events.ratingUpdated((err, data) => ratingUpdated(err, data));\n        contracts.feedbackData.events.balanceUpdated((err, data) => balanceUpdated(err, data));\n        contracts.feedbackData.events.professorCreated((err, data) => professorCreated(err, data));\n        setLoader(false);\n      })();\n    } // eslint-disable-next-line\n\n  }, [contracts]);\n\n  const balanceUpdated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n\n    if (accountRef.current === data[\"returnValues\"].account.toLowerCase()) {\n      setBalance(data[\"returnValues\"].balance === \"0\" ? data[\"returnValues\"].balance : data[\"returnValues\"].balance.slice(0, -18));\n    }\n  };\n\n  const ratingUpdated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues = data[\"returnValues\"],\n          email = _data$returnValues.email,\n          rating = _data$returnValues.rating;\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        rating\n      })\n    }));\n  };\n\n  const skillsUpvoted = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues2 = data[\"returnValues\"],\n          email = _data$returnValues2.email,\n          skills = _data$returnValues2.skills;\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        skillsUpvote: skills\n      })\n    }));\n  };\n\n  const professorCreated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const professor = data[\"returnValues\"].professor;\n    let name = professor.name,\n        email = professor.email,\n        profilePicture = professor.profilePicture,\n        addressId = professor.addressId,\n        rating = professor.rating;\n    addressId = addressId.toLowerCase();\n    let skillsUpvote = {};\n    skillsRef.current.every(skill => skillsUpvote[skill] = '0');\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: {\n        name,\n        email,\n        profilePicture,\n        addressId,\n        rating,\n        skillsUpvote\n      }\n    }));\n    setProfEmails(prev => {\n      return prev.includes(email) ? [...prev] : [...prev, email];\n    });\n    setAddressToEmail(prev => _objectSpread({}, prev, {\n      [addressId]: email\n    }));\n    setIsProf(addressId === accountRef);\n  };\n\n  const ticketGenerated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues3 = data[\"returnValues\"],\n          email = _data$returnValues3.email,\n          year = _data$returnValues3.year,\n          sem = _data$returnValues3.sem,\n          code = _data$returnValues3.code;\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: _objectSpread({}, prev[email][year], {\n          [sem]: _objectSpread({}, prev[email][year][sem], {\n            [code]: _objectSpread({}, prev[email][year][sem][code], {\n              ticketGenerated: true\n            })\n          })\n        })\n      })\n    }));\n  };\n\n  const feedbackSubmitted = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues4 = data[\"returnValues\"],\n          email = _data$returnValues4.email,\n          feedback = _data$returnValues4.feedback;\n    const code = feedback.code,\n          semester = feedback.semester,\n          year = feedback.year,\n          content = feedback.content,\n          skills = feedback.skills;\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: _objectSpread({}, prev[email][year], {\n          [semester]: _objectSpread({}, prev[email][year][semester], {\n            [code]: _objectSpread({}, prev[email][year][semester][code], {\n              feedbacks: [...prev[email][year][semester][code].feedbacks, {\n                content,\n                skills\n              }]\n            })\n          })\n        })\n      })\n    }));\n  };\n\n  const addCourse = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues5 = data[\"returnValues\"],\n          email = _data$returnValues5.email,\n          year = _data$returnValues5.year,\n          course = _data$returnValues5.course;\n    const name = course.name,\n          code = course.code,\n          semester = course.semester,\n          studentCount = course.studentCount,\n          ticketGenerated = course.ticketGenerated;\n    setCourses(prev => {\n      return prev[email] ? _objectSpread({}, prev) : _objectSpread({}, prev, {\n        [email]: {}\n      });\n    });\n    setCourses(prev => {\n      return prev[email][year] ? _objectSpread({}, prev) : _objectSpread({}, prev, {\n        [email]: _objectSpread({}, prev[email], {\n          [year]: {}\n        })\n      });\n    });\n    setCourses(prev => {\n      return prev[email][year][semester] ? _objectSpread({}, prev) : _objectSpread({}, prev, {\n        [email]: _objectSpread({}, prev[email], {\n          [year]: _objectSpread({}, prev[email][year], {\n            [semester]: {}\n          })\n        })\n      });\n    });\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: _objectSpread({}, prev[email][year], {\n          [semester]: _objectSpread({}, prev[email][year][semester], {\n            [code]: {\n              name,\n              email,\n              code,\n              semester,\n              year,\n              studentCount,\n              ticketGenerated,\n              feedbacks: []\n            }\n          })\n        })\n      })\n    }));\n  };\n\n  const handleToastChange = (message, severity, open) => {\n    enqueueSnackbar(message, {\n      variant: severity\n    });\n  };\n\n  const handleLoaderChange = show => {\n    setLoader(show);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    show: showLoader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315\n    },\n    __self: this\n  }), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    element: React.createElement(HomePage, {\n      contracts: contracts,\n      profsDetails: profsDetails,\n      profsEmails: profEmails,\n      account: account,\n      emailMap: addressToEmail,\n      courses: courses,\n      isProf: isProf,\n      balance: balance,\n      onLoading: handleLoaderChange,\n      onToastChange: handleToastChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \":email/:year\",\n    element: React.createElement(Courses, {\n      showLoader: () => handleLoaderChange,\n      contracts: contracts,\n      profsDetails: profsDetails,\n      profsEmails: profEmails,\n      account: account,\n      emailMap: addressToEmail,\n      courses: courses,\n      isProf: isProf,\n      balance: balance,\n      onLoading: handleLoaderChange,\n      onToastChange: handleToastChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \":email/:year/:sem/:courseCode\",\n    element: React.createElement(Feedbacks, {\n      contracts: contracts,\n      account: account,\n      skills: skills,\n      profs: profsDetails,\n      showLoader: () => handleLoaderChange,\n      courses: courses,\n      toast: handleToastChange,\n      profsDetails: profsDetails,\n      profsEmails: profEmails,\n      emailMap: addressToEmail,\n      isProf: isProf,\n      balance: balance,\n      onLoading: handleLoaderChange,\n      onToastChange: handleToastChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp-full/feedback-dapp/client/src/App.js"],"names":["React","useState","useEffect","useRef","Routes","Route","getBalance","loadContracts","loadCourses","loadEmails","loadFeedbacks","loadProfsByEmail","loadSkills","loadSkillsCount","setupMetamask","useSnackbar","HomePage","Loader","Courses","Feedbacks","require","config","App","props","profEmails","setProfEmails","addressToEmail","setAddressToEmail","profsDetails","setProfsDetails","skillCount","setSkillCount","courses","setCourses","account","setAccount","accountRef","balance","setBalance","showLoader","setLoader","contracts","setContracts","skills","setSkills","skillsRef","isProf","setIsProf","enqueueSnackbar","current","slice","undefined","feedbacks","updatedCourses","skillsUpvote","updatedProfsDetail","feedbackData","events","courseUpdated","err","data","addCourse","feedbackSubmitted","ticketGenerated","skillsUpvoted","ratingUpdated","balanceUpdated","professorCreated","alert","toLowerCase","email","rating","prev","professor","name","profilePicture","addressId","every","skill","includes","year","sem","code","feedback","semester","content","course","studentCount","handleToastChange","message","severity","open","variant","handleLoaderChange","show"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport {\r\n  getBalance,\r\n  loadContracts,\r\n  loadCourses,\r\n  loadEmails,\r\n  loadFeedbacks,\r\n  loadProfsByEmail,\r\n  loadSkills,\r\n  loadSkillsCount,\r\n  setupMetamask,\r\n} from \"./scripts/loader\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n// Pages\r\nimport HomePage from \"./pages/HomePage/homePage\";\r\n\r\n// Utils\r\n\r\n//CSS\r\nimport \"./App.css\";\r\nimport Loader from \"./components/utils/Loader\";\r\nimport { Courses } from \"./components/Courses/courses\";\r\nimport { Feedbacks } from \"./components/Feedbacks/feedbacks\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst App = (props) => {\r\n  const [profEmails, setProfEmails] = useState(null);\r\n  const [addressToEmail, setAddressToEmail] = useState(null);\r\n\r\n  const [profsDetails, setProfsDetails] = useState(null);\r\n  const [skillCount, setSkillCount] = useState(null);\r\n  const [courses, setCourses] = useState(null);\r\n\r\n  const [account, setAccount] = useState(null);\r\n  const accountRef = useRef(account);\r\n\r\n  const [balance, setBalance] = useState(null);\r\n\r\n  const [showLoader, setLoader] = useState(true);\r\n  const [contracts, setContracts] = useState(null);\r\n\r\n  const [skills, setSkills] = useState(null);\r\n  const skillsRef = useRef(skills);\r\n\r\n  const [isProf, setIsProf] = useState(false);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  // React useEffects\r\n  useEffect(() => {\r\n    (async () => {\r\n      const account = await setupMetamask();\r\n      accountRef.current = account;\r\n      setAccount(account);\r\n\r\n      const contracts = await loadContracts();\r\n      setContracts(contracts);\r\n\r\n      const skills = await loadSkills(contracts);\r\n      skillsRef.current = skills;\r\n      setSkills(skills);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contracts) {\r\n      (async () => {\r\n        const balance = await getBalance(contracts, account);\r\n        setBalance(balance === \"0\" ? balance : balance.slice(0, -18));\r\n\r\n        const profEmails = await loadEmails(contracts);\r\n        setProfEmails(profEmails);\r\n\r\n        const { profsDetails, addressToEmail } = await loadProfsByEmail(\r\n          contracts,\r\n          profEmails\r\n        );\r\n        setProfsDetails(profsDetails);\r\n        setAddressToEmail(addressToEmail);\r\n        setIsProf(addressToEmail[account] !== undefined);\r\n\r\n        const courses = await loadCourses(contracts, profEmails);\r\n        setCourses(courses);\r\n\r\n        const { feedbacks, updatedCourses } = await loadFeedbacks(\r\n          contracts,\r\n          profEmails,\r\n          courses\r\n        );\r\n        setCourses(updatedCourses);\r\n\r\n        const { skillsUpvote, updatedProfsDetail } = await loadSkillsCount(\r\n          contracts,\r\n          profEmails,\r\n          profsDetails\r\n        );\r\n        setSkillCount(skillsUpvote);\r\n        setProfsDetails(updatedProfsDetail);\r\n\r\n        contracts.feedbackData.events.courseUpdated((err, data) =>\r\n          addCourse(err, data)\r\n        );\r\n        contracts.feedbackData.events.feedbackSubmitted((err, data) =>\r\n          feedbackSubmitted(err, data)\r\n        );\r\n        contracts.feedbackData.events.ticketGenerated((err, data) =>\r\n          ticketGenerated(err, data)\r\n        );\r\n        contracts.feedbackData.events.skillsUpvoted((err, data) =>\r\n          skillsUpvoted(err, data)\r\n        );\r\n        contracts.feedbackData.events.ratingUpdated((err, data) =>\r\n          ratingUpdated(err, data)\r\n        );\r\n        contracts.feedbackData.events.balanceUpdated((err, data) =>\r\n          balanceUpdated(err, data)\r\n        );\r\n        contracts.feedbackData.events.professorCreated((err, data) =>\r\n          professorCreated(err, data)\r\n        );\r\n\r\n        setLoader(false);\r\n      })();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [contracts]);\r\n\r\n  const balanceUpdated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n\r\n    if (accountRef.current === data[\"returnValues\"].account.toLowerCase()) {\r\n      setBalance(\r\n        data[\"returnValues\"].balance === \"0\"\r\n          ? data[\"returnValues\"].balance\r\n          : data[\"returnValues\"].balance.slice(0, -18)\r\n      );\r\n    }\r\n  };\r\n\r\n  const ratingUpdated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, rating } = data[\"returnValues\"];\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: { ...prev[email], rating },\r\n    }));\r\n  };\r\n\r\n  const skillsUpvoted = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, skills } = data[\"returnValues\"];\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: { ...prev[email], skillsUpvote: skills },\r\n    }));\r\n  };\r\n\r\n  const professorCreated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { professor } = data[\"returnValues\"];\r\n    let { name, email, profilePicture, addressId, rating } = professor;\r\n    addressId = addressId.toLowerCase();\r\n    let skillsUpvote = {};\r\n    skillsRef.current.every((skill) => (skillsUpvote[skill] = '0'));\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        name,\r\n        email,\r\n        profilePicture,\r\n        addressId,\r\n        rating,\r\n        skillsUpvote,\r\n      },\r\n    }));\r\n\r\n    setProfEmails((prev) => {\r\n      return prev.includes(email) ? [...prev] : [...prev, email];\r\n    });\r\n    setAddressToEmail((prev) => ({\r\n      ...prev,\r\n      [addressId]: email,\r\n    }));\r\n\r\n    setIsProf(addressId === accountRef);\r\n  };\r\n\r\n  const ticketGenerated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, year, sem, code } = data[\"returnValues\"];\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        ...prev[email],\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [sem]: {\r\n            ...prev[email][year][sem],\r\n            [code]: {\r\n              ...prev[email][year][sem][code],\r\n              ticketGenerated: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const feedbackSubmitted = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, feedback } = data[\"returnValues\"];\r\n    const { code, semester, year, content, skills } = feedback;\r\n\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        ...prev[email],\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [semester]: {\r\n            ...prev[email][year][semester],\r\n            [code]: {\r\n              ...prev[email][year][semester][code],\r\n              feedbacks: [\r\n                ...prev[email][year][semester][code].feedbacks,\r\n                {\r\n                  content,\r\n                  skills,\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const addCourse = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n\r\n    const { email, year, course } = data[\"returnValues\"];\r\n    const { name, code, semester, studentCount, ticketGenerated } = course;\r\n\r\n    setCourses((prev) => {\r\n      return prev[email] ? { ...prev } : { ...prev, [email]: {} };\r\n    });\r\n\r\n    setCourses((prev) => {\r\n      return prev[email][year]\r\n        ? { ...prev }\r\n        : {\r\n          ...prev,\r\n          [email]: {\r\n            ...prev[email],\r\n            [year]: {},\r\n          },\r\n        };\r\n    });\r\n\r\n    setCourses((prev) => {\r\n      return prev[email][year][semester]\r\n        ? { ...prev }\r\n        : {\r\n          ...prev,\r\n          [email]: {\r\n            ...prev[email],\r\n            [year]: {\r\n              ...prev[email][year],\r\n              [semester]: {},\r\n            },\r\n          },\r\n        };\r\n    });\r\n\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        ...prev[email],\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [semester]: {\r\n            ...prev[email][year][semester],\r\n            [code]: {\r\n              name,\r\n              email,\r\n              code,\r\n              semester,\r\n              year,\r\n              studentCount,\r\n              ticketGenerated,\r\n              feedbacks: [],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const handleToastChange = (message, severity, open) => {\r\n    enqueueSnackbar(message, { variant: severity });\r\n  };\r\n\r\n  const handleLoaderChange = (show) => {\r\n    setLoader(show);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Loader show={showLoader} />\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={\r\n            <HomePage\r\n              contracts={contracts}\r\n              profsDetails={profsDetails}\r\n              profsEmails={profEmails}\r\n              account={account}\r\n              emailMap={addressToEmail}\r\n              courses={courses}\r\n              isProf={isProf}\r\n              balance={balance}\r\n              onLoading={handleLoaderChange}\r\n              onToastChange={handleToastChange}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\":email/:year\"\r\n          element={\r\n            <Courses\r\n              showLoader={() => handleLoaderChange}\r\n              contracts={contracts}\r\n              profsDetails={profsDetails}\r\n              profsEmails={profEmails}\r\n              account={account}\r\n              emailMap={addressToEmail}\r\n              courses={courses}\r\n              isProf={isProf}\r\n              balance={balance}\r\n              onLoading={handleLoaderChange}\r\n              onToastChange={handleToastChange}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\":email/:year/:sem/:courseCode\"\r\n          element={\r\n            <Feedbacks\r\n              contracts={contracts}\r\n              account={account}\r\n              skills={skills}\r\n              profs={profsDetails}\r\n              showLoader={() => handleLoaderChange}\r\n              courses={courses}\r\n              toast={handleToastChange}\r\n              profsDetails={profsDetails}\r\n              profsEmails={profEmails}\r\n              emailMap={addressToEmail}\r\n              isProf={isProf}\r\n              balance={balance}\r\n              onLoading={handleLoaderChange}\r\n              onToastChange={handleToastChange}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}