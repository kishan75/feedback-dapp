{"ast":null,"code":"import { stream } from '../../../stream/Stream.js';\nimport { NextValue } from '../../../check/arbitrary/definition/NextValue.js';\n\nfunction halveBigInt(n) {\n  return n / BigInt(2);\n}\n\nexport function shrinkBigInt(current, target, tryTargetAsap) {\n  const realGap = current - target;\n\n  function* shrinkDecr() {\n    let previous = tryTargetAsap ? undefined : target;\n    const gap = tryTargetAsap ? realGap : halveBigInt(realGap);\n\n    for (let toremove = gap; toremove > 0; toremove = halveBigInt(toremove)) {\n      const next = current - toremove;\n      yield new NextValue(next, previous);\n      previous = next;\n    }\n  }\n\n  function* shrinkIncr() {\n    let previous = tryTargetAsap ? undefined : target;\n    const gap = tryTargetAsap ? realGap : halveBigInt(realGap);\n\n    for (let toremove = gap; toremove < 0; toremove = halveBigInt(toremove)) {\n      const next = current - toremove;\n      yield new NextValue(next, previous);\n      previous = next;\n    }\n  }\n\n  return realGap > 0 ? stream(shrinkDecr()) : stream(shrinkIncr());\n}","map":null,"metadata":{},"sourceType":"module"}