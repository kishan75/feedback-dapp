{"ast":null,"code":"import * as React from 'react';\nimport { GridEvents } from '../../../models/events';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\n\nconst getFlatRowTree = ({\n  ids,\n  idRowsLookup,\n  previousTree\n}) => {\n  const tree = {};\n\n  for (let i = 0; i < ids.length; i += 1) {\n    const rowId = ids[i];\n\n    if (previousTree && previousTree[rowId]) {\n      tree[rowId] = previousTree[rowId];\n    } else {\n      tree[rowId] = {\n        id: rowId,\n        depth: 0,\n        parent: null,\n        groupingKey: '',\n        groupingField: null\n      };\n    }\n  }\n\n  return {\n    groupingName: 'none',\n    tree,\n    treeDepth: 1,\n    idRowsLookup,\n    ids\n  };\n};\n\nexport const useGridRowGroupsPreProcessing = apiRef => {\n  const rowGroupsPreProcessingRef = React.useRef(new Map());\n  const registerRowGroupsBuilder = React.useCallback((processingName, rowGroupingPreProcessing) => {\n    var _rowGroupsPreProcessi;\n\n    const rowGroupingPreProcessingBefore = (_rowGroupsPreProcessi = rowGroupsPreProcessingRef.current.get(processingName)) != null ? _rowGroupsPreProcessi : null;\n\n    if (rowGroupingPreProcessingBefore !== rowGroupingPreProcessing) {\n      rowGroupsPreProcessingRef.current.set(processingName, rowGroupingPreProcessing);\n      apiRef.current.publishEvent(GridEvents.rowGroupsPreProcessingChange);\n    }\n  }, [apiRef]);\n  const groupRows = React.useCallback((...params) => {\n    let response = null;\n    const preProcessingList = Array.from(rowGroupsPreProcessingRef.current.values());\n\n    while (!response && preProcessingList.length) {\n      const preProcessing = preProcessingList.shift();\n\n      if (preProcessing) {\n        response = preProcessing(...params);\n      }\n    }\n\n    if (!response) {\n      return getFlatRowTree(...params);\n    }\n\n    return response;\n  }, []);\n  const rowGroupsPreProcessingApi = {\n    unstable_registerRowGroupsBuilder: registerRowGroupsBuilder,\n    unstable_groupRows: groupRows\n  };\n  useGridApiMethod(apiRef, rowGroupsPreProcessingApi, 'GridRowGroupsPreProcessing');\n};","map":null,"metadata":{},"sourceType":"module"}