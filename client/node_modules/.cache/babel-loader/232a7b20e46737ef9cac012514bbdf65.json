{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\ProfessorDetails\\\\professorDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport ProfessorDetailsFunctionBox from '../../FunctionBox/ProfessorDetailsFunctionBox/professorDetailsFunctionBox';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport \"./professorDetails.css\";\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n});\n\nconst ProfessorDetails = props => {\n  const _useState = useState({\n    address: props.mainState.account.address,\n    ticket: '',\n    name: 'Dr. ',\n    email: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        professorDetails = _useState2[0],\n        setProfessorDetails = _useState2[1];\n\n  const _useState3 = useState({\n    address: '',\n    ticket: '',\n    name: '',\n    email: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        professorErrors = _useState4[0],\n        setProfessorErrors = _useState4[1];\n\n  const _useState5 = useState({\n    message: '',\n    severity: '',\n    open: false\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        toast = _useState6[0],\n        setToast = _useState6[1]; // Asyncs:\n\n\n  const writeToBlockChain = async () => {\n    const feedbackData = props.mainState.contract.feedbackData;\n\n    if (feedbackData) {\n      let result = await feedbackData.createProfessor(professorDetails.name, professorDetails.email, professorDetails.ticket, {\n        from: professorDetails.address\n      });\n      result = result.logs[0].args[\"professor\"];\n      console.log(result);\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Feedback contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleProfessorInputChange = event => {\n    setProfessorDetails(_objectSpread({}, professorDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, professorErrors);\n\n    updatedErrors = validateProfessorInput(event.target.name, event.target.value, updatedErrors);\n    setProfessorErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handlerProfessorSubmit = () => {\n    let updatedErrors = _objectSpread({}, professorErrors);\n\n    for (var key in professorDetails) if (professorDetails.hasOwnProperty(key)) updatedErrors = validateProfessorInput(key, professorDetails[key], updatedErrors);\n\n    setProfessorErrors(_objectSpread({}, updatedErrors));\n\n    const fastProfessorErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastProfessorErrors) {\n      if (fastProfessorErrors.hasOwnProperty(key)) if (fastProfessorErrors[key] != '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(professorDetails);\n\n    if (ready) {\n      writeToBlockChain().then(r => {\n        console.log(r);\n        setToast({\n          message: 'TxN SUCCESS: You have been registered',\n          severity: 'success',\n          open: true\n        });\n        setTimeout(() => props.closeModal(), 3500);\n      }).catch(e => {\n        if (e.code == 'INVALID_ARGUMENT') setToast({\n          message: 'ERROR: Ticket should be in hex',\n          severity: 'error',\n          open: true\n        });else if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Invalid ticket',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  };\n\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setToast(_objectSpread({}, toast, {\n      open: false\n    }));\n  }; // Validators\n\n\n  const validateProfessorInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'name':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length < 5) updatedErrors[field] = 'Length should be greater than 5';else if (value.length > 30) updatedErrors[field] = 'Length should be smaller than 30';else updatedErrors[field] = '';\n        break;\n\n      case 'ticket':\n      case 'address':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length < 10) updatedErrors[field] = 'Length should be greater than 10';else if (value.length > 100) updatedErrors[field] = 'Length should be smaller than 100';else updatedErrors[field] = '';\n        break;\n\n      case 'email':\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!re.test(value)) updatedErrors[field] = 'Invalid email!';else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in'))) updatedErrors[field] = 'Invalid domain, accepted domains are @itbhu.ac.in or @iitbhu.ac.in';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    autoHideDuration: 4500,\n    open: toast.open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    onClose: handleToastClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: toast.severity,\n    sx: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, toast.message)), React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(ProfessorDetailsFunctionBox, {\n    data: professorDetails,\n    errors: professorErrors,\n    handleInputChange: handleProfessorInputChange,\n    handleSubmit: handlerProfessorSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })));\n};\n\nexport default ProfessorDetails;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/ProfessorDetails/professorDetails.js"],"names":["React","useState","useEffect","ProfessorDetailsFunctionBox","Snackbar","MuiAlert","Alert","forwardRef","props","ref","ProfessorDetails","address","mainState","account","ticket","name","email","professorDetails","setProfessorDetails","professorErrors","setProfessorErrors","message","severity","open","toast","setToast","writeToBlockChain","feedbackData","contract","result","createProfessor","from","logs","args","console","log","handleProfessorInputChange","event","target","value","updatedErrors","validateProfessorInput","handlerProfessorSubmit","key","hasOwnProperty","fastProfessorErrors","ready","then","r","setTimeout","closeModal","catch","e","code","handleToastClose","reason","field","length","re","test","endsWith","vertical","horizontal","width"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,2BAAP,MAAwC,2EAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAO,wBAAP;AAGA,MAAMC,KAAK,GAAGN,KAAK,CAACO,UAAN,CAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACtD,SAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC;AAA1C,KAAuDD,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CAFa,CAAd;;AAIA,MAAME,gBAAgB,GAAIF,KAAD,IAAW;AAAA,oBACgBP,QAAQ,CAAC;AACrDU,IAAAA,OAAO,EAAEH,KAAK,CAACI,SAAN,CAAgBC,OAAhB,CAAwBF,OADoB;AAErDG,IAAAA,MAAM,EAAE,EAF6C;AAGrDC,IAAAA,IAAI,EAAE,MAH+C;AAIrDC,IAAAA,KAAK,EAAE;AAJ8C,GAAD,CADxB;AAAA;AAAA,QACzBC,gBADyB;AAAA,QACPC,mBADO;;AAAA,qBAQcjB,QAAQ,CAAC;AACnDU,IAAAA,OAAO,EAAE,EAD0C;AAEnDG,IAAAA,MAAM,EAAE,EAF2C;AAGnDC,IAAAA,IAAI,EAAE,EAH6C;AAInDC,IAAAA,KAAK,EAAE;AAJ4C,GAAD,CARtB;AAAA;AAAA,QAQzBG,eARyB;AAAA,QAQRC,kBARQ;;AAAA,qBAeNnB,QAAQ,CAAC;AAC/BoB,IAAAA,OAAO,EAAE,EADsB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,IAAI,EAAE;AAHyB,GAAD,CAfF;AAAA;AAAA,QAezBC,KAfyB;AAAA,QAelBC,QAfkB,kBAqBhC;;;AACA,QAAMC,iBAAiB,GAAG,YAAY;AAClC,UAAMC,YAAY,GAAGnB,KAAK,CAACI,SAAN,CAAgBgB,QAAhB,CAAyBD,YAA9C;;AACA,QAAIA,YAAJ,EAAkB;AACd,UAAIE,MAAM,GAAG,MAAMF,YAAY,CAACG,eAAb,CAA6Bb,gBAAgB,CAACF,IAA9C,EAAoDE,gBAAgB,CAACD,KAArE,EAA4EC,gBAAgB,CAACH,MAA7F,EAAqG;AAAEiB,QAAAA,IAAI,EAAEd,gBAAgB,CAACN;AAAzB,OAArG,CAAnB;AACAkB,MAAAA,MAAM,GAAGA,MAAM,CAACG,IAAP,CAAY,CAAZ,EAAeC,IAAf,CAAoB,WAApB,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACH,KAJD,MAIO;AACHJ,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,OAAO,EAAE,gDAAX;AAA6DC,QAAAA,QAAQ,EAAE,OAAvE;AAAgFC,QAAAA,IAAI,EAAE;AAAtF,OAAD,CAAR;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH;AACJ,GAVD,CAtBgC,CAmChC;;;AACA,QAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAC1CnB,IAAAA,mBAAmB,mBACZD,gBADY;AAEf,OAACoB,KAAK,CAACC,MAAN,CAAavB,IAAd,GAAqBsB,KAAK,CAACC,MAAN,CAAaC;AAFnB,OAAnB;;AAKA,QAAIC,aAAa,qBAAQrB,eAAR,CAAjB;;AACAqB,IAAAA,aAAa,GAAGC,sBAAsB,CAACJ,KAAK,CAACC,MAAN,CAAavB,IAAd,EAAoBsB,KAAK,CAACC,MAAN,CAAaC,KAAjC,EAAwCC,aAAxC,CAAtC;AACApB,IAAAA,kBAAkB,mBAAMoB,aAAN,EAAlB;AACH,GATD;;AAYA,QAAME,sBAAsB,GAAG,MAAM;AACjC,QAAIF,aAAa,qBAAQrB,eAAR,CAAjB;;AAEA,SAAK,IAAIwB,GAAT,IAAgB1B,gBAAhB,EACI,IAAIA,gBAAgB,CAAC2B,cAAjB,CAAgCD,GAAhC,CAAJ,EACIH,aAAa,GAAGC,sBAAsB,CAACE,GAAD,EAAM1B,gBAAgB,CAAC0B,GAAD,CAAtB,EAA6BH,aAA7B,CAAtC;;AAERpB,IAAAA,kBAAkB,mBAAMoB,aAAN,EAAlB;;AACA,UAAMK,mBAAmB,qBAAQL,aAAR,CAAzB;;AAEA,QAAIM,KAAK,GAAG,IAAZ;;AACA,SAAK,IAAIH,GAAT,IAAgBE,mBAAhB,EAAqC;AACjC,UAAIA,mBAAmB,CAACD,cAApB,CAAmCD,GAAnC,CAAJ,EACI,IAAIE,mBAAmB,CAACF,GAAD,CAAnB,IAA4B,EAAhC,EACIG,KAAK,GAAG,KAAR;AACX;;AAEDZ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBW,KAAtB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYlB,gBAAZ;;AAEA,QAAI6B,KAAJ,EAAW;AACPpB,MAAAA,iBAAiB,GACZqB,IADL,CACUC,CAAC,IAAI;AACPd,QAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACAvB,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,uCAAX;AAAoDC,UAAAA,QAAQ,EAAE,SAA9D;AAAyEC,UAAAA,IAAI,EAAE;AAA/E,SAAD,CAAR;AACA0B,QAAAA,UAAU,CAAC,MAAMzC,KAAK,CAAC0C,UAAN,EAAP,EAA2B,IAA3B,CAAV;AACH,OALL,EAMMC,KANN,CAMYC,CAAC,IAAI;AACT,YAAIA,CAAC,CAACC,IAAF,IAAU,kBAAd,EACI5B,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,gCAAX;AAA6CC,UAAAA,QAAQ,EAAE,OAAvD;AAAgEC,UAAAA,IAAI,EAAE;AAAtE,SAAD,CAAR,CADJ,KAEK,IAAI6B,CAAC,CAACC,IAAF,IAAU,MAAd,EACD5B,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,0BAAX;AAAuCC,UAAAA,QAAQ,EAAE,SAAjD;AAA4DC,UAAAA,IAAI,EAAE;AAAlE,SAAD,CAAR,CADC,KAGDE,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,2BAAX;AAAwCC,UAAAA,QAAQ,EAAE,OAAlD;AAA2DC,UAAAA,IAAI,EAAE;AAAjE,SAAD,CAAR;AACP,OAbL;AAcH;AACJ,GApCD;;AAsCA,QAAM+B,gBAAgB,GAAG,CAACjB,KAAD,EAAQkB,MAAR,KAAmB;AACxC,QAAIA,MAAM,KAAK,WAAf,EACI;AACJ9B,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,IAAI,EAAE;AAAnB,OAAR;AACH,GAJD,CAtFgC,CA6FhC;;;AACA,QAAMkB,sBAAsB,GAAG,CAACe,KAAD,EAAQjB,KAAR,EAAeC,aAAf,KAAiC;AAC5D,YAAQgB,KAAR;AACI,WAAK,MAAL;AACI,YAAIjB,KAAK,CAACkB,MAAN,IAAgB,CAApB,EACIjB,aAAa,CAACgB,KAAD,CAAb,GAAuB,iBAAvB,CADJ,KAEK,IAAIjB,KAAK,CAACkB,MAAN,GAAe,CAAnB,EACDjB,aAAa,CAACgB,KAAD,CAAb,GAAuB,iCAAvB,CADC,KAEA,IAAIjB,KAAK,CAACkB,MAAN,GAAe,EAAnB,EACDjB,aAAa,CAACgB,KAAD,CAAb,GAAuB,kCAAvB,CADC,KAGDhB,aAAa,CAACgB,KAAD,CAAb,GAAuB,EAAvB;AACJ;;AACJ,WAAK,QAAL;AACA,WAAK,SAAL;AACI,YAAIjB,KAAK,CAACkB,MAAN,IAAgB,CAApB,EACIjB,aAAa,CAACgB,KAAD,CAAb,GAAuB,iBAAvB,CADJ,KAEK,IAAIjB,KAAK,CAACkB,MAAN,GAAe,EAAnB,EACDjB,aAAa,CAACgB,KAAD,CAAb,GAAuB,kCAAvB,CADC,KAEA,IAAIjB,KAAK,CAACkB,MAAN,GAAe,GAAnB,EACDjB,aAAa,CAACgB,KAAD,CAAb,GAAuB,mCAAvB,CADC,KAGDhB,aAAa,CAACgB,KAAD,CAAb,GAAuB,EAAvB;AACJ;;AACJ,WAAK,OAAL;AACI,YAAIE,EAAE,GAAG,2JAAT;AACA,YAAInB,KAAK,CAACkB,MAAN,IAAgB,CAApB,EACIjB,aAAa,CAACgB,KAAD,CAAb,GAAuB,iBAAvB,CADJ,KAEK,IAAI,CAACE,EAAE,CAACC,IAAH,CAAQpB,KAAR,CAAL,EACDC,aAAa,CAACgB,KAAD,CAAb,GAAuB,gBAAvB,CADC,KAEA,IAAI,EAAEjB,KAAK,CAACqB,QAAN,CAAe,cAAf,KAAkCrB,KAAK,CAACqB,QAAN,CAAe,eAAf,CAApC,CAAJ,EACDpB,aAAa,CAACgB,KAAD,CAAb,GAAuB,oEAAvB,CADC,KAGDhB,aAAa,CAACgB,KAAD,CAAb,GAAuB,EAAvB;AACJ;AAhCR;;AAkCA,WAAOhB,aAAP;AACH,GApCD;;AAuCA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,IAA5B;AAAkC,IAAA,IAAI,EAAEhB,KAAK,CAACD,IAA9C;AACI,IAAA,YAAY,EAAE;AAAEsC,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KADlB;AAC6D,IAAA,OAAO,EAAER,gBADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAE9B,KAAK,CAACF,QAAvB;AAAiC,IAAA,EAAE,EAAE;AAAEyC,MAAAA,KAAK,EAAE;AAAT,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvC,KAAK,CAACH,OADX,CAFJ,CADJ,EAQI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,2BAAD;AACI,IAAA,IAAI,EAAEJ,gBADV;AAEI,IAAA,MAAM,EAAEE,eAFZ;AAGI,IAAA,iBAAiB,EAAEiB,0BAHvB;AAII,IAAA,YAAY,EAAEM,sBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CARJ,CADJ;AAmBH,CAxJD;;AA0JA,eAAehC,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProfessorDetailsFunctionBox from '../../FunctionBox/ProfessorDetailsFunctionBox/professorDetailsFunctionBox';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport \"./professorDetails.css\";\r\n\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst ProfessorDetails = (props) => {\r\n    const [professorDetails, setProfessorDetails] = useState({\r\n        address: props.mainState.account.address,\r\n        ticket: '',\r\n        name: 'Dr. ',\r\n        email: '',\r\n    });\r\n\r\n    const [professorErrors, setProfessorErrors] = useState({\r\n        address: '',\r\n        ticket: '',\r\n        name: '',\r\n        email: '',\r\n    })\r\n\r\n    const [toast, setToast] = useState({\r\n        message: '',\r\n        severity: '',\r\n        open: false\r\n    })\r\n\r\n    // Asyncs:\r\n    const writeToBlockChain = async () => {\r\n        const feedbackData = props.mainState.contract.feedbackData;\r\n        if (feedbackData) {\r\n            let result = await feedbackData.createProfessor(professorDetails.name, professorDetails.email, professorDetails.ticket, { from: professorDetails.address });\r\n            result = result.logs[0].args[\"professor\"];\r\n            console.log(result);\r\n        } else {\r\n            setToast({ message: 'INTERNAL-ERROR: Feedback contract not deployed', severity: 'error', open: true });\r\n            console.log('Feedback contract not deployed');\r\n        }\r\n    }\r\n\r\n\r\n    // Handlers\r\n    const handleProfessorInputChange = (event) => {\r\n        setProfessorDetails({\r\n            ...professorDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let updatedErrors = { ...professorErrors };\r\n        updatedErrors = validateProfessorInput(event.target.name, event.target.value, updatedErrors);\r\n        setProfessorErrors({ ...updatedErrors });\r\n    };\r\n\r\n\r\n    const handlerProfessorSubmit = () => {\r\n        let updatedErrors = { ...professorErrors };\r\n\r\n        for (var key in professorDetails)\r\n            if (professorDetails.hasOwnProperty(key))\r\n                updatedErrors = validateProfessorInput(key, professorDetails[key], updatedErrors);\r\n\r\n        setProfessorErrors({ ...updatedErrors });\r\n        const fastProfessorErrors = { ...updatedErrors };\r\n\r\n        let ready = true;\r\n        for (var key in fastProfessorErrors) {\r\n            if (fastProfessorErrors.hasOwnProperty(key))\r\n                if (fastProfessorErrors[key] != '')\r\n                    ready = false;\r\n        }\r\n\r\n        console.log('Ready:', ready);\r\n        console.log(professorDetails);\r\n\r\n        if (ready) {\r\n            writeToBlockChain()\r\n                .then(r => {\r\n                    console.log(r);\r\n                    setToast({ message: 'TxN SUCCESS: You have been registered', severity: 'success', open: true });\r\n                    setTimeout(() => props.closeModal(), 3500);\r\n                }\r\n                ).catch(e => {\r\n                    if (e.code == 'INVALID_ARGUMENT')\r\n                        setToast({ message: 'ERROR: Ticket should be in hex', severity: 'error', open: true });\r\n                    else if (e.code == '4001')\r\n                        setToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n                    else\r\n                        setToast({ message: 'TxN ERROR: Invalid ticket', severity: 'error', open: true });\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleToastClose = (event, reason) => {\r\n        if (reason === 'clickaway')\r\n            return;\r\n        setToast({ ...toast, open: false });\r\n    };\r\n\r\n\r\n    // Validators\r\n    const validateProfessorInput = (field, value, updatedErrors) => {\r\n        switch (field) {\r\n            case 'name':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (value.length < 5)\r\n                    updatedErrors[field] = 'Length should be greater than 5';\r\n                else if (value.length > 30)\r\n                    updatedErrors[field] = 'Length should be smaller than 30';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'ticket':\r\n            case 'address':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (value.length < 10)\r\n                    updatedErrors[field] = 'Length should be greater than 10';\r\n                else if (value.length > 100)\r\n                    updatedErrors[field] = 'Length should be smaller than 100';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'email':\r\n                var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!re.test(value))\r\n                    updatedErrors[field] = 'Invalid email!';\r\n                else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in')))\r\n                    updatedErrors[field] = 'Invalid domain, accepted domains are @itbhu.ac.in or @iitbhu.ac.in';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n        }\r\n        return updatedErrors;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar autoHideDuration={4500} open={toast.open}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }} onClose={handleToastClose}>\r\n                <Alert severity={toast.severity} sx={{ width: '100%' }}>\r\n                    {toast.message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <div className='cards'>\r\n                <ProfessorDetailsFunctionBox\r\n                    data={professorDetails}\r\n                    errors={professorErrors}\r\n                    handleInputChange={handleProfessorInputChange}\r\n                    handleSubmit={handlerProfessorSubmit}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfessorDetails;"]},"metadata":{},"sourceType":"module"}