{"ast":null,"code":"import _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { loadContracts, loadCourses, loadEmails, loadFeedbacks, loadProfsByEmail, loadSkills, loadSkillsCount, setupMetamask } from \"./scripts/loader\"; // Pages\n\nimport HomePage from \"./pages/HomePage/homePage\";\nimport \"./App.css\";\nimport { Loader } from \"./components/utils/Loader\";\n\nrequire('dotenv').config();\n\nconst App = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        profEmails = _useState2[0],\n        setProfEmails = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        addressToEmail = _useState4[0],\n        setAddressToEmail = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        profsDetails = _useState6[0],\n        setProfsDetails = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skillCount = _useState8[0],\n        setSkillCount = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        profCourses = _useState10[0],\n        setProfCourses = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        feedbacks = _useState12[0],\n        setFeedbacks = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        account = _useState14[0],\n        setAccount = _useState14[1];\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        showLoader = _useState16[0],\n        setLoader = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        contracts = _useState18[0],\n        setContracts = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        skills = _useState20[0],\n        setSkills = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        isProf = _useState22[0],\n        setIsProf = _useState22[1]; // React useEffects\n\n\n  useEffect(() => {\n    (async () => {\n      const accountAddress = await setupMetamask();\n      setAccount(accountAddress);\n      const deployedContracts = await loadContracts();\n      setContracts(deployedContracts);\n      console.log(deployedContracts);\n      const skills = await loadSkills(deployedContracts);\n      setSkills(skills);\n      const emails = await loadEmails(deployedContracts);\n      setProfEmails(emails);\n      const profs = await loadProfsByEmail(deployedContracts, emails);\n      setProfsDetails(profs.profsDetails);\n      setAddressToEmail(profs.addressToEmail);\n      setIsProf(profs.addressToEmail[accountAddress] !== undefined);\n      const courses = await loadCourses(deployedContracts, emails);\n      setProfCourses(courses);\n\n      const _ref = await loadFeedbacks(deployedContracts, emails, courses),\n            feedbacks = _ref.feedbacks,\n            updatedCourses = _ref.updatedCourses;\n\n      setFeedbacks(feedbacks); //TODO update course with added feedbacks\n\n      console.log(feedbacks, updatedCourses);\n\n      const _ref2 = await loadSkillsCount(contracts, emails, profs),\n            skillsUpvote = _ref2.skillsUpvote,\n            updatedProfsDetail = _ref2.updatedProfsDetail;\n\n      setSkillCount(skillsUpvote); //TODO update profdetails with skills\n\n      console.log(skillsUpvote, updatedProfsDetail);\n    })();\n\n    setLoader(false);\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    show: showLoader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    element: React.createElement(HomePage // mainState={mainState}\n    // handleBalanceChange={handleBalanceChange}\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/App.js"],"names":["React","useState","useEffect","Routes","Route","loadContracts","loadCourses","loadEmails","loadFeedbacks","loadProfsByEmail","loadSkills","loadSkillsCount","setupMetamask","HomePage","Loader","require","config","App","profEmails","setProfEmails","addressToEmail","setAddressToEmail","profsDetails","setProfsDetails","skillCount","setSkillCount","profCourses","setProfCourses","feedbacks","setFeedbacks","account","setAccount","showLoader","setLoader","contracts","setContracts","skills","setSkills","isProf","setIsProf","accountAddress","deployedContracts","console","log","emails","profs","undefined","courses","updatedCourses","skillsUpvote","updatedProfsDetail"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport {\r\n  loadContracts,\r\n  loadCourses,\r\n  loadEmails,\r\n  loadFeedbacks,\r\n  loadProfsByEmail,\r\n  loadSkills,\r\n  loadSkillsCount,\r\n  setupMetamask,\r\n} from \"./scripts/loader\";\r\n\r\n// Pages\r\nimport HomePage from \"./pages/HomePage/homePage\";\r\n\r\nimport \"./App.css\";\r\nimport { Loader } from \"./components/utils/Loader\";\r\n\r\nrequire('dotenv').config()\r\n\r\nconst App = () => {\r\n  const [profEmails, setProfEmails] = useState(null);\r\n  const [addressToEmail, setAddressToEmail] = useState(null);\r\n\r\n  const [profsDetails, setProfsDetails] = useState(null);\r\n  const [skillCount, setSkillCount] = useState(null);\r\n  const [profCourses, setProfCourses] = useState(null);\r\n  const [feedbacks, setFeedbacks] = useState(null);\r\n\r\n  const [account, setAccount] = useState(null);\r\n  const [showLoader, setLoader] = useState(true);\r\n  const [contracts, setContracts] = useState(null);\r\n\r\n  const [skills, setSkills] = useState(null);\r\n  const [isProf, setIsProf] = useState(false);\r\n\r\n  // React useEffects\r\n  useEffect(() => {\r\n    (async () => {\r\n      const accountAddress = await setupMetamask();\r\n      setAccount(accountAddress);\r\n\r\n      const deployedContracts = await loadContracts();\r\n      setContracts(deployedContracts);\r\n\r\n      console.log(deployedContracts);\r\n      const skills = await loadSkills(deployedContracts);\r\n      setSkills(skills);\r\n\r\n      const emails = await loadEmails(deployedContracts);\r\n      setProfEmails(emails);\r\n\r\n      const profs = await loadProfsByEmail(deployedContracts, emails);\r\n      setProfsDetails(profs.profsDetails);\r\n      setAddressToEmail(profs.addressToEmail);\r\n      setIsProf(profs.addressToEmail[accountAddress] !== undefined);\r\n\r\n      const courses = await loadCourses(deployedContracts, emails);\r\n      setProfCourses(courses);\r\n\r\n      const { feedbacks, updatedCourses } = await loadFeedbacks(\r\n        deployedContracts,\r\n        emails,\r\n        courses\r\n      );\r\n      setFeedbacks(feedbacks);\r\n      //TODO update course with added feedbacks\r\n      console.log(feedbacks, updatedCourses);\r\n\r\n      const { skillsUpvote, updatedProfsDetail } = await loadSkillsCount(\r\n        contracts,\r\n        emails,\r\n        profs\r\n      );\r\n      setSkillCount(skillsUpvote);\r\n      //TODO update profdetails with skills\r\n      console.log(skillsUpvote, updatedProfsDetail);\r\n    })();\r\n    setLoader(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Loader show={showLoader}></Loader>\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={\r\n            <HomePage\r\n            // mainState={mainState}\r\n            // handleBalanceChange={handleBalanceChange}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}