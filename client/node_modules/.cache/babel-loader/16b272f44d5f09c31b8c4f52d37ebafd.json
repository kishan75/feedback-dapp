{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\FeedbackSubmit\\\\feedbackSubmit.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport ConfirmationNumberIcon from \"@mui/icons-material/ConfirmationNumber\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Button from \"@mui/material/Button\"; // List\n\nimport List from \"@mui/material/List\";\nimport { red } from \"@mui/material/colors\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport \"./feedbackSubmit.scss\";\n\nconst FeedbackSubmit = props => {\n  const _useState = useState({\n    feedback: \"\",\n    ticket: \"\",\n    skills: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        feedbackDetails = _useState2[0],\n        setFeedbackDetails = _useState2[1];\n\n  const _useState3 = useState({\n    feedback: \"\",\n    ticket: \"\"\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        feedbackErrors = _useState4[0],\n        setFeedbackErrors = _useState4[1]; // List state\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        checked = _useState6[0],\n        setChecked = _useState6[1]; // List handler\n\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) newChecked.push(value);else newChecked.splice(currentIndex, 1);\n    setChecked(newChecked);\n    setFeedbackDetails(_objectSpread({}, feedbackDetails, {\n      skills: newChecked\n    }));\n    console.log(feedbackDetails);\n  }; // Input handler\n\n\n  const handleInputChange = event => {\n    setFeedbackDetails(_objectSpread({}, feedbackDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, feedbackErrors);\n\n    updatedErrors = validateInput(event.target.name, event.target.value, updatedErrors);\n    setFeedbackErrors(_objectSpread({}, updatedErrors));\n  }; // Submit handler\n\n\n  const handleFeedbackSubmit = () => {\n    //props.onLoading(true);\n    let updatedErrors = _objectSpread({}, feedbackErrors);\n\n    for (var key in feedbackErrors) if (feedbackDetails.hasOwnProperty(key)) updatedErrors = validateInput(key, feedbackDetails[key], updatedErrors);\n\n    setFeedbackErrors(_objectSpread({}, updatedErrors));\n\n    const fastFeedbackErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastFeedbackErrors) {\n      if (fastFeedbackErrors.hasOwnProperty(key)) if (fastFeedbackErrors[key] != \"\") ready = false;\n    }\n\n    console.log(\"Ready:\", ready);\n    console.log(feedbackDetails); // Write to blockChain\n  }; // Validators\n\n\n  const validateInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case \"feedback\":\n        if (value.length == 0) updatedErrors[field] = \"Cannot be empty\";else if (value.length < 10) updatedErrors[field] = \"Length should be greater than 10\";else if (value.length > 5000) updatedErrors[field] = \"Length should be less than 5000\";else if (!/^[a-zA-Z0-9\\s]*$/.test(value)) updatedErrors[field] = \"Feedback should only contain letters and numbers\";else updatedErrors[field] = \"\";\n        break;\n\n      case \"ticket\":\n        if (value.length == 0) updatedErrors[field] = \"Cannot be empty\";else if (value.length < 10) updatedErrors[field] = \"Length should be greater than 10\";else if (value.length > 100) updatedErrors[field] = \"Length should be smaller than 100\";else updatedErrors[field] = \"\";\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"feedbackSubmit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"feedbackSideStats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \" Course Information \"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \" Professor: \", props.prof.name, \" \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \" Course: \", props.course.name, \" \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" Code: \", props.course.code, \" \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \" Year: \", props.course.year, \" \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \" Semester: \", props.course.semester, \" \"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \" Strength: \", props.course.studentCount, \" \"))), React.createElement(\"div\", {\n    className: \"feedbackMain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \" Feedback Submission \"), React.createElement(\"div\", {\n    className: \"feedbackInput\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(CssTextField, {\n    id: \"feedback-input\",\n    name: \"feedback\",\n    label: \"FEEDBACK\",\n    multiline: true,\n    rows: 5,\n    value: feedbackDetails.feedback,\n    onChange: handleInputChange,\n    error: feedbackErrors.feedback,\n    helperText: feedbackErrors.feedback,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }), React.createElement(List, {\n    sx: {\n      border: \"1px solid white\",\n      borderRadius: \"3px\",\n      marginLeft: \"1rem\",\n      width: \"80%\",\n      maxWidth: 320,\n      bgcolor: \"#1f1f1f\",\n      position: \"relative\",\n      overflow: \"auto\",\n      maxHeight: 150,\n      \"& ul\": {\n        padding: 0\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, props.skills.map((value, i) => {\n    const labelId = \"checkbox-list-label-\".concat(value);\n    return React.createElement(ListItem, {\n      key: i,\n      disablePadding: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(ListItemButton, {\n      role: undefined,\n      onClick: handleToggle(value),\n      dense: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      edge: \"start\",\n      sx: {\n        color: red[800],\n        \"&.Mui-checked\": {\n          color: red[600]\n        }\n      },\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        \"aria-labelledby\": labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })));\n  }))), React.createElement(\"div\", {\n    className: \"hr\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"feedbackFinal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(CssTextField, {\n    sx: {\n      margin: \"1rem\"\n    },\n    InputProps: {\n      startAdornment: React.createElement(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(ConfirmationNumberIcon, {\n        sx: {\n          color: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))\n    },\n    id: \"input-ticket\",\n    name: \"ticket\",\n    value: feedbackDetails.ticket,\n    onChange: handleInputChange,\n    label: \"UNIQUE TICKET\",\n    error: feedbackErrors.ticket,\n    helperText: feedbackErrors.ticket,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(Button, {\n    sx: {\n      margin: \"1rem\",\n      width: 300,\n      height: 55,\n      fontSize: \"1rem\"\n    },\n    size: \"large\",\n    color: \"error\",\n    variant: \"contained\",\n    endIcon: React.createElement(SendIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }),\n    onClick: handleFeedbackSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nexport default FeedbackSubmit;\nconst CssTextField = styled(TextField)({\n  \"& .MuiInputBase-input\": {\n    color: \"white\"\n  },\n  \"& label\": {\n    color: \"white\"\n  },\n  \"& label.Mui-focused\": {\n    color: \"white\"\n  },\n  \"& .MuiInput-underline:after\": {\n    borderBottomColor: \"#ce3333\"\n  },\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      borderColor: \"white\"\n    },\n    \"&:hover fieldset\": {\n      borderColor: \"#ce3333\"\n    },\n    \"&.Mui-focused fieldset\": {\n      borderColor: \"#ce3333\"\n    }\n  },\n  \"& .MuiFormLabel-root.Mui-error\": {\n    color: \"#ffdd00 !important\"\n  },\n  \"& label.Mui-focused.Mui-error\": {\n    color: \"white !important\"\n  },\n  \"& .MuiOutlinedInput-root.Mui-error\": {\n    \"& fieldset\": {\n      borderColor: \"#ffdd00 !important\"\n    },\n    \"&:hover fieldset\": {\n      borderColor: \"#ffdd00 !important\"\n    },\n    \"&.Mui-focused fieldset\": {\n      borderColor: \"#ffdd00 !important\"\n    }\n  }\n});","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/FeedbackSubmit/feedbackSubmit.js"],"names":["React","useState","styled","TextField","InputAdornment","ConfirmationNumberIcon","SendIcon","Button","List","red","ListItem","ListItemButton","ListItemIcon","ListItemText","Checkbox","FeedbackSubmit","props","feedback","ticket","skills","feedbackDetails","setFeedbackDetails","feedbackErrors","setFeedbackErrors","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","console","log","handleInputChange","event","target","name","updatedErrors","validateInput","handleFeedbackSubmit","key","hasOwnProperty","fastFeedbackErrors","ready","field","length","test","prof","course","code","year","semester","studentCount","border","borderRadius","marginLeft","width","maxWidth","bgcolor","position","overflow","maxHeight","padding","map","i","labelId","undefined","color","margin","startAdornment","height","fontSize","CssTextField","borderBottomColor","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport ConfirmationNumberIcon from \"@mui/icons-material/ConfirmationNumber\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\n// List\r\nimport List from \"@mui/material/List\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\n\r\nimport \"./feedbackSubmit.scss\";\r\n\r\nconst FeedbackSubmit = (props) => {\r\n  const [feedbackDetails, setFeedbackDetails] = useState({\r\n    feedback: \"\",\r\n    ticket: \"\",\r\n    skills: [],\r\n  });\r\n\r\n  const [feedbackErrors, setFeedbackErrors] = useState({\r\n    feedback: \"\",\r\n    ticket: \"\",\r\n  });\r\n\r\n  // List state\r\n  const [checked, setChecked] = useState([]);\r\n\r\n  // List handler\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) newChecked.push(value);\r\n    else newChecked.splice(currentIndex, 1);\r\n\r\n    setChecked(newChecked);\r\n    setFeedbackDetails({ ...feedbackDetails, skills: newChecked });\r\n\r\n    console.log(feedbackDetails);\r\n  };\r\n\r\n  // Input handler\r\n  const handleInputChange = (event) => {\r\n    setFeedbackDetails({\r\n      ...feedbackDetails,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n\r\n    let updatedErrors = { ...feedbackErrors };\r\n    updatedErrors = validateInput(\r\n      event.target.name,\r\n      event.target.value,\r\n      updatedErrors\r\n    );\r\n    setFeedbackErrors({ ...updatedErrors });\r\n  };\r\n\r\n  // Submit handler\r\n  const handleFeedbackSubmit = () => {\r\n    //props.onLoading(true);\r\n    let updatedErrors = { ...feedbackErrors };\r\n\r\n    for (var key in feedbackErrors)\r\n      if (feedbackDetails.hasOwnProperty(key))\r\n        updatedErrors = validateInput(key, feedbackDetails[key], updatedErrors);\r\n\r\n    setFeedbackErrors({ ...updatedErrors });\r\n    const fastFeedbackErrors = { ...updatedErrors };\r\n\r\n    let ready = true;\r\n    for (var key in fastFeedbackErrors) {\r\n      if (fastFeedbackErrors.hasOwnProperty(key))\r\n        if (fastFeedbackErrors[key] != \"\") ready = false;\r\n    }\r\n\r\n    console.log(\"Ready:\", ready);\r\n    console.log(feedbackDetails);\r\n\r\n    // Write to blockChain\r\n  };\r\n\r\n  // Validators\r\n  const validateInput = (field, value, updatedErrors) => {\r\n    switch (field) {\r\n      case \"feedback\":\r\n        if (value.length == 0) updatedErrors[field] = \"Cannot be empty\";\r\n        else if (value.length < 10)\r\n          updatedErrors[field] = \"Length should be greater than 10\";\r\n        else if (value.length > 5000)\r\n          updatedErrors[field] = \"Length should be less than 5000\";\r\n        else if (!/^[a-zA-Z0-9\\s]*$/.test(value))\r\n          updatedErrors[field] =\r\n            \"Feedback should only contain letters and numbers\";\r\n        else updatedErrors[field] = \"\";\r\n        break;\r\n      case \"ticket\":\r\n        if (value.length == 0) updatedErrors[field] = \"Cannot be empty\";\r\n        else if (value.length < 10)\r\n          updatedErrors[field] = \"Length should be greater than 10\";\r\n        else if (value.length > 100)\r\n          updatedErrors[field] = \"Length should be smaller than 100\";\r\n        else updatedErrors[field] = \"\";\r\n        break;\r\n    }\r\n    return updatedErrors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"feedbackSubmit\">\r\n      <div className=\"feedbackSideStats\">\r\n        <h1> Course Information </h1>\r\n        <ul>\r\n          <li> Professor: {props.prof.name} </li>\r\n          <li> Course: {props.course.name} </li>\r\n          <li> Code: {props.course.code} </li>\r\n          <li> Year: {props.course.year} </li>\r\n          <li> Semester: {props.course.semester} </li>\r\n          <li> Strength: {props.course.studentCount} </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"feedbackMain\">\r\n        <h1> Feedback Submission </h1>\r\n        <div className=\"feedbackInput\">\r\n          <CssTextField\r\n            id=\"feedback-input\"\r\n            name=\"feedback\"\r\n            label=\"FEEDBACK\"\r\n            multiline\r\n            rows={5}\r\n            value={feedbackDetails.feedback}\r\n            onChange={handleInputChange}\r\n            error={feedbackErrors.feedback}\r\n            helperText={feedbackErrors.feedback}\r\n          />\r\n\r\n          <List\r\n            sx={{\r\n              border: \"1px solid white\",\r\n              borderRadius: \"3px\",\r\n              marginLeft: \"1rem\",\r\n              width: \"80%\",\r\n              maxWidth: 320,\r\n              bgcolor: \"#1f1f1f\",\r\n              position: \"relative\",\r\n              overflow: \"auto\",\r\n              maxHeight: 150,\r\n              \"& ul\": { padding: 0 },\r\n            }}\r\n          >\r\n            {props.skills.map((value, i) => {\r\n              const labelId = `checkbox-list-label-${value}`;\r\n\r\n              return (\r\n                <ListItem key={i} disablePadding>\r\n                  <ListItemButton\r\n                    role={undefined}\r\n                    onClick={handleToggle(value)}\r\n                    dense\r\n                  >\r\n                    <ListItemIcon>\r\n                      <Checkbox\r\n                        edge=\"start\"\r\n                        sx={{\r\n                          color: red[800],\r\n                          \"&.Mui-checked\": {\r\n                            color: red[600],\r\n                          },\r\n                        }}\r\n                        checked={checked.indexOf(value) !== -1}\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        inputProps={{ \"aria-labelledby\": labelId }}\r\n                      />\r\n                    </ListItemIcon>\r\n                    <ListItemText id={labelId} primary={value} />\r\n                  </ListItemButton>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n        </div>\r\n        <div className=\"hr\" />\r\n        <div className=\"feedbackFinal\">\r\n          <CssTextField\r\n            sx={{ margin: \"1rem\" }}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <ConfirmationNumberIcon sx={{ color: \"white\" }} />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            id=\"input-ticket\"\r\n            name=\"ticket\"\r\n            value={feedbackDetails.ticket}\r\n            onChange={handleInputChange}\r\n            label=\"UNIQUE TICKET\"\r\n            error={feedbackErrors.ticket}\r\n            helperText={feedbackErrors.ticket}\r\n          />\r\n\r\n          <Button\r\n            sx={{ margin: \"1rem\", width: 300, height: 55, fontSize: \"1rem\" }}\r\n            size=\"large\"\r\n            color=\"error\"\r\n            variant=\"contained\"\r\n            endIcon={<SendIcon />}\r\n            onClick={handleFeedbackSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackSubmit;\r\n\r\nconst CssTextField = styled(TextField)({\r\n  \"& .MuiInputBase-input\": {\r\n    color: \"white\",\r\n  },\r\n  \"& label\": {\r\n    color: \"white\",\r\n  },\r\n  \"& label.Mui-focused\": {\r\n    color: \"white\",\r\n  },\r\n  \"& .MuiInput-underline:after\": {\r\n    borderBottomColor: \"#ce3333\",\r\n  },\r\n  \"& .MuiOutlinedInput-root\": {\r\n    \"& fieldset\": {\r\n      borderColor: \"white\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      borderColor: \"#ce3333\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      borderColor: \"#ce3333\",\r\n    },\r\n  },\r\n\r\n  \"& .MuiFormLabel-root.Mui-error\": {\r\n    color: \"#ffdd00 !important\",\r\n  },\r\n  \"& label.Mui-focused.Mui-error\": {\r\n    color: \"white !important\",\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-error\": {\r\n    \"& fieldset\": {\r\n      borderColor: \"#ffdd00 !important\",\r\n    },\r\n    \"&:hover fieldset\": {\r\n      borderColor: \"#ffdd00 !important\",\r\n    },\r\n    \"&.Mui-focused fieldset\": {\r\n      borderColor: \"#ffdd00 !important\",\r\n    },\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}