{"ast":null,"code":"import * as React from 'react';\nimport { useGridLogger } from './useGridLogger';\nexport function useGridScrollFn(apiRef, renderingZoneElementRef, columnHeadersElementRef) {\n  const logger = useGridLogger(apiRef, 'useGridScrollFn');\n  const previousValue = React.useRef();\n  const scrollTo = React.useCallback(v => {\n    var _previousValue$curren;\n\n    if (v.left === ((_previousValue$curren = previousValue.current) == null ? void 0 : _previousValue$curren.left) && v.top === previousValue.current.top) {\n      return;\n    }\n\n    if (renderingZoneElementRef && renderingZoneElementRef.current) {\n      logger.debug(\"Moving \".concat(renderingZoneElementRef.current.className, \" to: \").concat(v.left, \"-\").concat(v.top)); // Force the creation of a layer, avoid paint when changing the transform value.\n\n      renderingZoneElementRef.current.style.transform = \"translate3d(\".concat(-v.left, \"px, \").concat(-v.top, \"px, 0px)\");\n      columnHeadersElementRef.current.style.transform = \"translate3d(\".concat(-v.left, \"px, 0px, 0px)\");\n      previousValue.current = v;\n    }\n  }, [renderingZoneElementRef, logger, columnHeadersElementRef]);\n  return [scrollTo];\n}","map":null,"metadata":{},"sourceType":"module"}