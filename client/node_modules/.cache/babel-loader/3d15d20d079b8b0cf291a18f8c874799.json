{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\AddCourses\\\\addCourses.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport AddCourseFunctionBox from '../../FunctionBox/AddCoursesFunctionBox/addCoursesFunctionBox';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n});\n\nconst AddCourses = props => {\n  const _useState = useState({\n    email: 'fixedemail@iitbhu.ac.in',\n    year: '',\n    numCourses: '',\n    courses: [{\n      name: '',\n      code: '',\n      sem: '',\n      students: ''\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        addCourseDetails = _useState2[0],\n        setAddCourseDetails = _useState2[1];\n\n  const _useState3 = useState({\n    email: '',\n    year: '',\n    numCourses: '',\n    courses: [{\n      name: '',\n      code: '',\n      sem: '',\n      students: ''\n    }]\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        addCourseErrors = _useState4[0],\n        setAddCourseErrors = _useState4[1];\n\n  const _useState5 = useState({\n    message: '',\n    severity: '',\n    open: false\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        toast = _useState6[0],\n        setToast = _useState6[1];\n\n  useEffect(() => {\n    const course = {\n      name: '',\n      code: '',\n      sem: '',\n      students: ''\n    };\n    let updatedCourses = [];\n\n    for (var i = 0; i < addCourseDetails.numCourses; i++) updatedCourses.push(course);\n\n    setAddCourseDetails(_objectSpread({}, addCourseDetails, {\n      courses: updatedCourses\n    }));\n    let updatedCourseErrors = [];\n\n    for (var i = 0; i < addCourseDetails.numCourses; i++) updatedCourseErrors.push(course);\n\n    setAddCourseErrors(_objectSpread({}, addCourseErrors, {\n      courses: updatedCourseErrors\n    }));\n  }, [addCourseDetails.numCourses]); // Validators\n\n  const validateAddCourseInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'email':\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!re.test(value)) updatedErrors[field] = 'Invalid email!';else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in'))) updatedErrors[field] = 'Invalid domain, accepted domains are @itbhu.ac.in or @iitbhu.ac.in';else updatedErrors[field] = '';\n        break;\n\n      case 'year':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Year should be numerical';else if (value.length != 4) updatedErrors[field] = 'Length should be exacty 4';else if (!(value > 2000)) updatedErrors[field] = 'Year should be greater than 2000';else updatedErrors[field] = '';\n        break;\n\n      case 'numCourses':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Should be numerical';else if (value == 0) updatedErrors[field] = 'Cannot be 0';else updatedErrors[field] = '';\n        break;\n\n      case 'name':\n      case 'code':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length > 50) updatedErrors[field] = 'Length should be smaller than 50';else updatedErrors[field] = '';\n        break;\n\n      case 'sem':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!(value == 0 || value == 1)) updatedErrors[field] = 'Can only be Even or Odd';else updatedErrors[field] = '';\n        break;\n\n      case 'students':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Should be numerical';else if (value.length > 3) updatedErrors[field] = 'Not more than three digits';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  }; // Asyncs:\n\n\n  const writeToBlockChain = async () => {\n    const feedbackData = props.mainState.contract.feedbackData;\n    const courses = addCourseDetails.courses;\n    console.log(feedbackData);\n    console.log(courses);\n\n    if (feedbackData) {\n      for (var i = 0; i < courses.length; i++) {\n        const _courses$i = courses[i],\n              name = _courses$i.name,\n              code = _courses$i.code,\n              sem = _courses$i.sem,\n              students = _courses$i.students;\n        let result = await feedbackData.addCourse(addCourseDetails.year, addCourseDetails.email, name, code, sem, students, {\n          from: props.mainState.account.address\n        });\n        result = result.logs[0].args[\"course\"];\n        console.log(result);\n        if (result == undefined) setToast({\n          message: \"INTERNAL-ERROR: No response for TxN[\".concat(i + 1, \", \").concat(code, \"]\"),\n          severity: 'error',\n          open: true\n        });\n      }\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Feedback contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleAddCourseInputChange = event => {\n    setAddCourseDetails(_objectSpread({}, addCourseDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, addCourseErrors);\n\n    updatedErrors = validateAddCourseInput(event.target.name, event.target.value, updatedErrors);\n    setAddCourseErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleCourseChange = (event, index) => {\n    let updatedCourses = [...addCourseDetails.courses];\n\n    let updatedCourse = _objectSpread({}, updatedCourses[index]);\n\n    updatedCourse[event.target.name] = event.target.value;\n    updatedCourses[index] = updatedCourse;\n    setAddCourseDetails(_objectSpread({}, addCourseDetails, {\n      courses: updatedCourses\n    }));\n    let updatedErrorses = [...addCourseErrors.courses];\n\n    let updatedErrors = _objectSpread({}, updatedErrorses[index]);\n\n    updatedErrors = validateAddCourseInput(event.target.name, event.target.value, updatedErrors);\n    updatedErrorses[index] = updatedErrors;\n    setAddCourseErrors(_objectSpread({}, addCourseErrors, {\n      courses: updatedErrorses\n    }));\n  };\n\n  const handlerAddCourseSubmit = () => {\n    let updatedErrors = _objectSpread({}, addCourseErrors);\n\n    let updatedCourseErrorses = [...addCourseErrors.courses];\n\n    for (var key in addCourseDetails) {\n      if (addCourseDetails.hasOwnProperty(key)) {\n        if (!Array.isArray(addCourseDetails[key])) {\n          updatedErrors = validateAddCourseInput(key, addCourseDetails[key], updatedErrors);\n        } else {\n          for (var i = 0; i < addCourseDetails.courses.length; i++) {\n            for (var key in addCourseDetails.courses[i]) {\n              if (addCourseDetails.courses[i].hasOwnProperty(key)) {\n                let updatedCourseErrors = _objectSpread({}, updatedCourseErrorses[i]);\n\n                updatedCourseErrors = validateAddCourseInput(key, addCourseDetails.courses[i][key], updatedCourseErrors);\n                updatedCourseErrorses[i] = updatedCourseErrors;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    setAddCourseErrors(_objectSpread({}, updatedErrors, {\n      courses: updatedCourseErrorses\n    }));\n\n    const fastaddCourseErrors = _objectSpread({}, updatedErrors, {\n      courses: updatedCourseErrorses\n    });\n\n    let ready = true;\n\n    for (var key in fastaddCourseErrors) {\n      if (fastaddCourseErrors.hasOwnProperty(key)) {\n        if (!Array.isArray(fastaddCourseErrors[key])) {\n          if (fastaddCourseErrors[key] != '') ready = false;\n        } else {\n          if (fastaddCourseErrors[key].length == 0) ready = false;\n\n          for (var i = 0; i < fastaddCourseErrors.courses.length; i++) for (var key in fastaddCourseErrors.courses[i]) if (fastaddCourseErrors.courses[i].hasOwnProperty(key)) if (fastaddCourseErrors.courses[i][key] != '') ready = false;\n        }\n      }\n    }\n\n    console.log('Ready:', ready);\n    console.log(addCourseDetails);\n\n    if (ready) {\n      writeToBlockChain().then(r => {\n        console.log(r);\n        setToast({\n          message: 'TxN SUCCESS: Course(s) have been added',\n          severity: 'success',\n          open: true\n        });\n        setTimeout(() => props.closeModal(), 3500);\n      }).catch(e => {\n        console.log(e);\n        if (e.code == 'INVALID_ARGUMENT') setToast({\n          message: 'ERROR: INVALID_ARGUMENT',\n          severity: 'error',\n          open: true\n        });else if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Something went wrong',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  };\n\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setToast(_objectSpread({}, toast, {\n      open: false\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, React.createElement(Snackbar, {\n    autoHideDuration: 4500,\n    open: toast.open,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    onClose: handleToastClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: toast.severity,\n    sx: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, toast.message)), React.createElement(AddCourseFunctionBox, {\n    data: addCourseDetails,\n    errors: addCourseErrors,\n    handleInputChange: handleAddCourseInputChange,\n    handleCourseChange: handleCourseChange,\n    handleSubmit: handlerAddCourseSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }));\n};\n\nexport default AddCourses;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/AddCourses/addCourses.js"],"names":["React","useState","useEffect","AddCourseFunctionBox","Snackbar","MuiAlert","Alert","forwardRef","props","ref","AddCourses","email","year","numCourses","courses","name","code","sem","students","addCourseDetails","setAddCourseDetails","addCourseErrors","setAddCourseErrors","message","severity","open","toast","setToast","course","updatedCourses","i","push","updatedCourseErrors","validateAddCourseInput","field","value","updatedErrors","re","length","test","endsWith","writeToBlockChain","feedbackData","mainState","contract","console","log","result","addCourse","from","account","address","logs","args","undefined","handleAddCourseInputChange","event","target","handleCourseChange","index","updatedCourse","updatedErrorses","handlerAddCourseSubmit","updatedCourseErrorses","key","hasOwnProperty","Array","isArray","fastaddCourseErrors","ready","then","r","setTimeout","closeModal","catch","e","handleToastClose","reason","vertical","horizontal","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AddCourseFunctionBox from '../../FunctionBox/AddCoursesFunctionBox/addCoursesFunctionBox';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\nconst AddCourses = (props) => {\r\n    const [addCourseDetails, setAddCourseDetails] = useState({\r\n        email: 'fixedemail@iitbhu.ac.in',\r\n        year: '',\r\n        numCourses: '',\r\n        courses: [{\r\n            name: '',\r\n            code: '',\r\n            sem: '',\r\n            students: ''\r\n        }]\r\n    });\r\n\r\n    const [addCourseErrors, setAddCourseErrors] = useState({\r\n        email: '',\r\n        year: '',\r\n        numCourses: '',\r\n        courses: [{\r\n            name: '',\r\n            code: '',\r\n            sem: '',\r\n            students: ''\r\n        }]\r\n    })\r\n\r\n    const [toast, setToast] = useState({\r\n        message: '',\r\n        severity: '',\r\n        open: false\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        const course = { name: '', code: '', sem: '', students: '' };\r\n        let updatedCourses = []\r\n        for (var i = 0; i < addCourseDetails.numCourses; i++)\r\n            updatedCourses.push(course);\r\n\r\n        setAddCourseDetails({\r\n            ...addCourseDetails,\r\n            courses: updatedCourses\r\n        });\r\n\r\n\r\n        let updatedCourseErrors = []\r\n        for (var i = 0; i < addCourseDetails.numCourses; i++)\r\n            updatedCourseErrors.push(course);\r\n\r\n        setAddCourseErrors({\r\n            ...addCourseErrors,\r\n            courses: updatedCourseErrors\r\n        });\r\n    }, [addCourseDetails.numCourses]);\r\n\r\n\r\n    // Validators\r\n    const validateAddCourseInput = (field, value, updatedErrors) => {\r\n        switch (field) {\r\n            case 'email':\r\n                var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!re.test(value))\r\n                    updatedErrors[field] = 'Invalid email!';\r\n                else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in')))\r\n                    updatedErrors[field] = 'Invalid domain, accepted domains are @itbhu.ac.in or @iitbhu.ac.in';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'year':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!/^\\d+$/.test(value))\r\n                    updatedErrors[field] = 'Year should be numerical';\r\n                else if (value.length != 4)\r\n                    updatedErrors[field] = 'Length should be exacty 4';\r\n                else if (!(value > 2000))\r\n                    updatedErrors[field] = 'Year should be greater than 2000';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'numCourses':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!/^\\d+$/.test(value))\r\n                    updatedErrors[field] = 'Should be numerical';\r\n                else if (value == 0)\r\n                    updatedErrors[field] = 'Cannot be 0';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'name':\r\n            case 'code':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (value.length > 50)\r\n                    updatedErrors[field] = 'Length should be smaller than 50';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'sem':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!(value == 0 || value == 1))\r\n                    updatedErrors[field] = 'Can only be Even or Odd';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n            case 'students':\r\n                if (value.length == 0)\r\n                    updatedErrors[field] = 'Cannot be empty';\r\n                else if (!/^\\d+$/.test(value))\r\n                    updatedErrors[field] = 'Should be numerical';\r\n                else if (value.length > 3)\r\n                    updatedErrors[field] = 'Not more than three digits';\r\n                else\r\n                    updatedErrors[field] = ''\r\n                break;\r\n        }\r\n        return updatedErrors;\r\n    }\r\n\r\n\r\n    // Asyncs:\r\n    const writeToBlockChain = async () => {\r\n        const feedbackData = props.mainState.contract.feedbackData;\r\n        const courses = addCourseDetails.courses;\r\n        console.log(feedbackData);\r\n        console.log(courses);\r\n        if (feedbackData) {\r\n            for (var i = 0; i < courses.length; i++) {\r\n                const { name, code, sem, students } = courses[i];\r\n                let result = await feedbackData.addCourse(\r\n                    addCourseDetails.year,\r\n                    addCourseDetails.email,\r\n                    name,\r\n                    code,\r\n                    sem,\r\n                    students, { from: props.mainState.account.address }\r\n                );\r\n\r\n                result = result.logs[0].args[\"course\"];\r\n                console.log(result);\r\n                if (result == undefined)\r\n                    setToast({ message: `INTERNAL-ERROR: No response for TxN[${i + 1}, ${code}]`, severity: 'error', open: true });\r\n            }\r\n        } else {\r\n            setToast({ message: 'INTERNAL-ERROR: Feedback contract not deployed', severity: 'error', open: true });\r\n            console.log('Feedback contract not deployed');\r\n        }\r\n    }\r\n\r\n\r\n    // Handlers\r\n    const handleAddCourseInputChange = (event) => {\r\n        setAddCourseDetails({\r\n            ...addCourseDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n        let updatedErrors = { ...addCourseErrors };\r\n        updatedErrors = validateAddCourseInput(event.target.name, event.target.value, updatedErrors);\r\n        setAddCourseErrors({ ...updatedErrors });\r\n    };\r\n\r\n    const handleCourseChange = (event, index) => {\r\n        let updatedCourses = [...addCourseDetails.courses];\r\n        let updatedCourse = { ...updatedCourses[index] };\r\n        updatedCourse[event.target.name] = event.target.value;\r\n        updatedCourses[index] = updatedCourse;\r\n\r\n        setAddCourseDetails({\r\n            ...addCourseDetails,\r\n            courses: updatedCourses,\r\n        });\r\n\r\n        let updatedErrorses = [...addCourseErrors.courses];\r\n        let updatedErrors = { ...updatedErrorses[index] };\r\n        updatedErrors = validateAddCourseInput(event.target.name, event.target.value, updatedErrors);\r\n        updatedErrorses[index] = updatedErrors;\r\n        setAddCourseErrors({ ...addCourseErrors, courses: updatedErrorses });\r\n    };\r\n\r\n\r\n    const handlerAddCourseSubmit = () => {\r\n        let updatedErrors = { ...addCourseErrors };\r\n        let updatedCourseErrorses = [...addCourseErrors.courses];\r\n\r\n        for (var key in addCourseDetails) {\r\n            if (addCourseDetails.hasOwnProperty(key)) {\r\n                if (!Array.isArray(addCourseDetails[key])) {\r\n                    updatedErrors = validateAddCourseInput(key, addCourseDetails[key], updatedErrors);\r\n                } else {\r\n                    for (var i = 0; i < addCourseDetails.courses.length; i++) {\r\n                        for (var key in addCourseDetails.courses[i]) {\r\n                            if (addCourseDetails.courses[i].hasOwnProperty(key)) {\r\n                                let updatedCourseErrors = { ...updatedCourseErrorses[i] };\r\n                                updatedCourseErrors = validateAddCourseInput(key, addCourseDetails.courses[i][key], updatedCourseErrors);\r\n                                updatedCourseErrorses[i] = updatedCourseErrors;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setAddCourseErrors({ ...updatedErrors, courses: updatedCourseErrorses });\r\n        const fastaddCourseErrors = { ...updatedErrors, courses: updatedCourseErrorses };\r\n\r\n        let ready = true;\r\n        for (var key in fastaddCourseErrors) {\r\n            if (fastaddCourseErrors.hasOwnProperty(key)) {\r\n                if (!Array.isArray(fastaddCourseErrors[key])) {\r\n                    if (fastaddCourseErrors[key] != '')\r\n                        ready = false;\r\n                } else {\r\n                    if (fastaddCourseErrors[key].length == 0)\r\n                        ready = false;\r\n                    for (var i = 0; i < fastaddCourseErrors.courses.length; i++)\r\n                        for (var key in fastaddCourseErrors.courses[i])\r\n                            if (fastaddCourseErrors.courses[i].hasOwnProperty(key))\r\n                                if (fastaddCourseErrors.courses[i][key] != '')\r\n                                    ready = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log('Ready:', ready);\r\n        console.log(addCourseDetails);\r\n\r\n        if (ready) {\r\n            writeToBlockChain()\r\n                .then(r => {\r\n                    console.log(r);\r\n                    setToast({ message: 'TxN SUCCESS: Course(s) have been added', severity: 'success', open: true });\r\n                    setTimeout(() => props.closeModal(), 3500);\r\n                }\r\n                ).catch(e => {\r\n                    console.log(e);\r\n                    if (e.code == 'INVALID_ARGUMENT')\r\n                        setToast({ message: 'ERROR: INVALID_ARGUMENT', severity: 'error', open: true });\r\n                    else if (e.code == '4001')\r\n                        setToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n                    else\r\n                        setToast({ message: 'TxN ERROR: Something went wrong', severity: 'error', open: true });\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleToastClose = (event, reason) => {\r\n        if (reason === 'clickaway')\r\n            return;\r\n        setToast({ ...toast, open: false });\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='cards'>\r\n            <Snackbar autoHideDuration={4500} open={toast.open}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }} onClose={handleToastClose}>\r\n                <Alert severity={toast.severity} sx={{ width: '100%' }}>\r\n                    {toast.message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <AddCourseFunctionBox\r\n                data={addCourseDetails}\r\n                errors={addCourseErrors}\r\n                handleInputChange={handleAddCourseInputChange}\r\n                handleCourseChange={handleCourseChange}\r\n                handleSubmit={handlerAddCourseSubmit}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddCourses;"]},"metadata":{},"sourceType":"module"}