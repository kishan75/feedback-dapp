{"ast":null,"code":"import _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { convertFromNext, convertToNext } from '../../../check/arbitrary/definition/Converters.js';\nimport { webSegment } from '../../webSegment.js';\nimport { array } from '../../array.js';\nimport { segmentsToPathMapper, segmentsToPathUnmapper } from '../mappers/SegmentsToPath.js';\n\nfunction sqrtSize(size) {\n  switch (size) {\n    case 'xsmall':\n      return ['xsmall', 'xsmall'];\n\n    case 'small':\n      return ['small', 'xsmall'];\n\n    case 'medium':\n      return ['small', 'small'];\n\n    case 'large':\n      return ['medium', 'small'];\n\n    case 'xlarge':\n      return ['medium', 'medium'];\n  }\n}\n\nexport function buildUriPathArbitrary(resolvedSize) {\n  const _sqrtSize = sqrtSize(resolvedSize),\n        _sqrtSize2 = _slicedToArray(_sqrtSize, 2),\n        segmentSize = _sqrtSize2[0],\n        numSegmentSize = _sqrtSize2[1];\n\n  return convertFromNext(convertToNext(array(webSegment({\n    size: segmentSize\n  }), {\n    size: numSegmentSize\n  })).map(segmentsToPathMapper, segmentsToPathUnmapper));\n}","map":null,"metadata":{},"sourceType":"module"}