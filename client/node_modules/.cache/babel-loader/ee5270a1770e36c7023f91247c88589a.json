{"ast":null,"code":"import { cloneMethod } from '../../symbols.js';\nexport class CommandsIterable {\n  constructor(commands, metadataForReplay) {\n    this.commands = commands;\n    this.metadataForReplay = metadataForReplay;\n  }\n\n  [Symbol.iterator]() {\n    return this.commands[Symbol.iterator]();\n  }\n\n  [cloneMethod]() {\n    return new CommandsIterable(this.commands.map(c => c.clone()), this.metadataForReplay);\n  }\n\n  toString() {\n    const serializedCommands = this.commands.filter(c => c.hasRan).map(c => c.toString()).join(',');\n    const metadata = this.metadataForReplay();\n    return metadata.length !== 0 ? \"\".concat(serializedCommands, \" /*\").concat(metadata, \"*/\") : serializedCommands;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}