{"ast":null,"code":"import _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Courses.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardContent, CardHeader, Link, Typography, Grid, Box, Divider } from \"@mui/material\";\nimport { BootstrapTooltip } from \"./utils/common\";\nimport { useParams } from \"react-router-dom\";\nexport const CourseCard = props => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Link, {\n    href: \"/\".concat(props.email, \"/\").concat(props.year, \"/\").concat(props.semester, \"/\").concat(props.code),\n    underline: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(BootstrapTooltip, {\n    title: \"Exapnd this course\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Card, {\n    onClick: () => {\n      window.location.href = \"\".concat(props.email, \"/\").concat(props.year, \"/\").concat(props.semester, \"/\").concat(props.code);\n    },\n    style: {\n      // backgroundColor: \"white\",\n      boxShadow: \"none\",\n      border: \"4px solid\",\n      borderColor: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Arial\",\n      backgroundColor: \"#282c34\",\n      boxShadow: \"none\"\n    },\n    titleTypographyProps: {\n      variant: \"h4\"\n    },\n    title: props.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(CardContent, {\n    style: {\n      color: \"white\",\n      fontFamily: \"Arial\",\n      backgroundColor: \"#282c34\",\n      boxShadow: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"code:\".concat(props.code, \", sem:\").concat(props.semester == 0 ? \"even\" : \"odd\", \", students:\").concat(props.studentCount), React.createElement(Divider, {\n    orientation: \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))))));\n};\nexport const Courses = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        courses = _useState2[0],\n        setCourses = _useState2[1];\n\n  const _useParams = useParams(),\n        email = _useParams.email,\n        year = _useParams.year;\n\n  useEffect(() => {\n    if (email && year && props.courses) {\n      let courses = Object.values(props.courses[email][year]);\n\n      if (courses.length) {\n        courses = courses.length == 2 ? [...Object.values(courses[0]), ...Object.values(courses[1])] : [...Object.values(courses[0])];\n        setCourses(courses);\n      } else setCourses([]);\n    }\n  }, [email, year, props.courses]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, courses == null ? props.showLoader(true) : React.createElement(Box, {\n    m: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, courses.map(course => {\n    return React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      key: course.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(CourseCard, Object.assign({\n      email: email\n    }, course, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }))));\n};","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Courses.js"],"names":["React","useEffect","useState","Card","CardContent","CardHeader","Link","Typography","Grid","Box","Divider","BootstrapTooltip","useParams","CourseCard","props","email","year","semester","code","window","location","href","boxShadow","border","borderColor","color","fontFamily","backgroundColor","variant","name","studentCount","Courses","courses","setCourses","Object","values","length","showLoader","map","course"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Link,\r\n  Typography,\r\n  Grid,\r\n  Box,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { BootstrapTooltip } from \"./utils/common\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport const CourseCard = (props) => {\r\n  return (\r\n    <div>\r\n      <Link\r\n        href={`/${props.email}/${props.year}/${props.semester}/${props.code}`}\r\n        underline=\"none\"\r\n      >\r\n        <BootstrapTooltip title=\"Exapnd this course\">\r\n          <Card\r\n            onClick={() => {\r\n              window.location.href = `${props.email}/${props.year}/${props.semester}/${props.code}`;\r\n            }}\r\n            style={{\r\n              // backgroundColor: \"white\",\r\n              boxShadow: \"none\",\r\n              border: \"4px solid\",\r\n              borderColor: \"red\",\r\n            }}\r\n          >\r\n            <CardHeader\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Arial\",\r\n                backgroundColor: \"#282c34\",\r\n                boxShadow: \"none\",\r\n              }}\r\n              titleTypographyProps={{ variant: \"h4\" }}\r\n              title={props.name}\r\n            />\r\n            <CardContent\r\n              style={{\r\n                color: \"white\",\r\n                fontFamily: \"Arial\",\r\n                backgroundColor: \"#282c34\",\r\n                boxShadow: \"none\",\r\n              }}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                {`code:${props.code}, sem:${\r\n                  props.semester == 0 ? \"even\" : \"odd\"\r\n                }, students:${props.studentCount}`}\r\n                <Divider orientation=\"vertical\"></Divider>\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </BootstrapTooltip>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Courses = (props) => {\r\n  const [courses, setCourses] = useState(null);\r\n  const { email, year } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (email && year && props.courses) {\r\n      let courses = Object.values(props.courses[email][year]);\r\n      if (courses.length) {\r\n        courses =\r\n          courses.length == 2\r\n            ? [...Object.values(courses[0]), ...Object.values(courses[1])]\r\n            : [...Object.values(courses[0])];\r\n        setCourses(courses);\r\n      } else setCourses([]);\r\n    }\r\n  }, [email, year, props.courses]);\r\n  return (\r\n    <div>\r\n      {courses == null ? (\r\n        props.showLoader(true)\r\n      ) : (\r\n        <Box m={4}>\r\n          <Grid container spacing={4}>\r\n            {courses.map((course) => {\r\n              return (\r\n                <Grid item xs={3} key={course.code}>\r\n                  <CourseCard email={email} {...course}></CourseCard>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}