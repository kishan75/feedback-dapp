{"ast":null,"code":"/**\n * highlight.js Solidity syntax highlighting definition\n *\n * @see https://github.com/isagalaev/highlight.js\n *\n * @package: highlightjs-solidity\n * @author:  Sam Pospischil <sam@changegiving.com>\n * @since:   2016-07-01\n */\nconst _require = require(\"../common.js\"),\n      SOL_ASSEMBLY_KEYWORDS = _require.SOL_ASSEMBLY_KEYWORDS,\n      baseAssembly = _require.baseAssembly,\n      isNegativeLookbehindAvailable = _require.isNegativeLookbehindAvailable;\n\nfunction hljsDefineYul(hljs) {\n  var YUL_KEYWORDS = {\n    keyword: SOL_ASSEMBLY_KEYWORDS.keyword + ' ' + 'object code data',\n    built_in: SOL_ASSEMBLY_KEYWORDS.built_in + ' ' + 'datasize dataoffset datacopy ' + 'setimmutable loadimmutable ' + 'linkersymbol memoryguard',\n    literal: SOL_ASSEMBLY_KEYWORDS.literal\n  };\n  var YUL_VERBATIM_RE = /\\bverbatim_[1-9]?[0-9]i_[1-9]?[0-9]o\\b(?!\\$)/;\n\n  if (isNegativeLookbehindAvailable()) {\n    //replace just first \\b\n    YUL_VERBATIM_RE = YUL_VERBATIM_RE.source.replace(/\\\\b/, '(?<!\\\\$)\\\\b');\n  } //highlights the \"verbatim\" builtin. making a separate mode for this due to\n  //its variability.\n\n\n  var YUL_VERBATIM_MODE = {\n    className: \"built_in\",\n    begin: YUL_VERBATIM_RE\n  };\n  var BASE_ASSEMBLY_ENVIRONMENT = baseAssembly(hljs);\n  return hljs.inherit(BASE_ASSEMBLY_ENVIRONMENT, {\n    keywords: YUL_KEYWORDS,\n    contains: BASE_ASSEMBLY_ENVIRONMENT.contains.concat([YUL_VERBATIM_MODE])\n  });\n}\n\nmodule.exports = hljsDefineYul;","map":null,"metadata":{},"sourceType":"script"}