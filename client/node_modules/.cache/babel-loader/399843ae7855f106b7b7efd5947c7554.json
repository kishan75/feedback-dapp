{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"currentColumn\", \"open\", \"id\", \"labelledby\", \"className\", \"children\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { isHideMenuKey, isTabKey } from '../../../utils/keyboardUtils';\nimport { gridClasses } from '../../../constants/gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenuContainer =\n/*#__PURE__*/\nReact.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const hideMenu = props.hideMenu,\n        open = props.open,\n        id = props.id,\n        labelledby = props.labelledby,\n        className = props.className,\n        children = props.children,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleListKeyDown = React.useCallback(event => {\n    if (isTabKey(event.key)) {\n      event.preventDefault();\n    }\n\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return (\n    /*#__PURE__*/\n    _jsx(MenuList, _extends({\n      id: id,\n      ref: ref,\n      className: clsx(gridClasses.menuList, className),\n      \"aria-labelledby\": labelledby,\n      onKeyDown: handleListKeyDown,\n      autoFocus: open\n    }, other, {\n      children: children\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","map":null,"metadata":{},"sourceType":"module"}