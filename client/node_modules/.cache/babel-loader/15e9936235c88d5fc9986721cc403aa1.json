{"ast":null,"code":"import { Arbitrary } from './Arbitrary.js';\nimport { Shrinkable } from './Shrinkable.js';\n\nfunction removeContextFromContextualValue(contextualValue) {\n  return contextualValue[0];\n}\n\nclass ArbitraryWithContextualShrink extends Arbitrary {\n  contextualShrinkableFor(value, context) {\n    return new Shrinkable(value, () => this.contextualShrink(value, context).map(contextualValue => this.contextualShrinkableFor(contextualValue[0], contextualValue[1])));\n  }\n\n  shrink(value, shrunkOnce) {\n    const context = shrunkOnce === true ? this.shrunkOnceContext() : undefined;\n    return this.contextualShrink(value, context).map(removeContextFromContextualValue);\n  }\n\n  shrinkableFor(value, shrunkOnce) {\n    return new Shrinkable(value, () => {\n      return this.shrink(value, shrunkOnce).map(value => this.shrinkableFor(value, true));\n    });\n  }\n\n}\n\nexport { ArbitraryWithContextualShrink };","map":null,"metadata":{},"sourceType":"module"}