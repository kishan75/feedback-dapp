{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.verifyPseudoArgs = exports.pseudos = void 0; // While filters are precompiled, pseudos get called when they are needed\n\nexports.pseudos = {\n  empty: function (elem, _a) {\n    var adapter = _a.adapter;\n    return !adapter.getChildren(elem).some(function (elem) {\n      // FIXME: `getText` call is potentially expensive.\n      return adapter.isTag(elem) || adapter.getText(elem) !== \"\";\n    });\n  },\n  \"first-child\": function (elem, _a) {\n    var adapter = _a.adapter,\n        equals = _a.equals;\n    var firstChild = adapter.getSiblings(elem).find(function (elem) {\n      return adapter.isTag(elem);\n    });\n    return firstChild != null && equals(elem, firstChild);\n  },\n  \"last-child\": function (elem, _a) {\n    var adapter = _a.adapter,\n        equals = _a.equals;\n    var siblings = adapter.getSiblings(elem);\n\n    for (var i = siblings.length - 1; i >= 0; i--) {\n      if (equals(elem, siblings[i])) return true;\n      if (adapter.isTag(siblings[i])) break;\n    }\n\n    return false;\n  },\n  \"first-of-type\": function (elem, _a) {\n    var adapter = _a.adapter,\n        equals = _a.equals;\n    var siblings = adapter.getSiblings(elem);\n    var elemName = adapter.getName(elem);\n\n    for (var i = 0; i < siblings.length; i++) {\n      var currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n\n    return false;\n  },\n  \"last-of-type\": function (elem, _a) {\n    var adapter = _a.adapter,\n        equals = _a.equals;\n    var siblings = adapter.getSiblings(elem);\n    var elemName = adapter.getName(elem);\n\n    for (var i = siblings.length - 1; i >= 0; i--) {\n      var currentSibling = siblings[i];\n      if (equals(elem, currentSibling)) return true;\n\n      if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n        break;\n      }\n    }\n\n    return false;\n  },\n  \"only-of-type\": function (elem, _a) {\n    var adapter = _a.adapter,\n        equals = _a.equals;\n    var elemName = adapter.getName(elem);\n    return adapter.getSiblings(elem).every(function (sibling) {\n      return equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName;\n    });\n  },\n  \"only-child\": function (elem, _a) {\n    var adapter = _a.adapter,\n        equals = _a.equals;\n    return adapter.getSiblings(elem).every(function (sibling) {\n      return equals(elem, sibling) || !adapter.isTag(sibling);\n    });\n  }\n};\n\nfunction verifyPseudoArgs(func, name, subselect) {\n  if (subselect === null) {\n    if (func.length > 2) {\n      throw new Error(\"pseudo-selector :\".concat(name, \" requires an argument\"));\n    }\n  } else if (func.length === 2) {\n    throw new Error(\"pseudo-selector :\".concat(name, \" doesn't have any arguments\"));\n  }\n}\n\nexports.verifyPseudoArgs = verifyPseudoArgs;","map":null,"metadata":{},"sourceType":"script"}