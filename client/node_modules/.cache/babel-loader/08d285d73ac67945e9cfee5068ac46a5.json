{"ast":null,"code":"import { GRID_CHECKBOX_SELECTION_COL_DEF } from '../../../../colDef';\n\nconst serialiseCellValue = (value, delimiterCharacter) => {\n  if (typeof value === 'string') {\n    const formattedValue = value.replace(/\"/g, '\"\"'); // Make sure value containing delimiter or line break won't be split into multiple rows\n\n    if ([delimiterCharacter, '\\n', '\\r'].some(delimiter => formattedValue.includes(delimiter))) {\n      return \"\\\"\".concat(formattedValue, \"\\\"\");\n    }\n\n    return formattedValue;\n  }\n\n  return value;\n};\n\nlet warnedOnce = false;\n\nconst serialiseRow = (id, columns, getCellParams, delimiterCharacter) => columns.map(column => {\n  const cellParams = getCellParams(id, column.field);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!warnedOnce && String(cellParams.formattedValue) === '[object Object]') {\n      console.warn(['MUI: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.'].join('\\n'));\n      warnedOnce = true;\n    }\n  }\n\n  return serialiseCellValue(cellParams.formattedValue, delimiterCharacter);\n});\n\nexport function buildCSV(options) {\n  const columns = options.columns,\n        rowIds = options.rowIds,\n        getCellParams = options.getCellParams,\n        delimiterCharacter = options.delimiterCharacter,\n        includeHeaders = options.includeHeaders;\n  const CSVBody = rowIds.reduce((acc, id) => \"\".concat(acc).concat(serialiseRow(id, columns, getCellParams, delimiterCharacter).join(delimiterCharacter), \"\\r\\n\"), '').trim();\n\n  if (!includeHeaders) {\n    return CSVBody;\n  }\n\n  const CSVHead = \"\".concat(columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field).map(column => serialiseCellValue(column.headerName || column.field, delimiterCharacter)).join(delimiterCharacter), \"\\r\\n\");\n  return \"\".concat(CSVHead).concat(CSVBody).trim();\n}","map":null,"metadata":{},"sourceType":"module"}