{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { getBalance, loadContracts, loadCourses, loadEmails, loadFeedbacks, loadProfsByEmail, loadSkills, loadSkillsCount, setupMetamask } from \"./scripts/loader\"; // Pages\n\nimport HomePage from \"./pages/HomePage/homePage\";\nimport FeedbackSubmit from \"./components/FeedbackSubmit/feedbackSubmit\"; // Utils\n\nimport Toast from \"./components/utils/toast\"; //CSS\n\nimport \"./App.css\";\nimport Loader from \"./components/utils/Loader\";\nimport { Courses } from \"./components/Courses/courses\";\nimport { Feedbacks } from \"./components/Feedbacks/feedbacks\";\n\nrequire(\"dotenv\").config();\n\nconst App = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        profEmails = _useState2[0],\n        setProfEmails = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        addressToEmail = _useState4[0],\n        setAddressToEmail = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        profsDetails = _useState6[0],\n        setProfsDetails = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skillCount = _useState8[0],\n        setSkillCount = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        courses = _useState10[0],\n        setCourses = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        account = _useState12[0],\n        setAccount = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        balance = _useState14[0],\n        setBalance = _useState14[1];\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        showLoader = _useState16[0],\n        setLoader = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        toast = _useState18[0],\n        setToast = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        contracts = _useState20[0],\n        setContracts = _useState20[1];\n\n  const _useState21 = useState(null),\n        _useState22 = _slicedToArray(_useState21, 2),\n        skills = _useState22[0],\n        setSkills = _useState22[1];\n\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        isProf = _useState24[0],\n        setIsProf = _useState24[1]; // React useEffects\n\n\n  useEffect(() => {\n    (async () => {\n      const account = await setupMetamask();\n      setAccount(account);\n      const contracts = await loadContracts();\n      setContracts(contracts);\n      const skills = await loadSkills(contracts);\n      setSkills(skills);\n      const toast = {\n        message: \"\",\n        type: \"\",\n        show: false\n      };\n      setToast(toast);\n    })();\n  }, []);\n  useEffect(() => {\n    if (contracts) {\n      (async () => {\n        const balance = await getBalance(contracts, account);\n        setBalance(balance.slice(0, -18));\n        const profEmails = await loadEmails(contracts);\n        setProfEmails(profEmails);\n\n        const _ref = await loadProfsByEmail(contracts, profEmails),\n              profsDetails = _ref.profsDetails,\n              addressToEmail = _ref.addressToEmail;\n\n        setProfsDetails(profsDetails);\n        setAddressToEmail(addressToEmail);\n        setIsProf(addressToEmail[account] !== undefined);\n        const courses = await loadCourses(contracts, profEmails);\n        setCourses(courses);\n\n        const _ref2 = await loadFeedbacks(contracts, profEmails, courses),\n              feedbacks = _ref2.feedbacks,\n              updatedCourses = _ref2.updatedCourses;\n\n        setCourses(updatedCourses);\n\n        const _ref3 = await loadSkillsCount(contracts, profEmails, profsDetails),\n              skillsUpvote = _ref3.skillsUpvote,\n              updatedProfsDetail = _ref3.updatedProfsDetail;\n\n        setSkillCount(skillsUpvote);\n        setProfsDetails(updatedProfsDetail);\n        contracts.feedbackData.events.courseUpdated((err, data) => addCourse(err, data));\n        contracts.feedbackData.events.feedbackSubmitted((err, data) => feedbackSubmitted(err, data));\n        contracts.feedbackData.events.ticketGenerated((err, data) => ticketGenerated(err, data));\n        contracts.feedbackData.events.skillsUpvoted((err, data) => skillsUpvoted(err, data));\n        contracts.feedbackData.events.ratingUpdated((err, data) => ratingUpdated(err, data));\n        contracts.feedbackData.events.balanceUpdated((err, data) => balanceUpdated(err, data));\n        setLoader(false);\n      })();\n    }\n  }, [contracts]);\n  useEffect(() => {\n    if (skills && contracts) {\n      contracts.feedbackData.events.professorCreated((err, data) => professorCreated(err, data));\n    }\n  }, [skills, contracts]);\n\n  const balanceUpdated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    if (account == data[\"returnValues\"].account) setBalance(data[\"returnValues\"].balance.slice(0, -18));\n  };\n\n  const ratingUpdated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues = data[\"returnValues\"],\n          email = _data$returnValues.email,\n          rating = _data$returnValues.rating;\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        rating\n      })\n    }));\n  };\n\n  const skillsUpvoted = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues2 = data[\"returnValues\"],\n          email = _data$returnValues2.email,\n          skills = _data$returnValues2.skills;\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        skillsUpvote: skills\n      })\n    }));\n  };\n\n  const professorCreated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const professor = data[\"returnValues\"].professor;\n    let name = professor.name,\n        email = professor.email,\n        profilePicture = professor.profilePicture,\n        addressId = professor.addressId,\n        rating = professor.rating;\n    addressId = addressId.toLowerCase();\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: {\n        name,\n        email,\n        profilePicture,\n        addressId,\n        rating,\n        skillsUpvote: skills.map(skill => ({\n          [skill]: 0\n        }))\n      }\n    }));\n    setProfEmails(prev => [...prev, email]);\n    setAddressToEmail(prev => _objectSpread({}, prev, {\n      [addressId]: email\n    }));\n    setIsProf(addressId == account);\n  };\n\n  const ticketGenerated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues3 = data[\"returnValues\"],\n          email = _data$returnValues3.email,\n          year = _data$returnValues3.year,\n          sem = _data$returnValues3.sem,\n          code = _data$returnValues3.code;\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: _objectSpread({}, prev[email][year], {\n          [sem]: _objectSpread({}, prev[email][year][sem], {\n            [code]: _objectSpread({}, prev[email][year][sem][code], {\n              ticketGenerated: true\n            })\n          })\n        })\n      })\n    }));\n  };\n\n  const feedbackSubmitted = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues4 = data[\"returnValues\"],\n          email = _data$returnValues4.email,\n          feedback = _data$returnValues4.feedback;\n    console.log(feedback);\n    const code = feedback.code,\n          semester = feedback.semester,\n          year = feedback.year,\n          content = feedback.content,\n          skills = feedback.skills;\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: _objectSpread({}, prev[email][year], {\n          [semester]: _objectSpread({}, prev[email][year][semester], {\n            [code]: _objectSpread({}, prev[email][year][semester][code], {\n              feedbacks: [...prev[email][year][semester][code].feedbacks, {\n                code,\n                semester,\n                year,\n                content,\n                skills\n              }]\n            })\n          })\n        })\n      })\n    }));\n  };\n\n  const addCourse = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues5 = data[\"returnValues\"],\n          email = _data$returnValues5.email,\n          year = _data$returnValues5.year,\n          course = _data$returnValues5.course;\n    const name = course.name,\n          code = course.code,\n          semester = course.semester,\n          studentCount = course.studentCount,\n          ticketGenerated = course.ticketGenerated;\n    setCourses(prev => {\n      return prev[email] ? _objectSpread({}, prev) : _objectSpread({}, prev, {\n        [email]: {}\n      });\n    });\n    setCourses(prev => {\n      return prev[email][year] ? _objectSpread({}, prev) : _objectSpread({}, prev, {\n        [email]: _objectSpread({}, prev[email], {\n          [year]: {}\n        })\n      });\n    });\n    setCourses(prev => {\n      return prev[email][year][semester] ? _objectSpread({}, prev) : _objectSpread({}, prev, {\n        [email]: _objectSpread({}, prev[email], {\n          [year]: _objectSpread({}, prev[email][year], {\n            [semester]: {}\n          })\n        })\n      });\n    });\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: _objectSpread({}, prev[email][year], {\n          [semester]: _objectSpread({}, prev[email][year][semester], {\n            [code]: {\n              name,\n              email,\n              code,\n              semester,\n              year,\n              studentCount,\n              ticketGenerated,\n              feedbacks: []\n            }\n          })\n        })\n      })\n    }));\n  }; // Very toasty\n\n\n  const handleToastClose = (_, reason) => {\n    if (reason === \"clickaway\") return;\n    setToast(_objectSpread({}, toast, {\n      show: false\n    }));\n  };\n\n  const handleToastChange = (message, severity, open) => {\n    console.log(message, severity, open);\n    setToast({\n      message: message,\n      type: severity,\n      show: open\n    });\n  };\n\n  const handleLoaderChange = show => {\n    setLoader(show);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    show: showLoader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }), toast ? React.createElement(Toast, {\n    onClose: handleToastClose,\n    message: toast.message,\n    show: toast.show,\n    type: toast.type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }) : null, React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    element: React.createElement(HomePage, {\n      contracts: contracts,\n      profsDetails: profsDetails,\n      profsEmails: profEmails,\n      account: account,\n      emailMap: addressToEmail,\n      courses: courses,\n      isProf: isProf,\n      balance: balance,\n      onLoading: handleLoaderChange,\n      onToastChange: handleToastChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \":email/:year\",\n    element: React.createElement(Courses, {\n      showLoader: () => handleLoaderChange,\n      contracts: contracts,\n      profsDetails: profsDetails,\n      profsEmails: profEmails,\n      account: account,\n      emailMap: addressToEmail,\n      courses: courses,\n      isProf: isProf,\n      balance: balance,\n      onLoading: handleLoaderChange,\n      onToastChange: handleToastChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \":email/:year/:sem/:courseCode\",\n    element: React.createElement(Feedbacks, {\n      contracts: contracts,\n      account: account,\n      skills: skills,\n      profs: profsDetails,\n      showLoader: () => handleLoaderChange,\n      courses: courses,\n      toast: handleToastChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/App.js"],"names":["React","useState","useEffect","Routes","Route","getBalance","loadContracts","loadCourses","loadEmails","loadFeedbacks","loadProfsByEmail","loadSkills","loadSkillsCount","setupMetamask","HomePage","FeedbackSubmit","Toast","Loader","Courses","Feedbacks","require","config","App","profEmails","setProfEmails","addressToEmail","setAddressToEmail","profsDetails","setProfsDetails","skillCount","setSkillCount","courses","setCourses","account","setAccount","balance","setBalance","showLoader","setLoader","toast","setToast","contracts","setContracts","skills","setSkills","isProf","setIsProf","message","type","show","slice","undefined","feedbacks","updatedCourses","skillsUpvote","updatedProfsDetail","feedbackData","events","courseUpdated","err","data","addCourse","feedbackSubmitted","ticketGenerated","skillsUpvoted","ratingUpdated","balanceUpdated","professorCreated","alert","email","rating","prev","professor","name","profilePicture","addressId","toLowerCase","map","skill","year","sem","code","feedback","console","log","semester","content","course","studentCount","handleToastClose","_","reason","handleToastChange","severity","open","handleLoaderChange"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport {\r\n  getBalance,\r\n  loadContracts,\r\n  loadCourses,\r\n  loadEmails,\r\n  loadFeedbacks,\r\n  loadProfsByEmail,\r\n  loadSkills,\r\n  loadSkillsCount,\r\n  setupMetamask,\r\n} from \"./scripts/loader\";\r\n\r\n// Pages\r\nimport HomePage from \"./pages/HomePage/homePage\";\r\nimport FeedbackSubmit from \"./components/FeedbackSubmit/feedbackSubmit\";\r\n\r\n// Utils\r\nimport Toast from \"./components/utils/toast\";\r\n\r\n//CSS\r\nimport \"./App.css\";\r\nimport Loader from \"./components/utils/Loader\";\r\nimport { Courses } from \"./components/Courses/courses\";\r\nimport { Feedbacks } from \"./components/Feedbacks/feedbacks\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst App = () => {\r\n  const [profEmails, setProfEmails] = useState(null);\r\n  const [addressToEmail, setAddressToEmail] = useState(null);\r\n\r\n  const [profsDetails, setProfsDetails] = useState(null);\r\n  const [skillCount, setSkillCount] = useState(null);\r\n  const [courses, setCourses] = useState(null);\r\n\r\n  const [account, setAccount] = useState(null);\r\n  const [balance, setBalance] = useState(null);\r\n  const [showLoader, setLoader] = useState(true);\r\n  const [toast, setToast] = useState(null);\r\n  const [contracts, setContracts] = useState(null);\r\n\r\n  const [skills, setSkills] = useState(null);\r\n  const [isProf, setIsProf] = useState(false);\r\n\r\n  // React useEffects\r\n  useEffect(() => {\r\n    (async () => {\r\n      const account = await setupMetamask();\r\n      setAccount(account);\r\n\r\n      const contracts = await loadContracts();\r\n      setContracts(contracts);\r\n\r\n      const skills = await loadSkills(contracts);\r\n      setSkills(skills);\r\n\r\n      const toast = { message: \"\", type: \"\", show: false };\r\n      setToast(toast);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contracts) {\r\n      (async () => {\r\n        const balance = await getBalance(contracts, account);\r\n        setBalance(balance.slice(0, -18));\r\n\r\n        const profEmails = await loadEmails(contracts);\r\n        setProfEmails(profEmails);\r\n\r\n        const { profsDetails, addressToEmail } = await loadProfsByEmail(\r\n          contracts,\r\n          profEmails\r\n        );\r\n        setProfsDetails(profsDetails);\r\n        setAddressToEmail(addressToEmail);\r\n        setIsProf(addressToEmail[account] !== undefined);\r\n\r\n        const courses = await loadCourses(contracts, profEmails);\r\n        setCourses(courses);\r\n\r\n        const { feedbacks, updatedCourses } = await loadFeedbacks(\r\n          contracts,\r\n          profEmails,\r\n          courses\r\n        );\r\n        setCourses(updatedCourses);\r\n\r\n        const { skillsUpvote, updatedProfsDetail } = await loadSkillsCount(\r\n          contracts,\r\n          profEmails,\r\n          profsDetails\r\n        );\r\n        setSkillCount(skillsUpvote);\r\n        setProfsDetails(updatedProfsDetail);\r\n\r\n        contracts.feedbackData.events.courseUpdated((err, data) =>\r\n          addCourse(err, data)\r\n        );\r\n        contracts.feedbackData.events.feedbackSubmitted((err, data) =>\r\n          feedbackSubmitted(err, data)\r\n        );\r\n        contracts.feedbackData.events.ticketGenerated((err, data) =>\r\n          ticketGenerated(err, data)\r\n        );\r\n        contracts.feedbackData.events.skillsUpvoted((err, data) =>\r\n          skillsUpvoted(err, data)\r\n        );\r\n        contracts.feedbackData.events.ratingUpdated((err, data) =>\r\n          ratingUpdated(err, data)\r\n        );\r\n        contracts.feedbackData.events.balanceUpdated((err, data) =>\r\n          balanceUpdated(err, data)\r\n        );\r\n\r\n        setLoader(false);\r\n      })();\r\n    }\r\n  }, [contracts]);\r\n\r\n  useEffect(() => {\r\n    if (skills && contracts) {\r\n      contracts.feedbackData.events.professorCreated((err, data) =>\r\n        professorCreated(err, data)\r\n      );\r\n    }\r\n  }, [skills, contracts]);\r\n\r\n  const balanceUpdated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n\r\n    if (account == data[\"returnValues\"].account)\r\n      setBalance(data[\"returnValues\"].balance.slice(0, -18));\r\n  };\r\n\r\n  const ratingUpdated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, rating } = data[\"returnValues\"];\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: { ...prev[email], rating },\r\n    }));\r\n  };\r\n\r\n  const skillsUpvoted = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, skills } = data[\"returnValues\"];\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: { ...prev[email], skillsUpvote: skills },\r\n    }));\r\n  };\r\n\r\n  const professorCreated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { professor } = data[\"returnValues\"];\r\n    let { name, email, profilePicture, addressId, rating } = professor;\r\n    addressId = addressId.toLowerCase();\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        name,\r\n        email,\r\n        profilePicture,\r\n        addressId,\r\n        rating,\r\n        skillsUpvote: skills.map((skill) => ({\r\n          [skill]: 0,\r\n        })),\r\n      },\r\n    }));\r\n\r\n    setProfEmails((prev) => [...prev, email]);\r\n    setAddressToEmail((prev) => ({\r\n      ...prev,\r\n      [addressId]: email,\r\n    }));\r\n\r\n    setIsProf(addressId == account);\r\n  };\r\n\r\n  const ticketGenerated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, year, sem, code } = data[\"returnValues\"];\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        ...prev[email],\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [sem]: {\r\n            ...prev[email][year][sem],\r\n            [code]: {\r\n              ...prev[email][year][sem][code],\r\n              ticketGenerated: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const feedbackSubmitted = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, feedback } = data[\"returnValues\"];\r\n    console.log(feedback);\r\n    const { code, semester, year, content, skills } = feedback;\r\n\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        ...prev[email],\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [semester]: {\r\n            ...prev[email][year][semester],\r\n            [code]: {\r\n              ...prev[email][year][semester][code],\r\n              feedbacks: [\r\n                ...prev[email][year][semester][code].feedbacks,\r\n                {\r\n                  code,\r\n                  semester,\r\n                  year,\r\n                  content,\r\n                  skills,\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const addCourse = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, year, course } = data[\"returnValues\"];\r\n    const { name, code, semester, studentCount, ticketGenerated } = course;\r\n\r\n    setCourses((prev) => {\r\n      return prev[email] ? { ...prev } : { ...prev, [email]: {} };\r\n    });\r\n\r\n    setCourses((prev) => {\r\n      return prev[email][year]\r\n        ? { ...prev }\r\n        : {\r\n          ...prev,\r\n          [email]: {\r\n            ...prev[email],\r\n            [year]: {},\r\n          },\r\n        };\r\n    });\r\n\r\n    setCourses((prev) => {\r\n      return prev[email][year][semester]\r\n        ? { ...prev }\r\n        : {\r\n          ...prev,\r\n          [email]: {\r\n            ...prev[email],\r\n            [year]: {\r\n              ...prev[email][year],\r\n              [semester]: {},\r\n            },\r\n          },\r\n        };\r\n    });\r\n\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        ...prev[email],\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [semester]: {\r\n            ...prev[email][year][semester],\r\n            [code]: {\r\n              name,\r\n              email,\r\n              code,\r\n              semester,\r\n              year,\r\n              studentCount,\r\n              ticketGenerated,\r\n              feedbacks: [],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  // Very toasty\r\n  const handleToastClose = (_, reason) => {\r\n    if (reason === \"clickaway\") return;\r\n    setToast({ ...toast, show: false });\r\n  };\r\n\r\n  const handleToastChange = (message, severity, open) => {\r\n    console.log(message, severity, open);\r\n    setToast({ message: message, type: severity, show: open });\r\n  };\r\n\r\n  const handleLoaderChange = (show) => {\r\n    setLoader(show);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Loader show={showLoader} />\r\n      {toast ? (\r\n        <Toast\r\n          onClose={handleToastClose}\r\n          message={toast.message}\r\n          show={toast.show}\r\n          type={toast.type}\r\n        />\r\n      ) : null}\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={\r\n            <HomePage\r\n              contracts={contracts}\r\n              profsDetails={profsDetails}\r\n              profsEmails={profEmails}\r\n              account={account}\r\n              emailMap={addressToEmail}\r\n              courses={courses}\r\n              isProf={isProf}\r\n              balance={balance}\r\n              onLoading={handleLoaderChange}\r\n              onToastChange={handleToastChange}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\":email/:year\"\r\n          element={\r\n            <Courses\r\n              showLoader={() => handleLoaderChange}\r\n              contracts={contracts}\r\n              profsDetails={profsDetails}\r\n              profsEmails={profEmails}\r\n              account={account}\r\n              emailMap={addressToEmail}\r\n              courses={courses}\r\n              isProf={isProf}\r\n              balance={balance}\r\n              onLoading={handleLoaderChange}\r\n              onToastChange={handleToastChange}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\":email/:year/:sem/:courseCode\"\r\n          element={\r\n            <Feedbacks\r\n              contracts={contracts}\r\n              account={account}\r\n              skills={skills}\r\n              profs={profsDetails}\r\n              showLoader={() => handleLoaderChange}\r\n              courses={courses}\r\n              toast={handleToastChange}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}