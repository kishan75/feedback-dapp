{"ast":null,"code":"import { genericTuple } from '../../arbitrary/genericTuple.js';\nimport { convertFromNextPropertyWithHooks } from './ConvertersProperty.js';\nimport { Property } from './Property.generic.js';\nimport { AlwaysShrinkableArbitrary } from '../../arbitrary/_internals/AlwaysShrinkableArbitrary.js';\nimport { convertFromNext, convertToNext } from '../arbitrary/definition/Converters.js';\n\nfunction property(...args) {\n  if (args.length < 2) throw new Error('property expects at least two parameters');\n  const arbs = args.slice(0, args.length - 1);\n  const p = args[args.length - 1];\n  return convertFromNextPropertyWithHooks(new Property(genericTuple(arbs.map(arb => convertFromNext(new AlwaysShrinkableArbitrary(convertToNext(arb))))), t => p(...t)));\n}\n\nexport { property };","map":null,"metadata":{},"sourceType":"module"}