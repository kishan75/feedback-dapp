{"ast":null,"code":"import { NextValue } from '../../../check/arbitrary/definition/NextValue.js';\nimport { stream } from '../../../stream/Stream.js';\n\nfunction halvePosInteger(n) {\n  return Math.floor(n / 2);\n}\n\nfunction halveNegInteger(n) {\n  return Math.ceil(n / 2);\n}\n\nexport function shrinkInteger(current, target, tryTargetAsap) {\n  const realGap = current - target;\n\n  function* shrinkDecr() {\n    let previous = tryTargetAsap ? undefined : target;\n    const gap = tryTargetAsap ? realGap : halvePosInteger(realGap);\n\n    for (let toremove = gap; toremove > 0; toremove = halvePosInteger(toremove)) {\n      const next = toremove === realGap ? target : current - toremove;\n      yield new NextValue(next, previous);\n      previous = next;\n    }\n  }\n\n  function* shrinkIncr() {\n    let previous = tryTargetAsap ? undefined : target;\n    const gap = tryTargetAsap ? realGap : halveNegInteger(realGap);\n\n    for (let toremove = gap; toremove < 0; toremove = halveNegInteger(toremove)) {\n      const next = toremove === realGap ? target : current - toremove;\n      yield new NextValue(next, previous);\n      previous = next;\n    }\n  }\n\n  return realGap > 0 ? stream(shrinkDecr()) : stream(shrinkIncr());\n}","map":null,"metadata":{},"sourceType":"module"}