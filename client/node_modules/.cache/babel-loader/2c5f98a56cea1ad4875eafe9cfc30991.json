{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridPreferencePanelStateSelector } from '../../hooks/features/preferencesPanel/gridPreferencePanelSelector';\nimport { GridPreferencePanelsValue } from '../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridPreferencesPanel =\n/*#__PURE__*/\nReact.forwardRef(function GridPreferencesPanel(props, ref) {\n  var _rootProps$components, _rootProps$components2, _rootProps$components3, _rootProps$components4;\n\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const isColumnsTabOpen = preferencePanelState.openedPanelValue === GridPreferencePanelsValue.columns;\n  const isFiltersTabOpen = !preferencePanelState.openedPanelValue || !isColumnsTabOpen;\n  return (\n    /*#__PURE__*/\n    _jsxs(rootProps.components.Panel, _extends({\n      ref: ref,\n      as: rootProps.components.BasePopper,\n      open: columns.length > 0 && preferencePanelState.open\n    }, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.panel, props, (_rootProps$components2 = rootProps.componentsProps) == null ? void 0 : _rootProps$components2.basePopper, {\n      children: [!rootProps.disableColumnSelector && isColumnsTabOpen &&\n      /*#__PURE__*/\n      _jsx(rootProps.components.ColumnsPanel, _extends({}, (_rootProps$components3 = rootProps.componentsProps) == null ? void 0 : _rootProps$components3.columnsPanel)), !rootProps.disableColumnFilter && isFiltersTabOpen &&\n      /*#__PURE__*/\n      _jsx(rootProps.components.FilterPanel, _extends({}, (_rootProps$components4 = rootProps.componentsProps) == null ? void 0 : _rootProps$components4.filterPanel))]\n    }))\n  );\n});","map":null,"metadata":{},"sourceType":"module"}