{"ast":null,"code":"var _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp-full\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\FunctionBox\\\\GenerateTicketsFunctionBox\\\\generateTicketsFunctionBox.js\";\nimport React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { DataGrid } from '@mui/x-data-grid'; // CheckForm\n\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport FormHelperText from '@mui/material/FormHelperText'; // Adornments\n\nimport SendIcon from '@mui/icons-material/Send';\nimport UploadFileIcon from '@mui/icons-material/UploadFile'; // CSS\n\nimport './generateTicketsFunctionBox.scss';\n\nconst generateTicketsFunctionBox = props => {\n  const data = props.data;\n  const errors = props.errors;\n  const nameOptions = props.mainOptions;\n  const codeOptions = props.subOptions.code;\n  const yearOptions = props.subOptions.year;\n  const semOptions = props.subOptions.sem;\n  const studentsOptions = props.subOptions.students;\n  const emails = props.data.emails; // For Datagrid:\n\n  const columns = [{\n    field: 'id',\n    headerName: 'S-No.',\n    width: 90\n  }, {\n    field: 'email',\n    headerName: 'Student E-Mail',\n    width: 200\n  }];\n  let rows = [];\n\n  for (var i = 0; i < emails.length; i++) rows.push({\n    id: i + 1,\n    email: emails[i]\n  });\n\n  return React.createElement(\"div\", {\n    className: \"fbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" GENERATE TICKETS \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Box, {\n    component: \"form\",\n    autoComplete: \"off\",\n    className: \"muiboxmain\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CSSFormControl, {\n    sx: {\n      m: 1,\n      minWidth: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"menu-course-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \" COURSE \"), React.createElement(Select, {\n    name: \"name\",\n    value: data.name,\n    label: \"COURSE\",\n    onChange: e => {\n      props.handleInputChange(e);\n      props.handleMainChange(e);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"None\")), nameOptions.map((value, idx) => React.createElement(MenuItem, {\n    key: idx,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" \", value, \" \"))), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, errors.name)), React.createElement(CSSFormControl, {\n    sx: {\n      m: 1,\n      minWidth: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"menu-course-code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \" CODE \"), React.createElement(Select, {\n    name: \"code\",\n    value: data.code,\n    label: \"CODE\",\n    onChange: props.handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"None\")), codeOptions.map((value, idx) => React.createElement(MenuItem, {\n    key: idx,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \" \", value, \" \"))), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, errors.code)), React.createElement(CSSFormControl, {\n    sx: {\n      m: 1,\n      minWidth: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"menu-course-year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \" YEAR \"), React.createElement(Select, {\n    name: \"year\",\n    value: data.year,\n    label: \"YEAR\",\n    onChange: props.handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"None\")), yearOptions.map((value, idx) => React.createElement(MenuItem, {\n    key: idx,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \" \", value, \" \"))), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, errors.year)), React.createElement(CSSFormControl, {\n    sx: {\n      m: 1,\n      minWidth: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"menu-course-sem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" SEM \"), React.createElement(Select, {\n    name: \"sem\",\n    value: data.sem,\n    label: \"SEM\",\n    onChange: props.handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"None\")), semOptions.map((value, idx) => React.createElement(MenuItem, {\n    key: idx,\n    value: idx,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \" \", value, \" \"))), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, errors.sem)), React.createElement(CSSFormControl, {\n    sx: {\n      m: 1,\n      minWidth: 200\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    id: \"menu-course-studs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \" STUDENTS \"), React.createElement(Select, {\n    name: \"students\",\n    value: data.students,\n    label: \"STUDENTS\",\n    onChange: props.handleInputChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"None\")), studentsOptions.map((value, idx) => React.createElement(MenuItem, {\n    key: idx,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \" \", value, \" \"))), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, errors.students))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, props.data.emails.length > 0 ? React.createElement(\"div\", {\n    style: {\n      height: 400,\n      width: 320,\n      marginRight: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(DataGrid, {\n    rows: rows,\n    columns: columns,\n    pageSize: 5,\n    rowsPerPageOptions: [5],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })) : null)), React.createElement(\"div\", {\n    className: \"buttonflex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Button, {\n    sx: {\n      m: 2,\n      width: 300\n    },\n    size: \"large\",\n    color: \"error\",\n    variant: \"contained\",\n    endIcon: React.createElement(SendIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }),\n    onClick: props.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Send\"), React.createElement(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Input, {\n    id: \"icon-button-file\",\n    accept: \".csv, .txt\",\n    type: \"file\",\n    name: \"emailsfile\",\n    onChange: props.handleFileChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(Button, {\n    sx: {\n      m: 2,\n      width: 250\n    },\n    variant: \"outlined\",\n    component: \"span\",\n    color: \"error\",\n    startIcon: React.createElement(UploadFileIcon, {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Upload\"))), React.createElement(FormHelperText, {\n    sx: {\n      m: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, errors.emails));\n};\n\nexport default generateTicketsFunctionBox;\nconst CssTextField = styled(TextField)({\n  '& .MuiInputBase-input': {\n    color: 'white'\n  },\n  '& label': {\n    color: '#666666'\n  },\n  '& label.Mui-focused': {\n    color: 'white'\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#ce3333'\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#666666'\n    },\n    '&:hover fieldset': {\n      borderColor: '#ce3333'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#ce3333'\n    }\n  },\n  \"& .MuiFormLabel-root.Mui-error\": {\n    color: \"#ffdd00 !important\"\n  },\n  '& label.Mui-focused.Mui-error': {\n    color: \"white !important\"\n  },\n  '& .MuiOutlinedInput-root.Mui-error': {\n    '& fieldset': {\n      borderColor: \"#ffdd00 !important\"\n    },\n    '&:hover fieldset': {\n      borderColor: \"#ffdd00 !important\"\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: \"#ffdd00 !important\"\n    }\n  }\n});\nconst CSSFormControl = styled(FormControl)({\n  '& .MuiInputBase-input': {\n    color: 'white'\n  },\n  '& label': {\n    color: '#666666'\n  },\n  '& label.Mui-focused': {\n    color: 'white'\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: '#ce3333'\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#666666'\n    },\n    '&:hover fieldset': {\n      borderColor: '#ce3333'\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#ce3333'\n    }\n  }\n});\nconst Input = styled('input')({\n  display: 'none'\n});","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp-full/feedback-dapp/client/src/components/FunctionBox/GenerateTicketsFunctionBox/generateTicketsFunctionBox.js"],"names":["React","styled","Box","TextField","Button","DataGrid","FormControl","InputLabel","MenuItem","Select","FormHelperText","SendIcon","UploadFileIcon","generateTicketsFunctionBox","props","data","errors","nameOptions","mainOptions","codeOptions","subOptions","code","yearOptions","year","semOptions","sem","studentsOptions","students","emails","columns","field","headerName","width","rows","i","length","push","id","email","m","minWidth","name","e","handleInputChange","handleMainChange","map","value","idx","height","marginRight","handleSubmit","handleFileChange","color","CssTextField","borderBottomColor","borderColor","CSSFormControl","Input","display"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\n\r\n// CheckForm\r\nimport FormControl from '@mui/material/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport Select from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\n\r\n\r\n// Adornments\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\r\n\r\n// CSS\r\nimport './generateTicketsFunctionBox.scss';\r\n\r\n\r\n\r\nconst generateTicketsFunctionBox = (props) => {\r\n    const data = props.data;\r\n    const errors = props.errors;\r\n    const nameOptions = props.mainOptions;\r\n    const codeOptions = props.subOptions.code;\r\n    const yearOptions = props.subOptions.year;\r\n    const semOptions = props.subOptions.sem;\r\n    const studentsOptions = props.subOptions.students;\r\n    const emails = props.data.emails;\r\n\r\n    // For Datagrid:\r\n    const columns = [\r\n        { field: 'id', headerName: 'S-No.', width: 90 },\r\n        { field: 'email', headerName: 'Student E-Mail', width: 200 }\r\n    ];\r\n    let rows = [];\r\n    for (var i = 0; i < emails.length; i++)\r\n        rows.push({ id: i + 1, email: emails[i] });\r\n\r\n    return (\r\n        <div className='fbox'>\r\n            <h1> GENERATE TICKETS </h1>\r\n            <br />\r\n            <br />\r\n            <Box component=\"form\" autoComplete=\"off\" className='muiboxmain'>\r\n                <div>\r\n                    <CSSFormControl sx={{ m: 1, minWidth: 200 }} >\r\n                        <InputLabel id=\"menu-course-name\"> COURSE </InputLabel>\r\n                        <Select\r\n                            name='name'\r\n                            value={data.name}\r\n                            label=\"COURSE\"\r\n                            onChange={(e) => { props.handleInputChange(e); props.handleMainChange(e); }}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {nameOptions.map((value, idx) => (\r\n                                <MenuItem key={idx} value={value}> {value} </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <FormHelperText>{errors.name}</FormHelperText>\r\n                    </CSSFormControl>\r\n\r\n                    <CSSFormControl sx={{ m: 1, minWidth: 200 }} >\r\n                        <InputLabel id=\"menu-course-code\"> CODE </InputLabel>\r\n                        <Select\r\n                            name='code'\r\n                            value={data.code}\r\n                            label=\"CODE\"\r\n                            onChange={props.handleInputChange}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {codeOptions.map((value, idx) => (\r\n                                <MenuItem key={idx} value={value}> {value} </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <FormHelperText>{errors.code}</FormHelperText>\r\n                    </CSSFormControl>\r\n\r\n                    <CSSFormControl sx={{ m: 1, minWidth: 200 }} >\r\n                        <InputLabel id=\"menu-course-year\"> YEAR </InputLabel>\r\n                        <Select\r\n                            name='year'\r\n                            value={data.year}\r\n                            label=\"YEAR\"\r\n                            onChange={props.handleInputChange}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {yearOptions.map((value, idx) => (\r\n                                <MenuItem key={idx} value={value}> {value} </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <FormHelperText>{errors.year}</FormHelperText>\r\n                    </CSSFormControl>\r\n\r\n                    <CSSFormControl sx={{ m: 1, minWidth: 200 }} >\r\n                        <InputLabel id=\"menu-course-sem\"> SEM </InputLabel>\r\n                        <Select\r\n                            name='sem'\r\n                            value={data.sem}\r\n                            label=\"SEM\"\r\n                            onChange={props.handleInputChange}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {semOptions.map((value, idx) => (\r\n                                <MenuItem key={idx} value={idx}> {value} </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <FormHelperText>{errors.sem}</FormHelperText>\r\n                    </CSSFormControl>\r\n\r\n                    <CSSFormControl sx={{ m: 1, minWidth: 200 }} >\r\n                        <InputLabel id=\"menu-course-studs\"> STUDENTS </InputLabel>\r\n                        <Select\r\n                            name='students'\r\n                            value={data.students}\r\n                            label=\"STUDENTS\"\r\n                            onChange={props.handleInputChange}\r\n                        >\r\n                            <MenuItem value=\"\">\r\n                                <em>None</em>\r\n                            </MenuItem>\r\n                            {studentsOptions.map((value, idx) => (\r\n                                <MenuItem key={idx} value={value}> {value} </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                        <FormHelperText>{errors.students}</FormHelperText>\r\n                    </CSSFormControl>\r\n                </div>\r\n\r\n                <div>\r\n                    {props.data.emails.length > 0 ?\r\n                        <div style={{ height: 400, width: 320, marginRight: 20 }}>\r\n                            <DataGrid\r\n                                rows={rows}\r\n                                columns={columns}\r\n                                pageSize={5}\r\n                                rowsPerPageOptions={[5]}\r\n                            />\r\n                        </div> : null}\r\n                </div>\r\n\r\n            </Box>\r\n\r\n            <div className='buttonflex'>\r\n                <Button sx={{ m: 2, width: 300 }} size='large' color=\"error\" variant=\"contained\" endIcon={<SendIcon />} onClick={props.handleSubmit}>\r\n                    Send\r\n                </Button>\r\n                <label htmlFor=\"icon-button-file\">\r\n                    <Input id=\"icon-button-file\" accept=\".csv, .txt\" type=\"file\" name='emailsfile' onChange={props.handleFileChange} />\r\n                    <Button sx={{ m: 2, width: 250 }} variant=\"outlined\" component=\"span\" color=\"error\" startIcon={<UploadFileIcon style={{ color: 'red' }} />}>\r\n                        Upload\r\n                    </Button>\r\n                </label>\r\n            </div>\r\n            <FormHelperText sx={{ m: 2 }}>{errors.emails}</FormHelperText>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default generateTicketsFunctionBox;\r\n\r\n\r\n\r\nconst CssTextField = styled(TextField)({\r\n    '& .MuiInputBase-input': {\r\n        color: 'white'\r\n    },\r\n    '& label': {\r\n        color: '#666666'\r\n    },\r\n    '& label.Mui-focused': {\r\n        color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#ce3333',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n            borderColor: '#666666',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: '#ce3333',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#ce3333',\r\n        },\r\n    },\r\n\r\n    \"& .MuiFormLabel-root.Mui-error\": {\r\n        color: \"#ffdd00 !important\"\r\n    },\r\n    '& label.Mui-focused.Mui-error': {\r\n        color: \"white !important\",\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-error': {\r\n        '& fieldset': {\r\n            borderColor: \"#ffdd00 !important\",\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: \"#ffdd00 !important\",\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: \"#ffdd00 !important\",\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst CSSFormControl = styled(FormControl)({\r\n    '& .MuiInputBase-input': {\r\n        color: 'white'\r\n    },\r\n    '& label': {\r\n        color: '#666666'\r\n    },\r\n    '& label.Mui-focused': {\r\n        color: 'white',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n        borderBottomColor: '#ce3333',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n            borderColor: '#666666',\r\n        },\r\n        '&:hover fieldset': {\r\n            borderColor: '#ce3333',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n            borderColor: '#ce3333',\r\n        },\r\n    },\r\n});\r\n\r\n\r\nconst Input = styled('input')({\r\n    display: 'none',\r\n});"]},"metadata":{},"sourceType":"module"}