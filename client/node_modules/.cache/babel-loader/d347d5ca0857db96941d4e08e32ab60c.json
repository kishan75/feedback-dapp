{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.update = void 0;\n\nvar htmlparser2_1 = require(\"htmlparser2\");\n\nvar htmlparser2_adapter_1 = require(\"./parsers/htmlparser2-adapter\");\n\nvar parse5_adapter_1 = require(\"./parsers/parse5-adapter\");\n\nvar domhandler_1 = require(\"domhandler\");\n/*\n * Parser\n */\n\n\nfunction parse(content, options, isDocument) {\n  if (typeof Buffer !== 'undefined' && Buffer.isBuffer(content)) {\n    content = content.toString();\n  }\n\n  if (typeof content === 'string') {\n    return options.xmlMode || options._useHtmlParser2 ? htmlparser2_adapter_1.parse(content, options) : parse5_adapter_1.parse(content, options, isDocument);\n  }\n\n  var doc = content;\n\n  if (!Array.isArray(doc) && domhandler_1.isDocument(doc)) {\n    // If `doc` is already a root, just return it\n    return doc;\n  } // Add conent to new root element\n\n\n  var root = new domhandler_1.Document([]); // Update the DOM using the root\n\n  update(doc, root);\n  return root;\n}\n\nexports.default = parse;\n/**\n * Update the dom structure, for one changed layer.\n *\n * @param newChilds - The new children.\n * @param parent - The new parent.\n * @returns The parent node.\n */\n\nfunction update(newChilds, parent) {\n  // Normalize\n  var arr = Array.isArray(newChilds) ? newChilds : [newChilds]; // Update parent\n\n  if (parent) {\n    parent.children = arr;\n  } else {\n    parent = null;\n  } // Update neighbors\n\n\n  for (var i = 0; i < arr.length; i++) {\n    var node = arr[i]; // Cleanly remove existing nodes from their previous structures.\n\n    if (node.parent && node.parent.children !== arr) {\n      htmlparser2_1.DomUtils.removeElement(node);\n    }\n\n    if (parent) {\n      node.prev = arr[i - 1] || null;\n      node.next = arr[i + 1] || null;\n    } else {\n      node.prev = node.next = null;\n    }\n\n    node.parent = parent;\n  }\n\n  return parent;\n}\n\nexports.update = update;","map":null,"metadata":{},"sourceType":"script"}