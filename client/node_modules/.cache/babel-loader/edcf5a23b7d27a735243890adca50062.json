{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\ProfessorDetails\\\\professorDetails.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ProfessorDetailsFunctionBox from '../../FunctionBox/ProfessorDetailsFunctionBox/professorDetailsFunctionBox';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport \"./professorDetails.css\";\nconst Alert = React.forwardRef(function Alert(props, ref) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n});\n\nconst ProfessorDetails = props => {\n  const _useState = useState({\n    address: props.account,\n    ticket: '',\n    name: 'Dr. ',\n    email: '',\n    file: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        professorDetails = _useState2[0],\n        setProfessorDetails = _useState2[1];\n\n  const _useState3 = useState({\n    address: '',\n    ticket: '',\n    name: '',\n    email: '',\n    file: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        professorErrors = _useState4[0],\n        setProfessorErrors = _useState4[1];\n\n  const _useState5 = useState({\n    message: '',\n    severity: '',\n    open: false\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        toast = _useState6[0],\n        setToast = _useState6[1]; // Asyncs:\n\n\n  const writeToBlockChain = async () => {\n    const feedbackData = props.contracts.feedbackData;\n\n    if (feedbackData != undefined) {\n      let result = await feedbackData.methods.createProfessor(professorDetails.name, professorDetails.email, '', professorDetails.ticket).send({\n        from: professorDetails.address\n      });\n      console.log(result);\n      return result;\n    } else {\n      setToast({\n        message: 'INTERNAL-ERROR: Feedback contract not deployed',\n        severity: 'error',\n        open: true\n      });\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleProfessorInputChange = event => {\n    setProfessorDetails(_objectSpread({}, professorDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, professorErrors);\n\n    updatedErrors = validateProfessorInput(event.target.name, event.target.value, updatedErrors);\n    setProfessorErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handlerProfessorSubmit = () => {\n    let updatedErrors = _objectSpread({}, professorErrors);\n\n    for (var key in professorDetails) if (professorDetails.hasOwnProperty(key)) updatedErrors = validateProfessorInput(key, professorDetails[key], updatedErrors);\n\n    setProfessorErrors(_objectSpread({}, updatedErrors));\n\n    const fastProfessorErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastProfessorErrors) {\n      if (fastProfessorErrors.hasOwnProperty(key)) if (fastProfessorErrors[key] != '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(professorDetails);\n\n    if (ready) {\n      writeToBlockChain().then(r => {\n        console.log(r);\n        setToast({\n          message: 'TxN SUCCESS: You have been registered',\n          severity: 'success',\n          open: true\n        });\n        setTimeout(() => props.closeModal(), 3500);\n      }).catch(e => {\n        if (e.code == 'INVALID_ARGUMENT') setToast({\n          message: 'ERROR: Ticket should be in hex',\n          severity: 'error',\n          open: true\n        });else if (e.code == '4001') setToast({\n          message: 'TxN WARN: Denied by user',\n          severity: 'warning',\n          open: true\n        });else setToast({\n          message: 'TxN ERROR: Invalid ticket',\n          severity: 'error',\n          open: true\n        });\n      });\n    }\n  };\n\n  const handleToastClose = (event, reason) => {\n    if (reason === 'clickaway') return;\n    setToast(_objectSpread({}, toast, {\n      open: false\n    }));\n  };\n\n  const convertBase64 = file => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = error => {\n        console.log(error);\n        reject(error);\n      };\n    });\n  };\n\n  const handleImageFileUpload = async e => {\n    switch (e.target.name) {\n      case 'pic':\n        const file = e.target.files[0];\n        const base64 = await convertBase64(file);\n        console.log(base64);\n        const data = new FormData();\n        data.append(\"image\", e.target.files[0]);\n        data.append(\"address\", professorDetails.address);\n        const config = {\n          headers: {\n            \"Content-type\": 'multipart/form-data'\n          }\n        };\n        axios.post(\"http://127.0.0.1:5001/upload\", data, config).then(res => {\n          console.log(res);\n          setProfessorDetails(_objectSpread({}, professorDetails, {\n            file: e.target.files[0]\n          }));\n        }).catch(err => {\n          setToast({\n            message: 'UPLOAD ERROR: Something went wrong or already uploaded with current account',\n            severity: 'error',\n            open: true\n          });\n          console.log(err);\n        });\n        break;\n\n      default:\n        console.error('Error while uploading file');\n        break;\n    }\n  }; // Validators\n\n\n  const validateProfessorInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'name':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length < 5) updatedErrors[field] = 'Length should be greater than 5';else if (value.length > 30) updatedErrors[field] = 'Length should be smaller than 30';else updatedErrors[field] = '';\n        break;\n\n      case 'ticket':\n      case 'address':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length < 10) updatedErrors[field] = 'Length should be greater than 10';else if (value.length > 100) updatedErrors[field] = 'Length should be smaller than 100';else updatedErrors[field] = '';\n        break;\n\n      case 'email':\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!re.test(value)) updatedErrors[field] = 'Invalid email!';else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in'))) updatedErrors[field] = 'Invalid domain, accepted domains are @itbhu.ac.in or @iitbhu.ac.in';else updatedErrors[field] = '';\n        break;\n\n      case 'file':\n        if (value.length == 0) updatedErrors[field] = 'Must upload display picture';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(ProfessorDetailsFunctionBox, {\n    data: professorDetails,\n    errors: professorErrors,\n    handleInputChange: handleProfessorInputChange,\n    handleSubmit: handlerProfessorSubmit,\n    handleFileChange: handleImageFileUpload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }));\n};\n\nexport default ProfessorDetails;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/ProfessorDetails/professorDetails.js"],"names":["React","useState","axios","ProfessorDetailsFunctionBox","Snackbar","MuiAlert","Alert","forwardRef","props","ref","ProfessorDetails","address","account","ticket","name","email","file","professorDetails","setProfessorDetails","professorErrors","setProfessorErrors","message","severity","open","toast","setToast","writeToBlockChain","feedbackData","contracts","undefined","result","methods","createProfessor","send","from","console","log","handleProfessorInputChange","event","target","value","updatedErrors","validateProfessorInput","handlerProfessorSubmit","key","hasOwnProperty","fastProfessorErrors","ready","then","r","setTimeout","closeModal","catch","e","code","handleToastClose","reason","convertBase64","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","error","handleImageFileUpload","files","base64","data","FormData","append","config","headers","post","res","err","field","length","re","test","endsWith"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,2BAAP,MAAwC,2EAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,OAAO,wBAAP;AAGA,MAAMC,KAAK,GAAGN,KAAK,CAACO,UAAN,CAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACxD,SAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,GAAG,EAAEA,GAA7B;AAAkC,IAAA,OAAO,EAAC;AAA1C,KAAuDD,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFa,CAAd;;AAIA,MAAME,gBAAgB,GAAIF,KAAD,IAAW;AAAA,oBACcP,QAAQ,CAAC;AACvDU,IAAAA,OAAO,EAAEH,KAAK,CAACI,OADwC;AAEvDC,IAAAA,MAAM,EAAE,EAF+C;AAGvDC,IAAAA,IAAI,EAAE,MAHiD;AAIvDC,IAAAA,KAAK,EAAE,EAJgD;AAKvDC,IAAAA,IAAI,EAAE;AALiD,GAAD,CADtB;AAAA;AAAA,QAC3BC,gBAD2B;AAAA,QACTC,mBADS;;AAAA,qBASYjB,QAAQ,CAAC;AACrDU,IAAAA,OAAO,EAAE,EAD4C;AAErDE,IAAAA,MAAM,EAAE,EAF6C;AAGrDC,IAAAA,IAAI,EAAE,EAH+C;AAIrDC,IAAAA,KAAK,EAAE,EAJ8C;AAKrDC,IAAAA,IAAI,EAAE;AAL+C,GAAD,CATpB;AAAA;AAAA,QAS3BG,eAT2B;AAAA,QASVC,kBATU;;AAAA,qBAiBRnB,QAAQ,CAAC;AACjCoB,IAAAA,OAAO,EAAE,EADwB;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,IAAI,EAAE;AAH2B,GAAD,CAjBA;AAAA;AAAA,QAiB3BC,KAjB2B;AAAA,QAiBpBC,QAjBoB,kBAuBlC;;;AACA,QAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAMC,YAAY,GAAGnB,KAAK,CAACoB,SAAN,CAAgBD,YAArC;;AACA,QAAIA,YAAY,IAAIE,SAApB,EAA+B;AAC7B,UAAIC,MAAM,GAAG,MAAMH,YAAY,CAACI,OAAb,CAAqBC,eAArB,CAAqCf,gBAAgB,CAACH,IAAtD,EAA4DG,gBAAgB,CAACF,KAA7E,EAAoF,EAApF,EAAwFE,gBAAgB,CAACJ,MAAzG,EAAiHoB,IAAjH,CAAsH;AAAEC,QAAAA,IAAI,EAAEjB,gBAAgB,CAACN;AAAzB,OAAtH,CAAnB;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACA,aAAOA,MAAP;AACD,KAJD,MAIO;AACLL,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,OAAO,EAAE,gDAAX;AAA6DC,QAAAA,QAAQ,EAAE,OAAvE;AAAgFC,QAAAA,IAAI,EAAE;AAAtF,OAAD,CAAR;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACF,GAVD,CAxBkC,CAqClC;;;AACA,QAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAC5CpB,IAAAA,mBAAmB,mBACdD,gBADc;AAEjB,OAACqB,KAAK,CAACC,MAAN,CAAazB,IAAd,GAAqBwB,KAAK,CAACC,MAAN,CAAaC;AAFjB,OAAnB;;AAKA,QAAIC,aAAa,qBAAQtB,eAAR,CAAjB;;AACAsB,IAAAA,aAAa,GAAGC,sBAAsB,CAACJ,KAAK,CAACC,MAAN,CAAazB,IAAd,EAAoBwB,KAAK,CAACC,MAAN,CAAaC,KAAjC,EAAwCC,aAAxC,CAAtC;AACArB,IAAAA,kBAAkB,mBAAMqB,aAAN,EAAlB;AACD,GATD;;AAYA,QAAME,sBAAsB,GAAG,MAAM;AACnC,QAAIF,aAAa,qBAAQtB,eAAR,CAAjB;;AAEA,SAAK,IAAIyB,GAAT,IAAgB3B,gBAAhB,EACE,IAAIA,gBAAgB,CAAC4B,cAAjB,CAAgCD,GAAhC,CAAJ,EACEH,aAAa,GAAGC,sBAAsB,CAACE,GAAD,EAAM3B,gBAAgB,CAAC2B,GAAD,CAAtB,EAA6BH,aAA7B,CAAtC;;AAEJrB,IAAAA,kBAAkB,mBAAMqB,aAAN,EAAlB;;AACA,UAAMK,mBAAmB,qBAAQL,aAAR,CAAzB;;AAEA,QAAIM,KAAK,GAAG,IAAZ;;AACA,SAAK,IAAIH,GAAT,IAAgBE,mBAAhB,EAAqC;AACnC,UAAIA,mBAAmB,CAACD,cAApB,CAAmCD,GAAnC,CAAJ,EACE,IAAIE,mBAAmB,CAACF,GAAD,CAAnB,IAA4B,EAAhC,EACEG,KAAK,GAAG,KAAR;AACL;;AAEDZ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBW,KAAtB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYnB,gBAAZ;;AAEA,QAAI8B,KAAJ,EAAW;AACTrB,MAAAA,iBAAiB,GACdsB,IADH,CACQC,CAAC,IAAI;AACTd,QAAAA,OAAO,CAACC,GAAR,CAAYa,CAAZ;AACAxB,QAAAA,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,uCAAX;AAAoDC,UAAAA,QAAQ,EAAE,SAA9D;AAAyEC,UAAAA,IAAI,EAAE;AAA/E,SAAD,CAAR;AACA2B,QAAAA,UAAU,CAAC,MAAM1C,KAAK,CAAC2C,UAAN,EAAP,EAA2B,IAA3B,CAAV;AACD,OALH,EAMIC,KANJ,CAMUC,CAAC,IAAI;AACX,YAAIA,CAAC,CAACC,IAAF,IAAU,kBAAd,EACE7B,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,gCAAX;AAA6CC,UAAAA,QAAQ,EAAE,OAAvD;AAAgEC,UAAAA,IAAI,EAAE;AAAtE,SAAD,CAAR,CADF,KAEK,IAAI8B,CAAC,CAACC,IAAF,IAAU,MAAd,EACH7B,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,0BAAX;AAAuCC,UAAAA,QAAQ,EAAE,SAAjD;AAA4DC,UAAAA,IAAI,EAAE;AAAlE,SAAD,CAAR,CADG,KAGHE,QAAQ,CAAC;AAAEJ,UAAAA,OAAO,EAAE,2BAAX;AAAwCC,UAAAA,QAAQ,EAAE,OAAlD;AAA2DC,UAAAA,IAAI,EAAE;AAAjE,SAAD,CAAR;AACH,OAbH;AAcD;AACF,GApCD;;AAsCA,QAAMgC,gBAAgB,GAAG,CAACjB,KAAD,EAAQkB,MAAR,KAAmB;AAC1C,QAAIA,MAAM,KAAK,WAAf,EACE;AACF/B,IAAAA,QAAQ,mBAAMD,KAAN;AAAaD,MAAAA,IAAI,EAAE;AAAnB,OAAR;AACD,GAJD;;AAOA,QAAMkC,aAAa,GAAIzC,IAAD,IAAU;AAC9B,WAAO,IAAI0C,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,YAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;AACAD,MAAAA,UAAU,CAACE,aAAX,CAAyB/C,IAAzB;;AACA6C,MAAAA,UAAU,CAACG,MAAX,GAAoB,MAAM;AACxBL,QAAAA,OAAO,CAACE,UAAU,CAAC/B,MAAZ,CAAP;AACD,OAFD;;AAGA+B,MAAAA,UAAU,CAACI,OAAX,GAAsBC,KAAD,IAAW;AAC9B/B,QAAAA,OAAO,CAACC,GAAR,CAAY8B,KAAZ;AACAN,QAAAA,MAAM,CAACM,KAAD,CAAN;AACD,OAHD;AAID,KAVM,CAAP;AAWD,GAZD;;AAeA,QAAMC,qBAAqB,GAAG,MAAOd,CAAP,IAAa;AACzC,YAAQA,CAAC,CAACd,MAAF,CAASzB,IAAjB;AACE,WAAK,KAAL;AACE,cAAME,IAAI,GAAGqC,CAAC,CAACd,MAAF,CAAS6B,KAAT,CAAe,CAAf,CAAb;AACA,cAAMC,MAAM,GAAG,MAAMZ,aAAa,CAACzC,IAAD,CAAlC;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYiC,MAAZ;AAEA,cAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,QAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBnB,CAAC,CAACd,MAAF,CAAS6B,KAAT,CAAe,CAAf,CAArB;AACAE,QAAAA,IAAI,CAACE,MAAL,CAAY,SAAZ,EAAuBvD,gBAAgB,CAACN,OAAxC;AACA,cAAM8D,MAAM,GAAG;AACbC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AADI,SAAf;AAKAxE,QAAAA,KAAK,CAACyE,IAAN,CAAW,8BAAX,EAA2CL,IAA3C,EAAiDG,MAAjD,EACGzB,IADH,CACQ4B,GAAG,IAAI;AACXzC,UAAAA,OAAO,CAACC,GAAR,CAAYwC,GAAZ;AAEA1D,UAAAA,mBAAmB,mBACdD,gBADc;AAEjBD,YAAAA,IAAI,EAAEqC,CAAC,CAACd,MAAF,CAAS6B,KAAT,CAAe,CAAf;AAFW,aAAnB;AAID,SARH,EASGhB,KATH,CASSyB,GAAG,IAAI;AACZpD,UAAAA,QAAQ,CAAC;AAAEJ,YAAAA,OAAO,EAAE,6EAAX;AAA0FC,YAAAA,QAAQ,EAAE,OAApG;AAA6GC,YAAAA,IAAI,EAAE;AAAnH,WAAD,CAAR;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAYyC,GAAZ;AACD,SAZH;AAcA;;AACF;AACE1C,QAAAA,OAAO,CAAC+B,KAAR,CAAc,4BAAd;AAA6C;AA9BjD;AAgCD,GAjCD,CA9GkC,CAkJlC;;;AACA,QAAMxB,sBAAsB,GAAG,CAACoC,KAAD,EAAQtC,KAAR,EAAeC,aAAf,KAAiC;AAC9D,YAAQqC,KAAR;AACE,WAAK,MAAL;AACE,YAAItC,KAAK,CAACuC,MAAN,IAAgB,CAApB,EACEtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,iBAAvB,CADF,KAEK,IAAItC,KAAK,CAACuC,MAAN,GAAe,CAAnB,EACHtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,iCAAvB,CADG,KAEA,IAAItC,KAAK,CAACuC,MAAN,GAAe,EAAnB,EACHtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,kCAAvB,CADG,KAGHrC,aAAa,CAACqC,KAAD,CAAb,GAAuB,EAAvB;AACF;;AACF,WAAK,QAAL;AACA,WAAK,SAAL;AACE,YAAItC,KAAK,CAACuC,MAAN,IAAgB,CAApB,EACEtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,iBAAvB,CADF,KAEK,IAAItC,KAAK,CAACuC,MAAN,GAAe,EAAnB,EACHtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,kCAAvB,CADG,KAEA,IAAItC,KAAK,CAACuC,MAAN,GAAe,GAAnB,EACHtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,mCAAvB,CADG,KAGHrC,aAAa,CAACqC,KAAD,CAAb,GAAuB,EAAvB;AACF;;AACF,WAAK,OAAL;AACE,YAAIE,EAAE,GAAG,2JAAT;AACA,YAAIxC,KAAK,CAACuC,MAAN,IAAgB,CAApB,EACEtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,iBAAvB,CADF,KAEK,IAAI,CAACE,EAAE,CAACC,IAAH,CAAQzC,KAAR,CAAL,EACHC,aAAa,CAACqC,KAAD,CAAb,GAAuB,gBAAvB,CADG,KAEA,IAAI,EAAEtC,KAAK,CAAC0C,QAAN,CAAe,cAAf,KAAkC1C,KAAK,CAAC0C,QAAN,CAAe,eAAf,CAApC,CAAJ,EACHzC,aAAa,CAACqC,KAAD,CAAb,GAAuB,oEAAvB,CADG,KAGHrC,aAAa,CAACqC,KAAD,CAAb,GAAuB,EAAvB;AACF;;AACF,WAAK,MAAL;AACE,YAAItC,KAAK,CAACuC,MAAN,IAAgB,CAApB,EACEtC,aAAa,CAACqC,KAAD,CAAb,GAAuB,6BAAvB,CADF,KAGErC,aAAa,CAACqC,KAAD,CAAb,GAAuB,EAAvB;AACF;AAtCJ;;AAwCA,WAAOrC,aAAP;AACD,GA1CD;;AA6CA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,2BAAD;AACE,IAAA,IAAI,EAAExB,gBADR;AAEE,IAAA,MAAM,EAAEE,eAFV;AAGE,IAAA,iBAAiB,EAAEkB,0BAHrB;AAIE,IAAA,YAAY,EAAEM,sBAJhB;AAKE,IAAA,gBAAgB,EAAEwB,qBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CA3MD;;AA6MA,eAAezD,gBAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport ProfessorDetailsFunctionBox from '../../FunctionBox/ProfessorDetailsFunctionBox/professorDetailsFunctionBox';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport \"./professorDetails.css\";\r\n\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst ProfessorDetails = (props) => {\r\n  const [professorDetails, setProfessorDetails] = useState({\r\n    address: props.account,\r\n    ticket: '',\r\n    name: 'Dr. ',\r\n    email: '',\r\n    file: '',\r\n  });\r\n\r\n  const [professorErrors, setProfessorErrors] = useState({\r\n    address: '',\r\n    ticket: '',\r\n    name: '',\r\n    email: '',\r\n    file: '',\r\n  })\r\n\r\n  const [toast, setToast] = useState({\r\n    message: '',\r\n    severity: '',\r\n    open: false\r\n  })\r\n\r\n  // Asyncs:\r\n  const writeToBlockChain = async () => {\r\n    const feedbackData = props.contracts.feedbackData;\r\n    if (feedbackData != undefined) {\r\n      let result = await feedbackData.methods.createProfessor(professorDetails.name, professorDetails.email, '', professorDetails.ticket).send({ from: professorDetails.address });\r\n      console.log(result);\r\n      return result\r\n    } else {\r\n      setToast({ message: 'INTERNAL-ERROR: Feedback contract not deployed', severity: 'error', open: true });\r\n      console.log('Feedback contract not deployed');\r\n    }\r\n  }\r\n\r\n\r\n  // Handlers\r\n  const handleProfessorInputChange = (event) => {\r\n    setProfessorDetails({\r\n      ...professorDetails,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let updatedErrors = { ...professorErrors };\r\n    updatedErrors = validateProfessorInput(event.target.name, event.target.value, updatedErrors);\r\n    setProfessorErrors({ ...updatedErrors });\r\n  };\r\n\r\n\r\n  const handlerProfessorSubmit = () => {\r\n    let updatedErrors = { ...professorErrors };\r\n\r\n    for (var key in professorDetails)\r\n      if (professorDetails.hasOwnProperty(key))\r\n        updatedErrors = validateProfessorInput(key, professorDetails[key], updatedErrors);\r\n\r\n    setProfessorErrors({ ...updatedErrors });\r\n    const fastProfessorErrors = { ...updatedErrors };\r\n\r\n    let ready = true;\r\n    for (var key in fastProfessorErrors) {\r\n      if (fastProfessorErrors.hasOwnProperty(key))\r\n        if (fastProfessorErrors[key] != '')\r\n          ready = false;\r\n    }\r\n\r\n    console.log('Ready:', ready);\r\n    console.log(professorDetails);\r\n\r\n    if (ready) {\r\n      writeToBlockChain()\r\n        .then(r => {\r\n          console.log(r);\r\n          setToast({ message: 'TxN SUCCESS: You have been registered', severity: 'success', open: true });\r\n          setTimeout(() => props.closeModal(), 3500);\r\n        }\r\n        ).catch(e => {\r\n          if (e.code == 'INVALID_ARGUMENT')\r\n            setToast({ message: 'ERROR: Ticket should be in hex', severity: 'error', open: true });\r\n          else if (e.code == '4001')\r\n            setToast({ message: 'TxN WARN: Denied by user', severity: 'warning', open: true });\r\n          else\r\n            setToast({ message: 'TxN ERROR: Invalid ticket', severity: 'error', open: true });\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleToastClose = (event, reason) => {\r\n    if (reason === 'clickaway')\r\n      return;\r\n    setToast({ ...toast, open: false });\r\n  };\r\n\r\n\r\n  const convertBase64 = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsDataURL(file)\r\n      fileReader.onload = () => {\r\n        resolve(fileReader.result);\r\n      }\r\n      fileReader.onerror = (error) => {\r\n        console.log(error);\r\n        reject(error);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  const handleImageFileUpload = async (e) => {\r\n    switch (e.target.name) {\r\n      case 'pic':\r\n        const file = e.target.files[0];\r\n        const base64 = await convertBase64(file)\r\n        console.log(base64);\r\n\r\n        const data = new FormData();\r\n        data.append(\"image\", e.target.files[0]);\r\n        data.append(\"address\", professorDetails.address);\r\n        const config = {\r\n          headers: {\r\n            \"Content-type\": 'multipart/form-data',\r\n          },\r\n        };\r\n        axios.post(\"http://127.0.0.1:5001/upload\", data, config)\r\n          .then(res => {\r\n            console.log(res)\r\n\r\n            setProfessorDetails({\r\n              ...professorDetails,\r\n              file: e.target.files[0]\r\n            });\r\n          })\r\n          .catch(err => {\r\n            setToast({ message: 'UPLOAD ERROR: Something went wrong or already uploaded with current account', severity: 'error', open: true });\r\n            console.log(err)\r\n          });\r\n\r\n        break;\r\n      default:\r\n        console.error('Error while uploading file'); break;\r\n    }\r\n  }\r\n\r\n\r\n  // Validators\r\n  const validateProfessorInput = (field, value, updatedErrors) => {\r\n    switch (field) {\r\n      case 'name':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Cannot be empty';\r\n        else if (value.length < 5)\r\n          updatedErrors[field] = 'Length should be greater than 5';\r\n        else if (value.length > 30)\r\n          updatedErrors[field] = 'Length should be smaller than 30';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n      case 'ticket':\r\n      case 'address':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Cannot be empty';\r\n        else if (value.length < 10)\r\n          updatedErrors[field] = 'Length should be greater than 10';\r\n        else if (value.length > 100)\r\n          updatedErrors[field] = 'Length should be smaller than 100';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n      case 'email':\r\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Cannot be empty';\r\n        else if (!re.test(value))\r\n          updatedErrors[field] = 'Invalid email!';\r\n        else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in')))\r\n          updatedErrors[field] = 'Invalid domain, accepted domains are @itbhu.ac.in or @iitbhu.ac.in';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n      case 'file':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Must upload display picture';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break\r\n    }\r\n    return updatedErrors;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='cards'>\r\n      <ProfessorDetailsFunctionBox\r\n        data={professorDetails}\r\n        errors={professorErrors}\r\n        handleInputChange={handleProfessorInputChange}\r\n        handleSubmit={handlerProfessorSubmit}\r\n        handleFileChange={handleImageFileUpload}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfessorDetails;"]},"metadata":{},"sourceType":"module"}