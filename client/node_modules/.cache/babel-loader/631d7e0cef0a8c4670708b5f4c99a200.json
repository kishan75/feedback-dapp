{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuContainer } from './GridColumnMenuContainer';\nimport { GridColumnsMenuItem } from './GridColumnsMenuItem';\nimport { GridFilterMenuItem } from './GridFilterMenuItem';\nimport { HideGridColMenuItem } from './HideGridColMenuItem';\nimport { SortGridMenuItems } from './SortGridMenuItems';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridColumnMenu =\n/*#__PURE__*/\nReact.forwardRef(function GridColumnMenu(props, ref) {\n  const hideMenu = props.hideMenu,\n        currentColumn = props.currentColumn;\n  const apiRef = useGridApiContext();\n  const defaultButtons = [\n  /*#__PURE__*/\n  _jsx(SortGridMenuItems, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  // TODO update types to allow `onClick` and `column` to be optional\n  _jsx(GridFilterMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  _jsx(HideGridColMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  }),\n  /*#__PURE__*/\n  _jsx(GridColumnsMenuItem, {\n    onClick: hideMenu,\n    column: currentColumn\n  })];\n  const preProcessedButtons = apiRef.current.unstable_applyPreProcessors('columnMenu', defaultButtons, currentColumn);\n  return (\n    /*#__PURE__*/\n    _jsx(GridColumnMenuContainer, _extends({\n      ref: ref\n    }, props, {\n      children: preProcessedButtons.map((button, index) =>\n      /*#__PURE__*/\n      React.cloneElement(button, {\n        key: index,\n        onClick: hideMenu,\n        column: currentColumn\n      }))\n    }))\n  );\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  currentColumn: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenu };","map":null,"metadata":{},"sourceType":"module"}