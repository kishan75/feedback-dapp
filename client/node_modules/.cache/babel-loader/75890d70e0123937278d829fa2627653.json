{"ast":null,"code":"import { convertFromNext, convertToNext } from '../check/arbitrary/definition/Converters.js';\nimport { integer } from './integer.js';\nimport { timeToDateMapper, timeToDateUnmapper } from './_internals/mappers/TimeToDate.js';\nexport function date(constraints) {\n  const intMin = constraints && constraints.min !== undefined ? constraints.min.getTime() : -8640000000000000;\n  const intMax = constraints && constraints.max !== undefined ? constraints.max.getTime() : 8640000000000000;\n  if (Number.isNaN(intMin)) throw new Error('fc.date min must be valid instance of Date');\n  if (Number.isNaN(intMax)) throw new Error('fc.date max must be valid instance of Date');\n  if (intMin > intMax) throw new Error('fc.date max must be greater or equal to min');\n  return convertFromNext(convertToNext(integer(intMin, intMax)).map(timeToDateMapper, timeToDateUnmapper));\n}","map":null,"metadata":{},"sourceType":"module"}