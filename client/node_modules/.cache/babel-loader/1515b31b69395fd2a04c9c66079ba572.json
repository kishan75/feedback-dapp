{"ast":null,"code":"import { SkipAfterProperty } from '../property/SkipAfterProperty.js';\nimport { TimeoutProperty } from '../property/TimeoutProperty.js';\nimport { UnbiasedProperty } from '../property/UnbiasedProperty.js';\nimport { IgnoreEqualValuesProperty } from '../property/IgnoreEqualValuesProperty.js';\nimport { convertToNextProperty } from '../property/ConvertersProperty.js';\nexport function decorateProperty(rawProperty, qParams) {\n  let prop = convertToNextProperty(rawProperty);\n\n  if (rawProperty.isAsync() && qParams.timeout != null) {\n    prop = new TimeoutProperty(prop, qParams.timeout);\n  }\n\n  if (qParams.unbiased) {\n    prop = new UnbiasedProperty(prop);\n  }\n\n  if (qParams.skipAllAfterTimeLimit != null) {\n    prop = new SkipAfterProperty(prop, Date.now, qParams.skipAllAfterTimeLimit, false);\n  }\n\n  if (qParams.interruptAfterTimeLimit != null) {\n    prop = new SkipAfterProperty(prop, Date.now, qParams.interruptAfterTimeLimit, true);\n  }\n\n  if (qParams.skipEqualValues) {\n    prop = new IgnoreEqualValuesProperty(prop, true);\n  }\n\n  if (qParams.ignoreEqualValues) {\n    prop = new IgnoreEqualValuesProperty(prop, false);\n  }\n\n  return prop;\n}","map":null,"metadata":{},"sourceType":"module"}