{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"icon\", \"showInMenu\", \"onClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst GridActionsCellItem = props => {\n  const label = props.label,\n        icon = props.icon,\n        showInMenu = props.showInMenu,\n        onClick = props.onClick,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const handleClick = event => {\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  if (!showInMenu) {\n    return (\n      /*#__PURE__*/\n      _jsx(IconButton, _extends({\n        size: \"small\",\n        \"aria-label\": label\n      }, other, {\n        onClick: handleClick,\n        children:\n        /*#__PURE__*/\n        React.cloneElement(icon, {\n          fontSize: 'small'\n        })\n      }))\n    );\n  }\n\n  return (\n    /*#__PURE__*/\n    _jsxs(MenuItem, _extends({}, other, {\n      onClick: onClick,\n      children: [icon &&\n      /*#__PURE__*/\n      _jsx(ListItemIcon, {\n        children: icon\n      }), label]\n    }))\n  );\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCellItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  showInMenu: PropTypes.bool\n} : void 0;\nexport { GridActionsCellItem };","map":null,"metadata":{},"sourceType":"module"}