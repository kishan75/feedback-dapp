{"ast":null,"code":"var _a;\n\nimport { Stream } from '../../stream/Stream.js';\nimport { fromShrinkableToNextValue } from '../arbitrary/definition/ConverterToNext.js';\nconst identifier = '__ConverterToNextProperty__';\nexport class ConverterToNextProperty {\n  constructor(property) {\n    this.property = property;\n    this[_a] = true;\n  }\n\n  static isConverterToNext(property) {\n    return identifier in property;\n  }\n\n  isAsync() {\n    return this.property.isAsync();\n  }\n\n  generate(mrng, runId) {\n    const shrinkable = this.property.generate(mrng, runId);\n    return fromShrinkableToNextValue(shrinkable);\n  }\n\n  shrink(value) {\n    if (this.isSafeContext(value.context)) {\n      return value.context.shrink().map(fromShrinkableToNextValue);\n    }\n\n    return Stream.nil();\n  }\n\n  isSafeContext(context) {\n    return context != null && typeof context === 'object' && 'value' in context && 'shrink' in context;\n  }\n\n  run(v) {\n    return this.property.run(v);\n  }\n\n}\n_a = identifier;","map":null,"metadata":{},"sourceType":"module"}