{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\GenerateTickets\\\\generateTickets.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport GenerateTicketsFunctionBox from '../../FunctionBox/GenerateTicketsFunctionBox/generateTicketsFunctionBox';\nimport emailjs, { init } from '@emailjs/browser';\ninit(\"2pvfnImfRTGi6OSnk\");\n\nconst GenerateTickets = props => {\n  const _useState = useState({\n    name: '',\n    code: '',\n    year: '',\n    sem: '',\n    students: '',\n    emails: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        genTicketsDetails = _useState2[0],\n        setGenTicketsDetails = _useState2[1];\n\n  const _useState3 = useState({\n    name: '',\n    code: '',\n    year: '',\n    semester: '',\n    students: '',\n    emails: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genTicketsErrors = _useState4[0],\n        setGenTicketsErrors = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        courseDatas = _useState6[0],\n        setCourseDatas = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        courseNameOptions = _useState8[0],\n        setCourseNameOptions = _useState8[1];\n\n  const _useState9 = useState({\n    code: [],\n    year: [],\n    sem: [],\n    students: []\n  }),\n        _useState10 = _slicedToArray(_useState9, 2),\n        courseDataOptions = _useState10[0],\n        setCourseDataOptions = _useState10[1]; // React useEffect\n  // Get professor's course data from blockchain\n\n\n  useEffect(() => {\n    console.log(props.courses[props.emailMap[props.account]]);\n    const coursesObj = props.courses[props.emailMap[props.account]];\n    const courseDatas = [];\n\n    for (var year in coursesObj) if (coursesObj.hasOwnProperty(year)) for (var sem in coursesObj[year]) if (coursesObj[year].hasOwnProperty(sem)) for (var code in coursesObj[year][sem]) if (coursesObj[year][sem].hasOwnProperty(code)) courseDatas.push(coursesObj[year][sem][code]);\n\n    setCourseDatas(courseDatas);\n    let courseNameOptions = [];\n\n    for (var i = 0; i < courseDatas.length; i++) courseNameOptions.push(courseDatas[i].name);\n\n    setCourseNameOptions(courseNameOptions);\n  }, []); // Asyncs:\n\n  const writeTicketToBlockChain = async () => {\n    const feedbackData = props.contracts.feedbackData;\n\n    if (feedbackData != undefined) {\n      let result = await feedbackData.methods.generateTickets(props.emailMap[props.account], genTicketsDetails.year, genTicketsDetails.sem, genTicketsDetails.code, (Math.random() + 1).toString(36).substring(7)).send({\n        from: props.account\n      });\n      result = result.events.ticketGenerated.returnValues.tickets;\n      console.log(result);\n      return result;\n    } else {\n      props.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleCourseNameChanged = event => {\n    let updatedCourseCodeOptions = {\n      code: [],\n      year: [],\n      sem: [],\n      students: []\n    };\n    const semester = {\n      0: 'Even',\n      1: 'Odd'\n    };\n\n    for (var i = 0; i < courseDatas.length; i++) {\n      if (courseDatas[i].name == event.target.value) {\n        updatedCourseCodeOptions.code.push(courseDatas[i].code);\n        updatedCourseCodeOptions.year.push(courseDatas[i].year);\n        updatedCourseCodeOptions.sem.push(semester[courseDatas[i].semester]);\n        updatedCourseCodeOptions.students.push(courseDatas[i].studentCount);\n      }\n    }\n\n    setCourseDataOptions(updatedCourseCodeOptions);\n  };\n\n  const handleGenTicketsInputChange = event => {\n    setGenTicketsDetails(_objectSpread({}, genTicketsDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, genTicketsErrors);\n\n    updatedErrors = validateGenTicketsInput(event.target.name, event.target.value, updatedErrors);\n    setGenTicketsErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleGenTicketsSubmit = () => {\n    let updatedErrors = _objectSpread({}, genTicketsErrors);\n\n    for (var key in genTicketsDetails) if (genTicketsDetails.hasOwnProperty(key)) updatedErrors = validateGenTicketsInput(key, genTicketsDetails[key], updatedErrors);\n\n    setGenTicketsErrors(_objectSpread({}, updatedErrors));\n\n    const fastGenTicketsErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var key in fastGenTicketsErrors) if (fastGenTicketsErrors.hasOwnProperty(key)) if (fastGenTicketsErrors[key] != '') ready = false;\n\n    console.log('Ready:', ready); // All validation tests passed\n\n    console.log(genTicketsDetails);\n    console.log(fastGenTicketsErrors); // Send Email\n\n    const semester = {\n      0: 'Even',\n      1: 'Odd'\n    };\n\n    if (ready) {\n      writeTicketToBlockChain().then(res => {\n        console.log(res); // Send mail:\n        // for (var i = 0; i < res.length; i++) {\n        //   let templateParams = {\n        //     from: 'SYSTEM',\n        //     to: genTicketsDetails.emails[i],\n        //     subject: \"Registration Ticket\",\n        //     reply_to: \"feedback.dapp@gmail.com\",\n        //     course_name: genTicketsDetails.name,\n        //     course_code: genTicketsDetails.code,\n        //     course_year: genTicketsDetails.year,\n        //     course_sem: semester[genTicketsDetails.sem],\n        //     ticket: res[i]\n        //   }\n        //   emailjs.send('service_kqkqbxv', 'template_c496wv7', templateParams)\n        //     .then(function (response) {\n        //       props.onToastChange('TxN SUCCESS: Ticket generated and sent', 'success', true);\n        //       setTimeout(() => props.closeModal(), 3500);\n        //       console.log('Email success: ', response.status, response.text);\n        //     }, function (error) {\n        //       props.onToastChange('ERROR: While sending email', 'error', true);\n        //       console.log('Email fail: ', error);\n        //     })\n        // }\n      }).catch(e => {\n        ready = false;\n        console.log(e);\n        if (e.code == '4001') props.onToastChange('TxN WARN: Denied by user', 'warning', true);else props.onToastChange('TxN ERROR: Something went wrong', 'error', true);\n      });\n    }\n  };\n\n  const handleEmailFileUpload = e => {\n    switch (e.target.name) {\n      case 'emailsfile':\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        let emails = [];\n\n        reader.onload = function (e) {\n          let text = e.target.result;\n          text = text.split(/,| |\\n|\\r/);\n          console.log(text);\n\n          for (var i = 0; i < text.length; i++) if (text[i].endsWith('@itbhu.ac.in') || text[i].endsWith('@iitbhu.ac.in') && re.test(text[i])) emails.push(text[i]);\n\n          console.log(emails);\n          setGenTicketsDetails(_objectSpread({}, genTicketsDetails, {\n            emails: emails\n          }));\n        };\n\n        reader.readAsText(file);\n        break;\n\n      default:\n        console.error('Error while uploading file');\n        break;\n    }\n  }; // Validators\n\n\n  const validateGenTicketsInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'name':\n      case 'code':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (value.length > 50) updatedErrors[field] = 'Length should be smaller than 50';else updatedErrors[field] = '';\n        break;\n\n      case 'emails':\n        if (value.length == 0) updatedErrors[field] = 'Please upload a csv file with student emails';else if (value.length != genTicketsDetails.students) updatedErrors[field] = \"Number of uploaded emails(\".concat(value.length, \") should be equal to students(\").concat(genTicketsDetails.students, \")\");else updatedErrors[field] = '';\n        break;\n\n      case 'year':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Year should be numerical';else if (value.length != 4) updatedErrors[field] = 'Length should be exacty 4';else if (!(value > 2000)) updatedErrors[field] = 'Year should be greater than 2000';else updatedErrors[field] = '';\n        break;\n\n      case 'sem':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!(value == 1 || value == 0)) updatedErrors[field] = 'Can only be Even or Odd';else updatedErrors[field] = '';\n        break;\n\n      case 'students':\n        if (value.length == 0) updatedErrors[field] = 'Cannot be empty';else if (!/^\\d+$/.test(value)) updatedErrors[field] = 'Should be numerical';else updatedErrors[field] = '';\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }, React.createElement(GenerateTicketsFunctionBox, {\n    data: genTicketsDetails,\n    errors: genTicketsErrors,\n    mainOptions: courseNameOptions,\n    subOptions: courseDataOptions,\n    handleMainChange: handleCourseNameChanged,\n    handleInputChange: handleGenTicketsInputChange,\n    handleFileChange: handleEmailFileUpload,\n    handleSubmit: handleGenTicketsSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }));\n};\n\nexport default GenerateTickets;\nconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/components/Modals/GenerateTickets/generateTickets.js"],"names":["React","useState","useEffect","GenerateTicketsFunctionBox","emailjs","init","GenerateTickets","props","name","code","year","sem","students","emails","genTicketsDetails","setGenTicketsDetails","semester","genTicketsErrors","setGenTicketsErrors","courseDatas","setCourseDatas","courseNameOptions","setCourseNameOptions","courseDataOptions","setCourseDataOptions","console","log","courses","emailMap","account","coursesObj","hasOwnProperty","push","i","length","writeTicketToBlockChain","feedbackData","contracts","undefined","result","methods","generateTickets","Math","random","toString","substring","send","from","events","ticketGenerated","returnValues","tickets","onToastChange","handleCourseNameChanged","event","updatedCourseCodeOptions","target","value","studentCount","handleGenTicketsInputChange","updatedErrors","validateGenTicketsInput","handleGenTicketsSubmit","key","fastGenTicketsErrors","ready","then","res","catch","e","handleEmailFileUpload","file","files","reader","FileReader","onload","text","split","endsWith","re","test","readAsText","error","field"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GenerateTicketsFunctionBox from '../../FunctionBox/GenerateTicketsFunctionBox/generateTicketsFunctionBox';\r\n\r\nimport emailjs, { init } from '@emailjs/browser';\r\ninit(\"2pvfnImfRTGi6OSnk\");\r\n\r\nconst GenerateTickets = (props) => {\r\n  const [genTicketsDetails, setGenTicketsDetails] = useState({\r\n    name: '',\r\n    code: '',\r\n    year: '',\r\n    sem: '',\r\n    students: '',\r\n    emails: []\r\n  });\r\n\r\n  const [genTicketsErrors, setGenTicketsErrors] = useState({\r\n    name: '',\r\n    code: '',\r\n    year: '',\r\n    semester: '',\r\n    students: '',\r\n    emails: ''\r\n  })\r\n\r\n  const [courseDatas, setCourseDatas] = useState();\r\n  const [courseNameOptions, setCourseNameOptions] = useState([]);\r\n  const [courseDataOptions, setCourseDataOptions] = useState({\r\n    code: [],\r\n    year: [],\r\n    sem: [],\r\n    students: []\r\n  });\r\n\r\n  // React useEffect\r\n  // Get professor's course data from blockchain\r\n  useEffect(() => {\r\n    console.log(props.courses[props.emailMap[props.account]])\r\n    const coursesObj = props.courses[props.emailMap[props.account]]\r\n    const courseDatas = []\r\n    for (var year in coursesObj)\r\n      if (coursesObj.hasOwnProperty(year))\r\n        for (var sem in coursesObj[year])\r\n          if (coursesObj[year].hasOwnProperty(sem))\r\n            for (var code in coursesObj[year][sem])\r\n              if (coursesObj[year][sem].hasOwnProperty(code))\r\n                courseDatas.push(coursesObj[year][sem][code])\r\n\r\n    setCourseDatas(courseDatas);\r\n\r\n    let courseNameOptions = []\r\n    for (var i = 0; i < courseDatas.length; i++)\r\n      courseNameOptions.push(courseDatas[i].name);\r\n\r\n    setCourseNameOptions(courseNameOptions);\r\n  }, []);\r\n\r\n\r\n  // Asyncs:\r\n  const writeTicketToBlockChain = async () => {\r\n    const feedbackData = props.contracts.feedbackData;\r\n    if (feedbackData != undefined) {\r\n      let result = await feedbackData.methods.generateTickets(\r\n        props.emailMap[props.account],\r\n        genTicketsDetails.year,\r\n        genTicketsDetails.sem,\r\n        genTicketsDetails.code,\r\n        (Math.random() + 1).toString(36).substring(7),\r\n      ).send({ from: props.account });\r\n      result = result.events.ticketGenerated.returnValues.tickets;\r\n      console.log(result);\r\n      return result\r\n    } else {\r\n      props.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);\r\n      console.log('Feedback contract not deployed');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Handlers\r\n  const handleCourseNameChanged = (event) => {\r\n    let updatedCourseCodeOptions = {\r\n      code: [],\r\n      year: [],\r\n      sem: [],\r\n      students: []\r\n    }\r\n\r\n    const semester = { 0: 'Even', 1: 'Odd' };\r\n    for (var i = 0; i < courseDatas.length; i++) {\r\n      if (courseDatas[i].name == event.target.value) {\r\n        updatedCourseCodeOptions.code.push(courseDatas[i].code);\r\n        updatedCourseCodeOptions.year.push(courseDatas[i].year);\r\n        updatedCourseCodeOptions.sem.push(semester[courseDatas[i].semester]);\r\n        updatedCourseCodeOptions.students.push(courseDatas[i].studentCount);\r\n      }\r\n    }\r\n    setCourseDataOptions(updatedCourseCodeOptions);\r\n  }\r\n\r\n  const handleGenTicketsInputChange = (event) => {\r\n\r\n    setGenTicketsDetails({\r\n      ...genTicketsDetails,\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n    let updatedErrors = { ...genTicketsErrors };\r\n    updatedErrors = validateGenTicketsInput(event.target.name, event.target.value, updatedErrors);\r\n    setGenTicketsErrors({ ...updatedErrors });\r\n  };\r\n\r\n\r\n  const handleGenTicketsSubmit = () => {\r\n    let updatedErrors = { ...genTicketsErrors };\r\n\r\n    for (var key in genTicketsDetails)\r\n      if (genTicketsDetails.hasOwnProperty(key))\r\n        updatedErrors = validateGenTicketsInput(key, genTicketsDetails[key], updatedErrors);\r\n\r\n    setGenTicketsErrors({ ...updatedErrors });\r\n    const fastGenTicketsErrors = { ...updatedErrors };\r\n\r\n    let ready = true;\r\n    for (var key in fastGenTicketsErrors)\r\n      if (fastGenTicketsErrors.hasOwnProperty(key))\r\n        if (fastGenTicketsErrors[key] != '')\r\n          ready = false;\r\n\r\n    console.log('Ready:', ready);  // All validation tests passed\r\n    console.log(genTicketsDetails);\r\n    console.log(fastGenTicketsErrors);\r\n\r\n\r\n    // Send Email\r\n    const semester = { 0: 'Even', 1: 'Odd' };\r\n    if (ready) {\r\n      writeTicketToBlockChain()\r\n        .then(res => {\r\n          console.log(res);\r\n\r\n          // Send mail:\r\n          // for (var i = 0; i < res.length; i++) {\r\n          //   let templateParams = {\r\n          //     from: 'SYSTEM',\r\n          //     to: genTicketsDetails.emails[i],\r\n          //     subject: \"Registration Ticket\",\r\n          //     reply_to: \"feedback.dapp@gmail.com\",\r\n          //     course_name: genTicketsDetails.name,\r\n          //     course_code: genTicketsDetails.code,\r\n          //     course_year: genTicketsDetails.year,\r\n          //     course_sem: semester[genTicketsDetails.sem],\r\n          //     ticket: res[i]\r\n          //   }\r\n\r\n          //   emailjs.send('service_kqkqbxv', 'template_c496wv7', templateParams)\r\n          //     .then(function (response) {\r\n          //       props.onToastChange('TxN SUCCESS: Ticket generated and sent', 'success', true);\r\n          //       setTimeout(() => props.closeModal(), 3500);\r\n          //       console.log('Email success: ', response.status, response.text);\r\n          //     }, function (error) {\r\n          //       props.onToastChange('ERROR: While sending email', 'error', true);\r\n          //       console.log('Email fail: ', error);\r\n          //     })\r\n          // }\r\n        }).catch(e => {\r\n          ready = false;\r\n          console.log(e);\r\n          if (e.code == '4001')\r\n            props.onToastChange('TxN WARN: Denied by user', 'warning', true);\r\n          else\r\n            props.onToastChange('TxN ERROR: Something went wrong', 'error', true);\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n  const handleEmailFileUpload = (e) => {\r\n    switch (e.target.name) {\r\n      case 'emailsfile':\r\n        const file = e.target.files[0];\r\n        const reader = new FileReader();\r\n        let emails = []\r\n        reader.onload = function (e) {\r\n          let text = e.target.result;\r\n          text = text.split(/,| |\\n|\\r/);\r\n          console.log(text);\r\n\r\n          for (var i = 0; i < text.length; i++)\r\n            if (text[i].endsWith('@itbhu.ac.in') || text[i].endsWith('@iitbhu.ac.in') && re.test(text[i]))\r\n              emails.push(text[i]);\r\n\r\n          console.log(emails);\r\n          setGenTicketsDetails({ ...genTicketsDetails, emails: emails });\r\n        }\r\n\r\n        reader.readAsText(file);\r\n\r\n        break;\r\n      default:\r\n        console.error('Error while uploading file'); break;\r\n    }\r\n  }\r\n\r\n  // Validators\r\n  const validateGenTicketsInput = (field, value, updatedErrors) => {\r\n    switch (field) {\r\n      case 'name':\r\n      case 'code':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Cannot be empty';\r\n        else if (value.length > 50)\r\n          updatedErrors[field] = 'Length should be smaller than 50';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n      case 'emails':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Please upload a csv file with student emails';\r\n        else if (value.length != genTicketsDetails.students)\r\n          updatedErrors[field] = `Number of uploaded emails(${value.length}) should be equal to students(${genTicketsDetails.students})`;\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n      case 'year':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Cannot be empty';\r\n        else if (!/^\\d+$/.test(value))\r\n          updatedErrors[field] = 'Year should be numerical';\r\n        else if (value.length != 4)\r\n          updatedErrors[field] = 'Length should be exacty 4';\r\n        else if (!(value > 2000))\r\n          updatedErrors[field] = 'Year should be greater than 2000';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n      case 'sem':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Cannot be empty';\r\n        else if (!(value == 1 || value == 0))\r\n          updatedErrors[field] = 'Can only be Even or Odd';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n      case 'students':\r\n        if (value.length == 0)\r\n          updatedErrors[field] = 'Cannot be empty';\r\n        else if (!/^\\d+$/.test(value))\r\n          updatedErrors[field] = 'Should be numerical';\r\n        else\r\n          updatedErrors[field] = ''\r\n        break;\r\n\r\n    }\r\n    return updatedErrors;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='cards'>\r\n      <GenerateTicketsFunctionBox\r\n        data={genTicketsDetails}\r\n        errors={genTicketsErrors}\r\n        mainOptions={courseNameOptions}\r\n        subOptions={courseDataOptions}\r\n        handleMainChange={handleCourseNameChanged}\r\n        handleInputChange={handleGenTicketsInputChange}\r\n        handleFileChange={handleEmailFileUpload}\r\n        handleSubmit={handleGenTicketsSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenerateTickets;\r\n\r\n\r\n\r\nconst re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;"]},"metadata":{},"sourceType":"module"}