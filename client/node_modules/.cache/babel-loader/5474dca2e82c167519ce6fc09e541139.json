{"ast":null,"code":"import { PreconditionFailure } from '../precondition/PreconditionFailure.js';\nexport class SkipAfterProperty {\n  constructor(property, getTime, timeLimit, interruptExecution) {\n    this.property = property;\n    this.getTime = getTime;\n    this.interruptExecution = interruptExecution;\n    this.skipAfterTime = this.getTime() + timeLimit;\n  }\n\n  isAsync() {\n    return this.property.isAsync();\n  }\n\n  generate(mrng, runId) {\n    return this.property.generate(mrng, runId);\n  }\n\n  shrink(value) {\n    return this.property.shrink(value);\n  }\n\n  run(v) {\n    if (this.getTime() >= this.skipAfterTime) {\n      const preconditionFailure = new PreconditionFailure(this.interruptExecution);\n\n      if (this.isAsync()) {\n        return Promise.resolve(preconditionFailure);\n      } else {\n        return preconditionFailure;\n      }\n    }\n\n    return this.property.run(v);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}