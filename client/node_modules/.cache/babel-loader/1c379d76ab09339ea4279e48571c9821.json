{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp\\\\client\\\\src\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { getBalance, loadContracts, loadCourses, loadEmails, loadFeedbacks, loadProfsByEmail, loadSkills, loadSkillsCount, setupMetamask } from \"./scripts/loader\"; // Pages\n\nimport HomePage from \"./pages/HomePage/homePage\";\nimport \"./App.css\";\nimport { Loader } from \"./components/utils/Loader\";\n\nrequire('dotenv').config();\n\nconst App = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        profEmails = _useState2[0],\n        setProfEmails = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        addressToEmail = _useState4[0],\n        setAddressToEmail = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        profsDetails = _useState6[0],\n        setProfsDetails = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        skillCount = _useState8[0],\n        setSkillCount = _useState8[1];\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        courses = _useState10[0],\n        setCourses = _useState10[1];\n\n  const _useState11 = useState(null),\n        _useState12 = _slicedToArray(_useState11, 2),\n        account = _useState12[0],\n        setAccount = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        balance = _useState14[0],\n        setBalance = _useState14[1];\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        showLoader = _useState16[0],\n        setLoader = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        contracts = _useState18[0],\n        setContracts = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        skills = _useState20[0],\n        setSkills = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        isProf = _useState22[0],\n        setIsProf = _useState22[1]; // React useEffects\n\n\n  useEffect(() => {\n    (async () => {\n      const account = await setupMetamask();\n      setAccount(account);\n      const contracts = await loadContracts();\n      setContracts(contracts);\n    })();\n  }, []);\n  useEffect(() => {\n    if (contracts) {\n      (async () => {\n        const skills = await loadSkills(contracts);\n        setSkills(skills);\n        const balance = await getBalance(contracts, account);\n        setBalance(balance);\n        const profEmails = await loadEmails(contracts);\n        setProfEmails(profEmails);\n\n        const _ref = await loadProfsByEmail(contracts, profEmails),\n              profsDetails = _ref.profsDetails,\n              addressToEmail = _ref.addressToEmail;\n\n        setProfsDetails(profsDetails);\n        setAddressToEmail(addressToEmail);\n        setIsProf(addressToEmail[account] !== undefined);\n        const courses = await loadCourses(contracts, profEmails);\n        setCourses(courses);\n\n        const _ref2 = await loadFeedbacks(contracts, profEmails, courses),\n              feedbacks = _ref2.feedbacks,\n              updatedCourses = _ref2.updatedCourses;\n\n        setCourses(updatedCourses);\n\n        const _ref3 = await loadSkillsCount(contracts, profEmails, profsDetails),\n              skillsUpvote = _ref3.skillsUpvote,\n              updatedProfsDetail = _ref3.updatedProfsDetail;\n\n        setSkillCount(skillsUpvote);\n        setProfsDetails(updatedProfsDetail);\n        contracts.feedbackData.events.professorCreated((err, data) => professorCreated(err, data));\n        contracts.feedbackData.events.courseUpdated((err, data) => addCourse(err, data));\n        contracts.feedbackData.events.feedbackSubmitted((err, data) => feedbackSubmitted(err, data));\n        contracts.feedbackData.events.ticketGenerated((err, data) => ticketGenerated(err, data));\n        contracts.feedbackData.events.skillsUpvoted((err, data) => skillsUpvoted(err, data));\n        contracts.feedbackData.events.ratingUpdated((err, data) => ratingUpdated(err, data));\n        contracts.feedbackData.events.balanceUpdated((err, data) => balanceUpdated(err, data));\n        setLoader(false);\n      })();\n    }\n  }, [contracts]);\n\n  const balanceUpdated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    if (account == data[\"returnValues\"].account) setBalance(data[\"returnValues\"].balance);\n  };\n\n  const ratingUpdated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues = data[\"returnValues\"],\n          email = _data$returnValues.email,\n          rating = _data$returnValues.rating;\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        rating\n      })\n    }));\n  };\n\n  const skillsUpvoted = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues2 = data[\"returnValues\"],\n          email = _data$returnValues2.email,\n          skills = _data$returnValues2.skills;\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        skillsUpvote: skills\n      })\n    }));\n  };\n\n  const professorCreated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const professor = data[\"returnValues\"].professor;\n    const name = professor.name,\n          email = professor.email,\n          profilePicture = professor.profilePicture,\n          addressId = professor.addressId,\n          rating = professor.rating;\n    addressId = addressId.toLowerCase();\n    setProfsDetails(prev => _objectSpread({}, prev, {\n      [email]: {\n        name,\n        email,\n        profilePicture,\n        addressId,\n        rating,\n        skillsUpvote: []\n      }\n    }));\n    setProfEmails([...profEmails, email]);\n    setAddressToEmail(prev => _objectSpread({}, prev, {\n      [addressId]: email\n    }));\n  };\n\n  const ticketGenerated = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues3 = data[\"returnValues\"],\n          email = _data$returnValues3.email,\n          year = _data$returnValues3.year,\n          sem = _data$returnValues3.sem,\n          code = _data$returnValues3.code;\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: {\n        [year]: _objectSpread({}, prev[email][year], {\n          [sem]: _objectSpread({}, prev[email][year][sem], {\n            [code]: {\n              ticketGenerated: true\n            }\n          })\n        })\n      }\n    }));\n  };\n\n  const feedbackSubmitted = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues4 = data[\"returnValues\"],\n          email = _data$returnValues4.email,\n          feedback = _data$returnValues4.feedback;\n    const code = feedback.code,\n          semester = feedback.semester,\n          year = feedback.year,\n          content = feedback.content,\n          skills = feedback.skills;\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: {\n        [year]: _objectSpread({}, prev[email][year], {\n          [semester]: _objectSpread({}, prev[email][year][semester], {\n            [code]: {\n              feedback: [...prev[email][year][semester].feedback, {\n                code,\n                semester,\n                year,\n                content,\n                skills\n              }]\n            }\n          })\n        })\n      }\n    }));\n  };\n\n  const addCourse = (err, data) => {\n    if (err) alert(\"something is wrong\");\n    const _data$returnValues5 = data[\"returnValues\"],\n          email = _data$returnValues5.email,\n          year = _data$returnValues5.year,\n          course = _data$returnValues5.course;\n    const name = course.name,\n          code = course.code,\n          semester = course.semester,\n          studentCount = course.studentCount,\n          ticketGenerated = course.ticketGenerated;\n    if (courses[email] == undefined) setCourses(prev => _objectSpread({}, prev, {\n      [email]: {}\n    }));\n    if (courses[email][year] == undefined) setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: {}\n      })\n    }));\n    if (courses[email][year][semester] == undefined) setCourses(prev => _objectSpread({}, prev, {\n      [email]: _objectSpread({}, prev[email], {\n        [year]: _objectSpread({}, prev[email][year], {\n          [semester]: {}\n        })\n      })\n    }));\n    setCourses(prev => _objectSpread({}, prev, {\n      [email]: {\n        [year]: _objectSpread({}, prev[email][year], {\n          [semester]: _objectSpread({}, prev[email][year][semester], {\n            [code]: {\n              name,\n              email,\n              code,\n              semester,\n              year,\n              studentCount,\n              ticketGenerated,\n              feedbacks: []\n            }\n          })\n        })\n      }\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    show: showLoader,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }), React.createElement(Routes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    element: React.createElement(HomePage, {\n      contracts: contracts,\n      profsDetails: profsDetails,\n      account: account,\n      emailMap: addressToEmail,\n      courses: courses,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp/client/src/App.js"],"names":["React","useState","useEffect","Routes","Route","getBalance","loadContracts","loadCourses","loadEmails","loadFeedbacks","loadProfsByEmail","loadSkills","loadSkillsCount","setupMetamask","HomePage","Loader","require","config","App","profEmails","setProfEmails","addressToEmail","setAddressToEmail","profsDetails","setProfsDetails","skillCount","setSkillCount","courses","setCourses","account","setAccount","balance","setBalance","showLoader","setLoader","contracts","setContracts","skills","setSkills","isProf","setIsProf","undefined","feedbacks","updatedCourses","skillsUpvote","updatedProfsDetail","feedbackData","events","professorCreated","err","data","courseUpdated","addCourse","feedbackSubmitted","ticketGenerated","skillsUpvoted","ratingUpdated","balanceUpdated","alert","email","rating","prev","professor","name","profilePicture","addressId","toLowerCase","year","sem","code","feedback","semester","content","course","studentCount"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport {\r\n  getBalance,\r\n  loadContracts,\r\n  loadCourses,\r\n  loadEmails,\r\n  loadFeedbacks,\r\n  loadProfsByEmail,\r\n  loadSkills,\r\n  loadSkillsCount,\r\n  setupMetamask,\r\n} from \"./scripts/loader\";\r\n\r\n// Pages\r\nimport HomePage from \"./pages/HomePage/homePage\";\r\n\r\nimport \"./App.css\";\r\nimport { Loader } from \"./components/utils/Loader\";\r\n\r\nrequire('dotenv').config()\r\n\r\nconst App = () => {\r\n  const [profEmails, setProfEmails] = useState(null);\r\n  const [addressToEmail, setAddressToEmail] = useState(null);\r\n\r\n  const [profsDetails, setProfsDetails] = useState(null);\r\n  const [skillCount, setSkillCount] = useState(null);\r\n  const [courses, setCourses] = useState(null);\r\n\r\n  const [account, setAccount] = useState(null);\r\n  const [balance, setBalance] = useState(null);\r\n  const [showLoader, setLoader] = useState(true);\r\n  const [contracts, setContracts] = useState(null);\r\n\r\n  const [skills, setSkills] = useState(null);\r\n  const [isProf, setIsProf] = useState(false);\r\n\r\n  // React useEffects\r\n  useEffect(() => {\r\n    (async () => {\r\n      const account = await setupMetamask();\r\n      setAccount(account);\r\n\r\n      const contracts = await loadContracts();\r\n      setContracts(contracts);\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (contracts) {\r\n      (async () => {\r\n        const skills = await loadSkills(contracts);\r\n        setSkills(skills);\r\n\r\n        const balance = await getBalance(contracts, account);\r\n        setBalance(balance);\r\n\r\n        const profEmails = await loadEmails(contracts);\r\n        setProfEmails(profEmails);\r\n\r\n        const { profsDetails, addressToEmail } = await loadProfsByEmail(\r\n          contracts,\r\n          profEmails\r\n        );\r\n        setProfsDetails(profsDetails);\r\n        setAddressToEmail(addressToEmail);\r\n        setIsProf(addressToEmail[account] !== undefined);\r\n\r\n        const courses = await loadCourses(contracts, profEmails);\r\n        setCourses(courses);\r\n\r\n        const { feedbacks, updatedCourses } = await loadFeedbacks(\r\n          contracts,\r\n          profEmails,\r\n          courses\r\n        );\r\n        setCourses(updatedCourses);\r\n\r\n        const { skillsUpvote, updatedProfsDetail } = await loadSkillsCount(\r\n          contracts,\r\n          profEmails,\r\n          profsDetails\r\n        );\r\n        setSkillCount(skillsUpvote);\r\n        setProfsDetails(updatedProfsDetail);\r\n\r\n        contracts.feedbackData.events.professorCreated((err, data) =>\r\n          professorCreated(err, data)\r\n        );\r\n        contracts.feedbackData.events.courseUpdated((err, data) =>\r\n          addCourse(err, data)\r\n        );\r\n        contracts.feedbackData.events.feedbackSubmitted((err, data) =>\r\n          feedbackSubmitted(err, data)\r\n        );\r\n        contracts.feedbackData.events.ticketGenerated((err, data) =>\r\n          ticketGenerated(err, data)\r\n        );\r\n        contracts.feedbackData.events.skillsUpvoted((err, data) =>\r\n          skillsUpvoted(err, data)\r\n        );\r\n        contracts.feedbackData.events.ratingUpdated((err, data) =>\r\n          ratingUpdated(err, data)\r\n        );\r\n        contracts.feedbackData.events.balanceUpdated((err, data) =>\r\n          balanceUpdated(err, data)\r\n        );\r\n\r\n        setLoader(false);\r\n      })();\r\n    }\r\n  }, [contracts]);\r\n\r\n  const balanceUpdated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n\r\n    if (account == data[\"returnValues\"].account)\r\n      setBalance(data[\"returnValues\"].balance);\r\n  };\r\n\r\n  const ratingUpdated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, rating } = data[\"returnValues\"];\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: { ...prev[email], rating },\r\n    }));\r\n  };\r\n\r\n  const skillsUpvoted = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, skills } = data[\"returnValues\"];\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: { ...prev[email], skillsUpvote: skills },\r\n    }));\r\n  };\r\n\r\n  const professorCreated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { professor } = data[\"returnValues\"];\r\n    const { name, email, profilePicture, addressId, rating } = professor;\r\n    addressId = addressId.toLowerCase();\r\n\r\n    setProfsDetails((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        name,\r\n        email,\r\n        profilePicture,\r\n        addressId,\r\n        rating,\r\n        skillsUpvote: [],\r\n      },\r\n    }));\r\n\r\n    setProfEmails([...profEmails, email]);\r\n    setAddressToEmail((prev) => ({\r\n      ...prev,\r\n      [addressId]: email,\r\n    }));\r\n  };\r\n\r\n  const ticketGenerated = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, year, sem, code } = data[\"returnValues\"];\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [sem]: {\r\n            ...prev[email][year][sem],\r\n            [code]: {\r\n              ticketGenerated: true,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const feedbackSubmitted = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, feedback } = data[\"returnValues\"];\r\n    const { code, semester, year, content, skills } = feedback;\r\n\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [semester]: {\r\n            ...prev[email][year][semester],\r\n            [code]: {\r\n              feedback: [\r\n                ...prev[email][year][semester].feedback,\r\n                {\r\n                  code,\r\n                  semester,\r\n                  year,\r\n                  content,\r\n                  skills,\r\n                },\r\n              ],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  const addCourse = (err, data) => {\r\n    if (err) alert(\"something is wrong\");\r\n    const { email, year, course } = data[\"returnValues\"];\r\n    const { name, code, semester, studentCount, ticketGenerated } = course;\r\n\r\n    if (courses[email] == undefined)\r\n      setCourses((prev) => ({\r\n        ...prev,\r\n        [email]: {},\r\n      }));\r\n\r\n    if (courses[email][year] == undefined)\r\n      setCourses((prev) => ({\r\n        ...prev,\r\n        [email]: {\r\n          ...prev[email],\r\n          [year]: {},\r\n        },\r\n      }));\r\n\r\n    if (courses[email][year][semester] == undefined)\r\n      setCourses((prev) => ({\r\n        ...prev,\r\n        [email]: {\r\n          ...prev[email],\r\n          [year]: {\r\n            ...prev[email][year],\r\n            [semester]: {},\r\n          },\r\n        },\r\n      }));\r\n\r\n    setCourses((prev) => ({\r\n      ...prev,\r\n      [email]: {\r\n        [year]: {\r\n          ...prev[email][year],\r\n          [semester]: {\r\n            ...prev[email][year][semester],\r\n            [code]: {\r\n              name,\r\n              email,\r\n              code,\r\n              semester,\r\n              year,\r\n              studentCount,\r\n              ticketGenerated,\r\n              feedbacks: [],\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Loader show={showLoader}></Loader>\r\n      <Routes>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          element={\r\n            <HomePage\r\n              contracts={contracts}\r\n              profsDetails={profsDetails}\r\n              account={account}\r\n              emailMap={addressToEmail}\r\n              courses={courses}\r\n            />\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}