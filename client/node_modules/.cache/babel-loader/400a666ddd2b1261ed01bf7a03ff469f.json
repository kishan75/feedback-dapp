{"ast":null,"code":"export class ScheduledCommand {\n  constructor(s, cmd) {\n    this.s = s;\n    this.cmd = cmd;\n  }\n\n  async check(m) {\n    let error = null;\n    let checkPassed = false;\n    const status = await this.s.scheduleSequence([{\n      label: \"check@\".concat(this.cmd.toString()),\n      builder: async () => {\n        try {\n          checkPassed = await Promise.resolve(this.cmd.check(m));\n        } catch (err) {\n          error = err;\n          throw err;\n        }\n      }\n    }]).task;\n\n    if (status.faulty) {\n      throw error;\n    }\n\n    return checkPassed;\n  }\n\n  async run(m, r) {\n    let error = null;\n    const status = await this.s.scheduleSequence([{\n      label: \"run@\".concat(this.cmd.toString()),\n      builder: async () => {\n        try {\n          await this.cmd.run(m, r);\n        } catch (err) {\n          error = err;\n          throw err;\n        }\n      }\n    }]).task;\n\n    if (status.faulty) {\n      throw error;\n    }\n  }\n\n}\nexport const scheduleCommands = function* (s, cmds) {\n  for (const cmd of cmds) {\n    yield new ScheduledCommand(s, cmd);\n  }\n};","map":null,"metadata":{},"sourceType":"module"}