{"ast":null,"code":"import _defineProperty from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp-full\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp-full\\\\feedback-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BlockChain\\\\Projects\\\\feedback-dapp-full\\\\feedback-dapp\\\\client\\\\src\\\\components\\\\Modals\\\\Admin\\\\admin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport AdminFunctionBox from '../../FunctionBox/AdminFuctionBox/adminFunctionBox';\nimport emailjs, { init } from '@emailjs/browser';\ninit(\"2pvfnImfRTGi6OSnk\");\n\nconst Admin = props => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        genProfTicketDetails = _useState2[0],\n        setGenProfTicketDetails = _useState2[1];\n\n  const _useState3 = useState({\n    email: '',\n    password: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genProfTicketErrors = _useState4[0],\n        setGenProfTicketErrors = _useState4[1];\n\n  const _useState5 = useState({\n    old: '',\n    new: '',\n    confirm: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        changePasswordDetails = _useState6[0],\n        setChangePasswordDetails = _useState6[1];\n\n  const _useState7 = useState({\n    old: '',\n    new: '',\n    confirm: ''\n  }),\n        _useState8 = _slicedToArray(_useState7, 2),\n        changePasswordErrors = _useState8[0],\n        setChangePassworErrors = _useState8[1]; // Asyncs:\n\n\n  const writeTicketToBlockChain = async () => {\n    const feedbackData = props.contracts.feedbackData;\n\n    if (feedbackData !== undefined) {\n      let result = await feedbackData.methods.generateTokenForProfReg(genProfTicketDetails.password).send({\n        from: props.account\n      });\n      result = result.events.tokenGenerated.returnValues[0];\n      console.log(result);\n      return result;\n    } else {\n      props.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);\n      console.log('Feedback contract not deployed');\n    }\n  };\n\n  const writePasswordToBlockChain = async () => {\n    const feedbackData = props.contracts.feedbackData;\n\n    if (feedbackData !== undefined) {\n      let result = await feedbackData.methods.updatePassword(changePasswordDetails.old, changePasswordDetails.new).send({\n        from: props.account\n      });\n      result = result.events.tokenGenerated.returnValues[0];\n      console.log(result);\n      return true;\n    } else {\n      props.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);\n      console.log('Feedback contract not deployed');\n    }\n  }; // Handlers\n\n\n  const handleGenProfTicketInputChange = event => {\n    setGenProfTicketDetails(_objectSpread({}, genProfTicketDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, genProfTicketErrors);\n\n    updatedErrors = validateGenProfTicketInput(event.target.name, event.target.value, updatedErrors);\n    setGenProfTicketErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleChangePasswordInputChange = event => {\n    setChangePasswordDetails(_objectSpread({}, changePasswordDetails, {\n      [event.target.name]: event.target.value\n    }));\n\n    let updatedErrors = _objectSpread({}, changePasswordErrors);\n\n    updatedErrors = validateChnagePasswordInput(event.target.name, event.target.value, updatedErrors);\n    setChangePassworErrors(_objectSpread({}, updatedErrors));\n  };\n\n  const handleGenProfTicketSubmit = () => {\n    props.onLoading(true);\n\n    let updatedErrors = _objectSpread({}, genProfTicketErrors);\n\n    for (var key in genProfTicketDetails) if (genProfTicketDetails.hasOwnProperty(key)) updatedErrors = validateGenProfTicketInput(key, genProfTicketDetails[key], updatedErrors);\n\n    setGenProfTicketErrors(_objectSpread({}, updatedErrors));\n\n    const fastgenProfTicketErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var fkey in fastgenProfTicketErrors) {\n      if (fastgenProfTicketErrors.hasOwnProperty(fkey)) if (fastgenProfTicketErrors[fkey] !== '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(genProfTicketDetails);\n\n    if (ready) {\n      writeTicketToBlockChain().then(r => {\n        console.log(r); // Send mail [Uncomment below when deploying]\n\n        let templateParams = {\n          from: 'SYSTEM',\n          to: genProfTicketDetails.email,\n          subject: \"Registration Ticket\",\n          reply_to: \"feedback.dapp@gmail.com\",\n          html: \"<b>Respected sir</b>, <br><br>\" + \"Please use this unique ticket: [ <b>\" + r + \"</b> ] to get registered. Please do not share this with anyone. <br><br>\" + \"Best wishes,<br>\" + \"Feedback-DApp team\"\n        };\n        emailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams).then(function (response) {\n          props.onToastChange('TxN SUCCESS: Ticket generated and sent', 'success', true);\n          setTimeout(() => props.closeModal(), 3500);\n          console.log('Email success: ', response.status, response.text);\n        }, function (error) {\n          props.onToastChange('ERROR: While sending email', 'error', true);\n          console.log('Email fail: ', error);\n        });\n      }).catch(e => {\n        ready = false;\n        console.log(e);\n        if (e.code === '4001') props.onToastChange('TxN WARN: Denied by user', 'warning', true);else if (e.code === '-32603') props.onToastChange('TxN ERROR: Invalid password', 'error', true);else props.onToastChange('TxN ERROR: Something went wrong', 'error', true);\n      }).finally(() => props.onLoading(false));\n    }\n  };\n\n  const handlePasswordSubmit = () => {\n    props.onLoading(true);\n\n    let updatedErrors = _objectSpread({}, changePasswordErrors);\n\n    for (var key in changePasswordDetails) if (changePasswordDetails.hasOwnProperty(key)) updatedErrors = validateChnagePasswordInput(key, changePasswordDetails[key], updatedErrors);\n\n    setChangePassworErrors(_objectSpread({}, updatedErrors));\n\n    const fastChangePassworErrors = _objectSpread({}, updatedErrors);\n\n    let ready = true;\n\n    for (var fkey in fastChangePassworErrors) {\n      if (fastChangePassworErrors.hasOwnProperty(fkey)) if (fastChangePassworErrors[fkey] !== '') ready = false;\n    }\n\n    console.log('Ready:', ready);\n    console.log(changePasswordDetails);\n\n    if (ready) {\n      writePasswordToBlockChain().then(r => {\n        console.log('Password changed: ', r);\n        props.onToastChange('TxN SUCCESS: Password changed', 'success', true);\n        setTimeout(() => props.closeModal(), 3500);\n      }).catch(e => {\n        console.log(e);\n        if (e.code === '4001') props.onToastChange('TxN WARN: Denied by user', 'warning', true);else if (props.contracts.feedbackData == null) props.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);else if (e.code === '-32603') props.onToastChange('TxN ERROR: Old password is invalid', 'error', true);else props.onToastChange('TxN ERROR: Something went wrong', 'erroor', true);\n      }).finally(() => props.onLoading(false));\n    }\n  }; // Validators\n\n\n  const validateGenProfTicketInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'password':\n        if (value.length === 0) updatedErrors[field] = 'Cannot be empty';else updatedErrors[field] = '';\n        break;\n\n      case 'email':\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        if (value.length === 0) updatedErrors[field] = 'Cannot be empty';else if (!re.test(value)) updatedErrors[field] = 'Invalid email!';else if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in'))) updatedErrors[field] = 'Accepted domains are @itbhu.ac.in or @iitbhu.ac.in';else updatedErrors[field] = '';\n        break;\n\n      default:\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  const validateChnagePasswordInput = (field, value, updatedErrors) => {\n    switch (field) {\n      case 'old':\n        if (value.length === 0) updatedErrors[field] = 'Cannot be empty';else updatedErrors[field] = '';\n        break;\n\n      case 'new':\n        if (value.length === 0) updatedErrors[field] = 'Cannot be empty';else if (value.length < 5) updatedErrors[field] = 'Minimum length: 5';else if (value.length > 30) updatedErrors[field] = 'Maximum length: 30';else if (/[a-zA-Z]/g.test(value) === false) updatedErrors[field] = 'Should contain at least one alphabet';else if (/\\d/.test(value) === false) updatedErrors[field] = 'Should contain at least one digit';else updatedErrors[field] = '';\n        break;\n\n      case 'confirm':\n        if (value !== changePasswordDetails.new) updatedErrors[field] = 'Should match the new password';else updatedErrors[field] = '';\n        break;\n\n      default:\n        break;\n    }\n\n    return updatedErrors;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251\n    },\n    __self: this\n  }, React.createElement(AdminFunctionBox, {\n    data: _objectSpread({}, genProfTicketDetails, {}, changePasswordDetails),\n    errors: _objectSpread({}, genProfTicketErrors, {}, changePasswordErrors),\n    handleInputChange: handleGenProfTicketInputChange,\n    handleSubmit: handleGenProfTicketSubmit,\n    handlePasswordInputChange: handleChangePasswordInputChange,\n    handlePasswordSubmit: handlePasswordSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }));\n};\n\nexport default Admin;","map":{"version":3,"sources":["F:/BlockChain/Projects/feedback-dapp-full/feedback-dapp/client/src/components/Modals/Admin/admin.js"],"names":["React","useState","AdminFunctionBox","emailjs","init","Admin","props","email","password","genProfTicketDetails","setGenProfTicketDetails","genProfTicketErrors","setGenProfTicketErrors","old","new","confirm","changePasswordDetails","setChangePasswordDetails","changePasswordErrors","setChangePassworErrors","writeTicketToBlockChain","feedbackData","contracts","undefined","result","methods","generateTokenForProfReg","send","from","account","events","tokenGenerated","returnValues","console","log","onToastChange","writePasswordToBlockChain","updatePassword","handleGenProfTicketInputChange","event","target","name","value","updatedErrors","validateGenProfTicketInput","handleChangePasswordInputChange","validateChnagePasswordInput","handleGenProfTicketSubmit","onLoading","key","hasOwnProperty","fastgenProfTicketErrors","ready","fkey","then","r","templateParams","to","subject","reply_to","html","response","setTimeout","closeModal","status","text","error","catch","e","code","finally","handlePasswordSubmit","fastChangePassworErrors","field","length","re","test","endsWith"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport AdminFunctionBox from '../../FunctionBox/AdminFuctionBox/adminFunctionBox';\r\n\r\nimport emailjs, { init } from '@emailjs/browser';\r\ninit(\"2pvfnImfRTGi6OSnk\");\r\n\r\nconst Admin = (props) => {\r\n\tconst [genProfTicketDetails, setGenProfTicketDetails] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\r\n\tconst [genProfTicketErrors, setGenProfTicketErrors] = useState({\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n\t});\r\n\r\n\tconst [changePasswordDetails, setChangePasswordDetails] = useState({\r\n\t\told: '',\r\n\t\tnew: '',\r\n\t\tconfirm: ''\r\n\t});\r\n\r\n\tconst [changePasswordErrors, setChangePassworErrors] = useState({\r\n\t\told: '',\r\n\t\tnew: '',\r\n\t\tconfirm: ''\r\n\t});\r\n\r\n\t// Asyncs:\r\n\tconst writeTicketToBlockChain = async () => {\r\n\t\tconst feedbackData = props.contracts.feedbackData;\r\n\t\tif (feedbackData !== undefined) {\r\n\t\t\tlet result = await feedbackData.methods.generateTokenForProfReg(genProfTicketDetails.password).send({ from: props.account });\r\n\t\t\tresult = result.events.tokenGenerated.returnValues[0];\r\n\t\t\tconsole.log(result);\r\n\t\t\treturn result\r\n\t\t} else {\r\n\t\t\tprops.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);\r\n\t\t\tconsole.log('Feedback contract not deployed');\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst writePasswordToBlockChain = async () => {\r\n\t\tconst feedbackData = props.contracts.feedbackData;\r\n\t\tif (feedbackData !== undefined) {\r\n\t\t\tlet result = await feedbackData.methods.updatePassword(changePasswordDetails.old, changePasswordDetails.new).send({ from: props.account });\r\n\t\t\tresult = result.events.tokenGenerated.returnValues[0];\r\n\t\t\tconsole.log(result);\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tprops.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);\r\n\t\t\tconsole.log('Feedback contract not deployed');\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// Handlers\r\n\tconst handleGenProfTicketInputChange = (event) => {\r\n\t\tsetGenProfTicketDetails({\r\n\t\t\t...genProfTicketDetails,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\r\n\t\tlet updatedErrors = { ...genProfTicketErrors };\r\n\t\tupdatedErrors = validateGenProfTicketInput(event.target.name, event.target.value, updatedErrors);\r\n\t\tsetGenProfTicketErrors({ ...updatedErrors });\r\n\t};\r\n\r\n\r\n\tconst handleChangePasswordInputChange = (event) => {\r\n\t\tsetChangePasswordDetails({\r\n\t\t\t...changePasswordDetails,\r\n\t\t\t[event.target.name]: event.target.value\r\n\t\t});\r\n\r\n\t\tlet updatedErrors = { ...changePasswordErrors };\r\n\t\tupdatedErrors = validateChnagePasswordInput(event.target.name, event.target.value, updatedErrors);\r\n\t\tsetChangePassworErrors({ ...updatedErrors });\r\n\t};\r\n\r\n\tconst handleGenProfTicketSubmit = () => {\r\n\t\tprops.onLoading(true)\r\n\t\tlet updatedErrors = { ...genProfTicketErrors };\r\n\r\n\t\tfor (var key in genProfTicketDetails)\r\n\t\t\tif (genProfTicketDetails.hasOwnProperty(key))\r\n\t\t\t\tupdatedErrors = validateGenProfTicketInput(key, genProfTicketDetails[key], updatedErrors);\r\n\r\n\t\tsetGenProfTicketErrors({ ...updatedErrors });\r\n\t\tconst fastgenProfTicketErrors = { ...updatedErrors };\r\n\r\n\t\tlet ready = true;\r\n\t\tfor (var fkey in fastgenProfTicketErrors) {\r\n\t\t\tif (fastgenProfTicketErrors.hasOwnProperty(fkey))\r\n\t\t\t\tif (fastgenProfTicketErrors[fkey] !== '')\r\n\t\t\t\t\tready = false;\r\n\t\t}\r\n\r\n\t\tconsole.log('Ready:', ready);\r\n\t\tconsole.log(genProfTicketDetails);\r\n\r\n\t\tif (ready) {\r\n\t\t\twriteTicketToBlockChain()\r\n\t\t\t\t.then(r => {\r\n\t\t\t\t\tconsole.log(r);\r\n\r\n\t\t\t\t\t// Send mail [Uncomment below when deploying]\r\n\t\t\t\t\tlet templateParams = {\r\n\t\t\t\t\t\tfrom: 'SYSTEM',\r\n\t\t\t\t\t\tto: genProfTicketDetails.email,\r\n\t\t\t\t\t\tsubject: \"Registration Ticket\",\r\n\t\t\t\t\t\treply_to: \"feedback.dapp@gmail.com\",\r\n\t\t\t\t\t\thtml: \"<b>Respected sir</b>, <br><br>\" +\r\n\t\t\t\t\t\t\t\"Please use this unique ticket: [ <b>\" + r + \"</b> ] to get registered. Please do not share this with anyone. <br><br>\" +\r\n\t\t\t\t\t\t\t\"Best wishes,<br>\" +\r\n\t\t\t\t\t\t\t\"Feedback-DApp team\",\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\temailjs.send('service_kqkqbxv', 'template_x0xd5h8', templateParams)\r\n\t\t\t\t\t\t.then(function (response) {\r\n\t\t\t\t\t\t\tprops.onToastChange('TxN SUCCESS: Ticket generated and sent', 'success', true);\r\n\t\t\t\t\t\t\tsetTimeout(() => props.closeModal(), 3500);\r\n\t\t\t\t\t\t\tconsole.log('Email success: ', response.status, response.text);\r\n\t\t\t\t\t\t}, function (error) {\r\n\t\t\t\t\t\t\tprops.onToastChange('ERROR: While sending email', 'error', true);\r\n\t\t\t\t\t\t\tconsole.log('Email fail: ', error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}).catch(e => {\r\n\t\t\t\t\tready = false;\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\tif (e.code === '4001')\r\n\t\t\t\t\t\tprops.onToastChange('TxN WARN: Denied by user', 'warning', true);\r\n\t\t\t\t\telse if (e.code === '-32603')\r\n\t\t\t\t\t\tprops.onToastChange('TxN ERROR: Invalid password', 'error', true);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tprops.onToastChange('TxN ERROR: Something went wrong', 'error', true);\r\n\t\t\t\t}).finally(() => props.onLoading(false));\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst handlePasswordSubmit = () => {\r\n\t\tprops.onLoading(true);\r\n\t\tlet updatedErrors = { ...changePasswordErrors };\r\n\r\n\t\tfor (var key in changePasswordDetails)\r\n\t\t\tif (changePasswordDetails.hasOwnProperty(key))\r\n\t\t\t\tupdatedErrors = validateChnagePasswordInput(key, changePasswordDetails[key], updatedErrors);\r\n\r\n\t\tsetChangePassworErrors({ ...updatedErrors });\r\n\t\tconst fastChangePassworErrors = { ...updatedErrors };\r\n\r\n\t\tlet ready = true;\r\n\t\tfor (var fkey in fastChangePassworErrors) {\r\n\t\t\tif (fastChangePassworErrors.hasOwnProperty(fkey))\r\n\t\t\t\tif (fastChangePassworErrors[fkey] !== '')\r\n\t\t\t\t\tready = false;\r\n\t\t}\r\n\r\n\t\tconsole.log('Ready:', ready);\r\n\t\tconsole.log(changePasswordDetails);\r\n\r\n\t\tif (ready) {\r\n\t\t\twritePasswordToBlockChain()\r\n\t\t\t\t.then(r => {\r\n\t\t\t\t\tconsole.log('Password changed: ', r);\r\n\t\t\t\t\tprops.onToastChange('TxN SUCCESS: Password changed', 'success', true);\r\n\t\t\t\t\tsetTimeout(() => props.closeModal(), 3500);\r\n\t\t\t\t}\r\n\t\t\t\t).catch(e => {\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\tif (e.code === '4001')\r\n\t\t\t\t\t\tprops.onToastChange('TxN WARN: Denied by user', 'warning', true);\r\n\t\t\t\t\telse if (props.contracts.feedbackData == null)\r\n\t\t\t\t\t\tprops.onToastChange('INTERNAL-ERROR: Contract not deployed', 'error', true);\r\n\t\t\t\t\telse if (e.code === '-32603')\r\n\t\t\t\t\t\tprops.onToastChange('TxN ERROR: Old password is invalid', 'error', true);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tprops.onToastChange('TxN ERROR: Something went wrong', 'erroor', true);\r\n\t\t\t\t}\r\n\t\t\t\t).finally(() => props.onLoading(false)\r\n\t\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t// Validators\r\n\tconst validateGenProfTicketInput = (field, value, updatedErrors) => {\r\n\t\tswitch (field) {\r\n\t\t\tcase 'password':\r\n\t\t\t\tif (value.length === 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'email':\r\n\t\t\t\tvar re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\t\t\t\tif (value.length === 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse if (!re.test(value))\r\n\t\t\t\t\tupdatedErrors[field] = 'Invalid email!';\r\n\t\t\t\telse if (!(value.endsWith('@itbhu.ac.in') || value.endsWith('@iitbhu.ac.in')))\r\n\t\t\t\t\tupdatedErrors[field] = 'Accepted domains are @itbhu.ac.in or @iitbhu.ac.in';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn updatedErrors;\r\n\t}\r\n\r\n\r\n\tconst validateChnagePasswordInput = (field, value, updatedErrors) => {\r\n\t\tswitch (field) {\r\n\t\t\tcase 'old':\r\n\t\t\t\tif (value.length === 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak\r\n\t\t\tcase 'new':\r\n\t\t\t\tif (value.length === 0)\r\n\t\t\t\t\tupdatedErrors[field] = 'Cannot be empty';\r\n\t\t\t\telse if (value.length < 5)\r\n\t\t\t\t\tupdatedErrors[field] = 'Minimum length: 5';\r\n\t\t\t\telse if (value.length > 30)\r\n\t\t\t\t\tupdatedErrors[field] = 'Maximum length: 30';\r\n\t\t\t\telse if (/[a-zA-Z]/g.test(value) === false)\r\n\t\t\t\t\tupdatedErrors[field] = 'Should contain at least one alphabet';\r\n\t\t\t\telse if (/\\d/.test(value) === false)\r\n\t\t\t\t\tupdatedErrors[field] = 'Should contain at least one digit';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'confirm':\r\n\t\t\t\tif (value !== changePasswordDetails.new)\r\n\t\t\t\t\tupdatedErrors[field] = 'Should match the new password';\r\n\t\t\t\telse\r\n\t\t\t\t\tupdatedErrors[field] = ''\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn updatedErrors;\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className='cards'>\r\n\t\t\t<AdminFunctionBox\r\n\t\t\t\tdata={{ ...genProfTicketDetails, ...changePasswordDetails }}\r\n\t\t\t\terrors={{ ...genProfTicketErrors, ...changePasswordErrors }}\r\n\t\t\t\thandleInputChange={handleGenProfTicketInputChange}\r\n\t\t\t\thandleSubmit={handleGenProfTicketSubmit}\r\n\t\t\t\thandlePasswordInputChange={handleChangePasswordInputChange}\r\n\t\t\t\thandlePasswordSubmit={handlePasswordSubmit}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Admin;"]},"metadata":{},"sourceType":"module"}