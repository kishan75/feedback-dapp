{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useValueLabelClasses = props => {\n  const open = props.open;\n  const utilityClasses = {\n    offset: clsx(open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction SliderValueLabelUnstyled(props) {\n  const children = props.children,\n        className = props.className,\n        value = props.value,\n        theme = props.theme;\n  const classes = useValueLabelClasses(props);\n  return (\n    /*#__PURE__*/\n    React.cloneElement(children, {\n      className: clsx(children.props.className)\n    },\n    /*#__PURE__*/\n    _jsxs(React.Fragment, {\n      children: [children.props.children,\n      /*#__PURE__*/\n      _jsx(\"span\", {\n        className: clsx(classes.offset, className),\n        theme: theme,\n        \"aria-hidden\": true,\n        children:\n        /*#__PURE__*/\n        _jsx(\"span\", {\n          className: classes.circle,\n          children:\n          /*#__PURE__*/\n          _jsx(\"span\", {\n            className: classes.label,\n            children: value\n          })\n        })\n      })]\n    }))\n  );\n}\n\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;\nexport default SliderValueLabelUnstyled;","map":null,"metadata":{},"sourceType":"module"}